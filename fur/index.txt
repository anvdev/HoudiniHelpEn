= Hair and Fur =

#bestbet: fur
#billboard: /images/billboards/amarok.png

"""How to create, style, and add dynamics to hair and fur."""

The tools the [Hair Utils|/shelf/hairtools] shelf let you quickly set up hair and fur objects, jump between objects, as well as animate and simulate. The tools on the [Guide Process|/shelf/guideprocess] and [Guide Brush|/shelf/guidebrushes] shelf tabs are used to style the fur. 

The main difference is that tools on the [Guide Process|/shelf/guideprocess] shelf let you influence the placement and orientation of guide hairs by painting skin attributes, whereas the tools on the [Guide Brush|/shelf/guidebrushes] shelf use actual stroking tools to create hair and style it artistically.

To create fur, start with a piece of geometry and use the [Add Fur|/shelf/groom_addfur] tool on the __Hair Utils__ shelf. By default, two nodes are created: [Guide Groom|Node:obj/guidegroom] and [Hair Generate|Node:obj/hairgen].

[Image:/images/fur/nodes.png]

The Guide Groom and Hair Generate networks have the exact same set up with the exact same workflow, except the hair generation network has less outputs. This makes it very simple to use, since everything is done in SOPs with curves. The [Guide Process|Node:sop/guideprocess] node lets you layer many different operations, and very easily control where the operation takes place along the curve using ramps or by painting attributes on the skin. This allows you to easily create natural looking hair and fur very quickly.

One improvement is that there is no longer a separation between manipulating guide curve geometry or painting skin attributes. Everything flows through a single graph. All of the components that make up the groom are displayed in a single network. Each of the nodes also have at least 3 inputs and 3 outputs, which allows the 3 types of data to flow through the nodes. This results in a very clean and easy to read network, and eliminates the need to reference other nodes. Another advantage is that the operators can be placed in any order, which gives you complete control and flexibility.

[Image:/images/fur/furballs.jpg]

NOTE:
    Mantra uses the SOP network you create to do the grooming and does the cooking of the node network (SOP network) at render time. It does this without taking a license, which allows for rendering with Engine for hair, fur, and anything else that's comprised of curves and points (grass).
    
NOTE:
    Grooming should always be done on the static mesh, not the animated mesh.

@subtopics

== Working with fur ==

::[Fur workflow|/fur/workflow]
::[Creating and styling fur with guide processes|/fur/teddybear]
::[Painting masks to control attributes|/fur/masking]
::[Generating hair cards for games|/fur/haircards]

== Tools for creating fur ==

::[/shelf/groom_addfur]
::[/shelf/groom_guidegroom]
::[/shelf/drawhair]


== Tools for styling with guide processes ==

:: [/shelf/sop_groom_guideinit]
:: [/shelf/sop_groom_curveadvect]
:: [/shelf/reguide]
:: [/shelf/sop_groom_guideprocess_setdir]
:: [/shelf/sop_groom_guideprocess_length]
:: [/shelf/sop_groom_guideprocess_lift]
:: [/shelf/sop_groom_guideprocess_straighten]
:: [/shelf/sop_groom_guideprocess_smooth]
:: [/shelf/sop_groom_guideprocess_frizz]
:: [/shelf/sop_groom_guideprocess_bend]
:: [/shelf/sop_groom_hairclump]
:: [/shelf/drawpartingline]
:: [/shelf/sop_groom_whitehair]


== Tools for styling with brushes ==

::[/shelf/screenbrush]
::[/shelf/surfacebrush]
::[/shelf/lifthair]
::[/shelf/clumphair]
::[/shelf/parthair]
::[/shelf/lengthadjust]
::[/shelf/smoothhair]
::[/shelf/cuthair]
::[/shelf/extendhair]
::[/shelf/groom_recachestrokes]

== Tools for animating and simulating fur ==

:: [/shelf/groom_animateguides]
:: [/shelf/groom_simguides]

== How to ==

::[hairstyle_rasta]


