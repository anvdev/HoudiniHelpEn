= polyneighbours =

#type: vex
#context: all
#tags: proximity
#group: geo

"""Returns an array of the primitive numbers of the edge-neighbours of a polygon."""

:usage: `int[] polyneighbours(<geometry>, int primnum)`

[Include:_common#geometry]


This returns an array of primitive numbers of polygons that share an
edge with this polygon.  It uses the Half-Edge data structure so will
work wtih geometry that supports that (ie, polygons)

@examples

This is roughly equivalent to the following code:

{{{
#!vex
int[] polyneighbours(const string opname; const int primnum)
{
    int result[] = {};

    int start = primhedge(opname, primnum);

    for (int hedge = start; hedge != -1; )
    {
        for (int nh = hedge_nextequiv(opname, hedge);
             nh != hedge;
             nh = hedge_nextequiv(opname, nh))
        {
            int prim = hedge_prim(opname, nh);
            if (prim != -1 && prim != primnum)
            {
                append(result, prim);
            }
        }
        hedge = hedge_next(opname, hedge);
        if (hedge == start)
            break;
    }

    return result;
}
}}}


@related

- [Vex:neighbours]
