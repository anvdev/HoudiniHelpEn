= snoise =

#type: vex
#context: all
#tags: noise
#group: noise

"""These functions are similar to wnoise."""

:usage: `float snoise(vector pos)`
:usage: `vector snoise(vector pos)`
:usage: `float snoise(vector pos, int turbulence, float rough, float atten)`
:usage: `vector snoise(vector pos, int turbulence, float rough, float atten)`
:usage: `float snoise(vector pos, int periodX, int periodY, int periodZ)`
:usage: `vector snoise(vector pos, int periodX, int periodY, int periodZ)`
:usage: `float snoise(vector pos, int periodX, int periodY, int periodZ, int turbulence, float rough, float atten)`
:usage: `vector snoise(vector pos, int periodX, int periodY, int periodZ, int turbulence, float rough, float atten)`

These functions are similar to [wnoise|Vex:wnoise]. The noise returned
is based on the weights of all of the closest points, with each point's
contribution based on a meta-ball like rolloff curve. That is, if the
sample point is close to the sphere, its contribution will be greater.

The bounds on the noise are roughly (-1.7, 1.7). Only 3D noise is
supported. However, this noise has the ability to compute turbulence
with roughness and attenuation on the noise.


@related

[Include:_common#noiselinks/]
