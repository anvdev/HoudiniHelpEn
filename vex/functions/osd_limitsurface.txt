= osd_limitsurface =

#type: vex
#context: all
#tags: subd
#group: subd

"""Evaluates an attribute at the subdivision limit surface using Open Subdiv."""

:usage: `int osd_limitsurface(<geometry>, string attrib_name, int patch_id, float u, float v, <type> &result)`
:usage: `int osd_limitsurface(<geometry>, string attrib_name, int patch_id, float u, float v, float &result[])`

[Include:_common#geometry]

`osd_limitsurface` evaluates the point attribute in the geometry specified as a
subdivision surface an returns the result of the attribute on the limit
surface.  For vertex attributes, use `osd_limitsurfacevertex()`.

Possible reasons for failure are:

* The geometry contains no polygons or the topology can't be converted using Open Subdiv

* The attribute doesn't exist on the input geometry.

* The attribute size/type doesn't match the VEX type.


@examples

:box:Generate a point cloud on the limit surface of a subdivision mesh.
    {{{
    #!vex
    int npatches = osd_patchcount(file);
    for (int patch = 0; patch < npatches; patch++)
    {
        for (int v = 0; v < 100; v++)
        {
            vector	P;
            if (osd_limitsurface(file, "P", patch, nrandom(), nrandom(), P))
            {
                int	ptid = addpoint(geohandle, P);
            }
        }
    }
    }}}


@related

- [Vex:osd_facecount]
- [Vex:osd_firstpatch]
- [Vex:osd_patchcount]
