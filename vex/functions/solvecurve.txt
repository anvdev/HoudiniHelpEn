= solvecurve =

#type: vex
#context: all
#tags: transform, solve
#group: transform

"""Applies a curve inverse kinematics algorithm to a skeleton."""

:usage: `vector[] solvecurve(float lengths[], int closed, int orienttonormal, vector tangent, vector points[], vector normals[])`
:usage: `vector[] solvecurve(string op, float lengths[], int closed, int orienttonormal, vector tangent, int normalcalcmethod, matrix relmat)`

Returns a array of local bone rotations in degrees.

:arg:op:
    The SOP path to a curve to evaluate.

:arg:lengths:
    The lengths of all the bones to solve.

:arg:closed:
    Close the curve.

:arg:orienttonormal:
    Use the normals from the curve to orient the bones.

:arg:tangent:
    A tangent vector to orient the curve.

:arg:points:
    An array of points to define the curve.

:arg:normals:
    An array of normals to define the curve.

:arg:normalcalcmethod:
    A normal calculation method when evaluating using a SOP. (0 default, 1 none, 2 interpolate with quaternions, 3 interpolate with twist angles in 0,180 range, 4 interpolate with twist angles in any range.)

:arg:relmat:
    A relative matrix used to transform the points, normals and tangent relative to the origin.
    This is normally the invert matrix of the root of the chain.

@related
- [Vex:solvefbik]
- [Vex:solveconstraint]
- [Vex:solveik]

