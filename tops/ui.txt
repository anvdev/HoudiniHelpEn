= PDG node network interface =

"""How to use the unique network editor features of TOP networks."""

See also [how to cook the network|cooking].


== TOP nodes ==

[Image:/images/pdg/tops_node_ui.svg]


=== Work item dots ===

The distinguishing feature of TOPs nodes is the grid of dots representing the work items in each node. If a node hasn't generated work items yet, it will not show any dots. You can pre-generate the "static" work items (those items known ahead of time) using __Tasks > Generate Static Work Items__. Dynamic work items will appear as the network runs (see [cooking the network|cooking]).

:task: Show information about an individual work item:
    * Press ((MMB)) on a work item dot to show a pop-up info window containing information about the work item, including its attribute values.

    * You can also ((Ctrl + MMB)) click a dot to open a persistent info window, or right-click the dot and choose __Task info__.

:task: Hide the dots on one node:
    * Click the up-pointing triangle in the bottom-left corner of the node to "collapse" the node, hiding the dots.
    * Click the down-pointing triangle on a collapsed node to show the dots again.

:task: Hide the dots on all nodes:
    In the menus at the top of the network editor, turn off __Tasks > Show Task Graph__.

    This may be necessary if networks have huge numbers of visible work items. See also the controls in the [display options|#displayopts] for limiting the number of dots shown on each node.

:task: Limit the number of dots shown on nodes:
    See the [display options|#displayopts].

:task: Show a table of all work item data:
    Click the table icon in the bottom-right corner of a TOP node to open the [task graph table|#table].

The color of the dots normally indicates the individual work item's status (you can switch to show relative speed as color instead, see [visualizing performance|perf]).

Dot ||
    Color ||
        #width: 20%

        Status ||
            #width: 20%

            Description ||

<font style="color:#ADFF49">+(fa-circle)</font> |
    Bright green |
        In progress (cooking) |
            The work item is currently running.

<font style="color:#309200">+(fa-circle)</font> |
    Medium green |
        Done (cooked) |
            The work item finished without any warning or error.

<font style="color:#354B60">+(fa-circle)</font> |
    Dark blue-grey |
        Waiting |
            The work item has started but is waiting (to be scheduled or for upstream work to finish).

<font style="color:#808080">+(fa-circle)</font> |
    Grey |
        Uncooked/Not cooking |
            The work item has been generated but hasn't run yet.

<font style="color:#FF9900">+(fa-circle)</font> |
    Orange |
        Warning |
            The work item generated a warning.

<font style="color:#FF3300">+(fa-circle)</font> |
    Red |
        Failed |
            The work item encountered an error (or the executable returned a non-zero status code).

<font style="color:#69511B">+(fa-circle)</font> |
    Brown |
        Canceled |
            The user canceled the cook while the task item was running.


=== Status icon and counts ===

To the left of each TOP node, Houdini shows an icon indicating the overall status of the work items in the node, and a table of the number of work items with each status. When the node is cooking, a ring around the icon shows the progress of the work items. (If you hide work items with certain statuses using the [display options|#displayopts], those items are not included in the progress.)

Icon ||
    Status ||
        #width: 25%

        Description ||

[Largeicon:TOP/pdg_unstarted] |
    #style: background-color: #333;

    Not started |
        This node is not running.

[Largeicon:TOP/pdg_waiting] |
    #style: background-color: #333;

    Waiting |
        This node has started, but is waiting for its items to be scheduled or for upstream dynamic items to finish.

[Largeicon:TOP/pdg_cooking] |
    #style: background-color: #333;

    Cooking |
        This node is running, the work items inside are being scheduled on the machine/render farm.

[Largeicon:TOP/pdg_done] |
    #style: background-color: #333;

    Done |
        All work items in this node have finished running with no warnings/errors.

[Largeicon:TOP/pdg_warning] |
    #style: background-color: #333;

    Warning |
        At least one work item in this node raised a warning as it ran.

[Largeicon:TOP/pdg_error] |
    #style: background-color: #333;

    Error |
        At least one work item in this node raised an error as it ran.


== Task graph table == (table)

* To show the task graph table, click the table icon in the bottom-right corner of a TOP node.

    The task graph table shows the metadata of all work items in the graph, or all work items in a particular node.

    [Image:/images/pdg/task_graph_table.png]

* Use the __Work items to show__ menu to choose whether to show all work items in the graph, only the work items in the current node, or only the work items in the node with the output flag.


== Tasks menu == (top_menu)
#action_context: h.pane.wsheet

This menu appears at the top of the network editor when viewing a TOP network.

Generate Static Work Items:
    #action: generate_static_tops

    Makes every node in the network generate any "static" work items it knows will be needed ahead of time, based on parameter values and/or incoming static items.

Cook Output Node:
    #action: cook_output_node

    Starts cooking the network to produce the final output.

Cook Selected Node:
    #action: cook_selected_node

    Cooks the network down to the selected node, instead of down to the node with the output flag. This can be useful to test different parts of the network.

~~~~~

Dirty All:
    #action: dirty_all_tops

    Marks all nodes in the network as needing to recook. This means the next time the network cooks, all work items will run.

Delete All Results From Disk:
    #action: delete_tops_results

    Deletes all result files tracked by work items in the graph.

~~~~~

Dirty Selected Node:
    #action: dirty_node

    Marks the selected node as needing to recook. The next time the network cooks, all work items in the node will run.

Dirty and Cook Selected Node:
    #action: dirty_cook_selected_node

    Forces all work items in the network to recook down to the selected node. This can be useful to test different parts of the network.

Dirty and Cook Output Node:
    #action: dirty_cook_output_node

    Forces all work items in the network to recook down to the final output.

Delete Selected Node Results From Disk:
    #action: dirty_clean_node

    Deletes all result files tracked by work items in the selected node.

~~~~~

Cancel Current Cook:
    #action: cancel_cook

    Stops cooking the network and may cancel "in-flight" processes.

Pause Current Cook:
    #action: pause_cook

    Pauses cooking the network. Any "in-flight" processes will continue to run.

~~~~~

Show Task Graph:
    #action: showtaskgraph

    Whether to show dots representing work items inside the nodes.

Task Graph Display Options:
    #action: open_task_graph_display_options

    Opens a window with [TOP-specific display options|#displayopts]

~~~~~

Show Task Graph Performance:
    #action: display_taskgraphperf

    When this is on, the network colors dots according to relative speed or output size, rather than by status. See [visualizing performance|perf] for more information.

Show:
    #action: taskgraphperfstatname

    When __Show task graph performance__ is on, this controls whether to color work items by relative cook time or output size.


== Display options == (displayopts)

=== Filter ===

The "Tasks to show" and "Always show" controls are not very useful and can be very confusing. They may be removed in a future version.

Tasks to show:
    *Important*: These controls do not affect static work items.

    You can turn off display of (dynamic) work items with certain states.

Always show:
    These controls override the visibility controls under "Tasks to show".

~~~~~

Sort by:
    How to order work item dots inside a node body.

    Automatic:
        If the network is [visualizing performance|perf], sort by performance, otherwise sort by index. This is the default.

    State:
        Sort by the work item state, for example "cooking", "cooked", "failed", and so on.

    ID:
        Sort by each work item's unique ID.

    Index:
        Sort by the index attribute. This tends to keep child items in line with their parents.

Collapse:
    Off:
        Do not auto-collapse nodes. This is the default and the recommended setting.

    By static ancestor:
        Auto-collapse nodes that don't have static ancestors of the selected work item.

    By batch:
        ???


=== Display ===

Isolate highlighted tasks:
    When you select a work item, this hides all work items that aren't ancestors or descendents of the selected item.

Limit rows:
    Limit the maximum number of rows of dots to show inside nodes. This is a good idea since nodes can (by design or accidentally) easily generate thousands of work items.

Max number of Rows:
    When __Limit rows__ is on, the maximum number of rows of dots to show inside nodes. When extra rows are hidden, the visible rows will end with a "fade out" effect to show that more work items exist but are not shown.

Tasks per row:
    How many dots to show on each row inside nodes. The default is 10. Decreasing this number makes the dots bigger, increasing it makes the dots smaller.

