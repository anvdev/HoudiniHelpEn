= pdg.Event =
#type: pyclass
#cppname: PDG_Event
#group: events

"""Represents an event that occurred while the graph was running."""

If you set up an event handler on a node or graph (using
[Py:pdg.Node#addEventHandler] or [Py:pdg.GraphContext#addEventHandler]),
the graph passes an `Event` object to the handler when the corresponding
event occurs as the graph is running.


@methods

::`context` : [Py:pdg.GraphContext]:
    #cppname: PDG_Event::context

    The PDG graph context that emitted the event, or contains the [Py:pdg.Node]
    that emitted the event.

::`currentState` : [Py:pdg.WorkItemState]:
    #cppname: PDG_Event::currentState

    If the event is a work item event, this is set to the current state of the
    work item.

::`dependencyId` : `int`:
    #cppname: PDG_Event::dependencyId

    If the event is a dependency or parent change event, this is the id of
    the dependency/parent work item

::`lastState` : [Py:pdg.WorkItemState]:
    #cppname: PDG_Event::lastState

    If the event is a work item state change event, this is set to the previous
    work item state.

::`message` : `str`:
    #cppname: PDG_Event::message

    If the event is a warning or error, this string contains the message
    associated with that warning/error.

::`node` : [Py:pdg.Node]:
    #cppname: PDG_Event::node

    The node that the event was emitted from, or `None` if it as a top level
    context event

::`type` : [Py:pdg.EventType]:
    #cppname: PDG_Event::eventType

    The event type

::`workItemId` : `int`:
    #cppname: PDG_Event::workItemId

    The id of the work item, if the event is a work item related event.
