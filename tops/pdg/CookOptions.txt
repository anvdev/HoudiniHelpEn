= pdg.CookOptions =
#type: pyclass
#cppname: PDG_CookOptions
#group: cooking

"""Container for cook options."""

You can pass this object to `pdg.GraphContext._cook()` to configure how the
graph cooks.


@methods

::`autoRecook` : `bool`:
    #cppname: PDG_CookOptions::autoRecook

    When this option is set to `True`, the graph will automatically recook
    at the interval specified in the `autoRecookInterval` property. 

    Defaults to `False`.

::`autoRecookInterval` : `int`:
    #cppname: PDG_CookOptions::autoRecookInterval

    When auto recooking, the interval in milliseconds between recooks.

    Defaults to 100.

::`blocking` : `bool`:
    #cppname: PDG_CookOptions::blocking

    Indicates whether or not the cook should block the caller, or cook in the
    background.

    Defaults to `False`

::`cookType` : [Py:pdg.cookType]:
    #cppname: PDG_CookOptions::cookType

    The type of cook to perform.

    Defaults to `pdg.cookType.Full`.

::`nodeNames` : `list` of `str`:
    #cppname: PDG_CookOptions::nodeNames

   The names of the nodes to cook, as an array of strings. Used when the
   `cookType` value is set to `pdg.cookType.Node` or `pdg.cookType.GenerateNode`.

::`staticFilter` : [Py:pdg.Filter]:
    #cppname: PDG_CookOptions::staticFilter

    The set of the static items that should be cooked.

    Defaults to all static items.
