= pdg.SchedulerBase =
#type: pyclass
#cppname: PDG_Scheduler
#superclass: pdg.TypeInstance
#group: schedulers
#tags: internal

"""Represents a scheduler in the dependency graph."""


@methods

::`cleanTempDirectory(self)`:
    #cppname: PDG_Scheduler::cleanTempDirectory

    Deletes the temporary directory and its contents.

::`cleanSharedServerInfo(self, server_name)`:
    #cppname: PDG_Scheduler::cleanSharedServerInfo

    Clears the meta data for an existing shared server instance, as specified
    by `server_name`.

::`endSharedServer(self, server_name)` -> `bool`:
    #cppname: PDG_Scheduler::endSharedServer

    Closes an existing shared server instance, as specified by `server_name`.
    Returns `True` on success.

::`getDefaultUserEnvironment(self)` -> `dict` of `str`:
    #cppname: PDG_Scheduler::getDefaultUserEnvironment

    Returns the default user environment.

::`getLogURI(self, work_item)` -> `str`:
    #cppname: PDG_Scheduler::getLogURI

    Returns the log URI for the specified work item.

::`getSharedServerInfo(self, server_name)` -> `dict`:
    #cppname: PDG_Scheduler::getSharedServerInfo

    Returns the shared server info dict for the specified server.

::`getSharedServers(self)` -> `list` of `str`:
    #cppname: PDG_Scheduler::getSharedServers

    Returns the list of shared server names.

::`getStatusURI(self, work_item)` -> `str`:
    #cppname: PDG_Scheduler::getStatusURI

    Returns the status URI for the specified work item.

::`isWorkItemReady(self, item_name, index)` -> `bool`:
    #cppname: PDG_Scheduler::isWorkItemReady

    Returns `True` if the specified work item is ready to cook, else `False`.

    `index` should be -1 if the item is not in a batch, or the batch index of
    the item if the work item is a sub item in a batch.

::`localizePath(self, path)` -> `str`:
    #cppname: PDG_Scheduler::localizePath

    Localizes a remote path with respect to the scheduler's working directory.
    This replaces `__PDG_DIR__` with the real working directory on this machine.

::`onWorkItemCanceled(self, item_name, index)`:
    #cppname: PDG_Scheduler::onWorkItemCanceled

    Called when a work item has been canceled.

    `index` should be -1 if the item is not in a batch, or the batch index of
    the item if the work item is a sub item in a batch.

::`onWorkItemFailed(self, item_name, index)`:
    #cppname: PDG_Scheduler::onWorkItemFailed

    Called when a work item has failed.

    `index` should be -1 if the item is not in a batch, or the batch index of
    the item if the work item is a sub item in a batch.

::`onWorkItemFileResult(self, item_name, index, result, tag, checksum)`:
    #cppname: PDG_Scheduler::onWorkItemFileResult

    Called when a work item has a new result. The `result` is
    the path to the file as a string, `tag` is the fie tag string and `checksum`
    is an integer value.

    `index` should be -1 if the item is not in a batch, or the batch index of
    the item if the work item is a sub item in a batch.

::`onWorkItemSetAttribute(self, item_name, attribute_name, values)`:
    #cppname: PDG_Scheduler::onWorkItemSetAttribute

    Called when an attribute value is set/changed on a work item.
    `values` is an array of `str`, `float` or `int` values, and
    `attribute_name` is the string name of the attribute.

::`onWorkItemStartCook(self, item_name, index)`:
    #cppname: PDG_Scheduler::onWorkItemStartCook

    Called when a work item has begun cooking.

    `index` should be -1 if the item is not in a batch, or the batch index of
    the item if the work item is a sub item in a batch.

::`onWorkItemStartSucceeded(self, item_name, index)`:
    #cppname: PDG_Scheduler::onWorkItemStartSucceeded

    Called when a work item has successfully finished.

    `index` should be -1 if the item is not in a batch, or the batch index of
    the item if the work item is a sub item in a batch.

::`requestTask(self)`:
    #cppname: PDG_Scheduler::requestTask

    Requests another call to the scheduling routine, if there are work items in
    the backlog.

::`setSharedServeInfo(self, server_name, info)`:
    #cppname: PDG_Scheduler::setSharedServerInfo

    Sets the shared server info for the specified server.

::`stopCook(self)`:
    #cppname: PDG_Scheduler::stopCook

    Forces all scheduled jobs to be canceled.

::`submitAsJob(self, graph_name, node_name)` -> `str`:
    #cppname: PDG_Scheduler::submitAsJob

    Submits the current network as a job with this scheduler.

::`transferFile(self, local_path)` -> `bool`:
    #cppname: PDG_Scheduler::transferFile

    Transfers a local file into the scheduler's working directory, and makes
    intermediate paths if needed. Returns `True` on success.
