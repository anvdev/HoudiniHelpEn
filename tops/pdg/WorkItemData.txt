= pdg.WorkItemData =
#type: pyclass
#cppname: PDG_WorkItemData
#superclass: pdg.TypeInstance
#group: workitems

"""Exposes methods to access work item data through Python"""

This object represents the data for a particular work item, and contains
methods for adding and querying attributes on the work item. The data object
itself can be accessed through the [pdg.WorkItem.data|Hom:pdg.WorkItem] property.

@methods

::`clearFloatData(self)`:
    #cppname: PDG_WorkItemData::clearFloatData
    Clears all float attributes on the work item.

::`clearIntData(self)`:
    #cppname: PDG_WorkItemData::clearIntData
    Clears all integer attributes on the work item.

::`clearStringData(self)`:
    #cppname: PDG_WorkItemData::clearStringData
    Clears all string attributes on the work item

::`data(self, name, index)` -> `int`, `float` or `str`:
    #cppname: PDG_WorkItemData::data
    Returns a float, int or string attribute values for the specified name and
    index.

::`dataArray(self, name)` -> `list` of `int`, `float`, or `str`:
    #cppname: PDG_WorkItemData::dataArray
    Returns a list of float, int or string attribute values for the specified
    name.

::`deserializeString(self, string)` -> `bool`:
    #cppname: PDG_WorkItemData::deserializeString
    Deserializes the work item data in `string`, and returns `True` on success.

::`floatData(self, name, index)` -> `float`:
    #cppname: PDG_WorkItemData::floatData
    Looks up a floating point attribute value with the specified name and index.

::`floatDataArray(self, name)` -> `list` of `float`:
    #cppname: PDG_WorkItemData::floatDataArray
    Looks up a floating point attribute array with the specified name.

::`intData(self, name, index)` -> `int`:
    #cppname: PDG_WorkItemData::intData
    Looks up an integer attribute value with the specified name and index.

::`intDataArray(self, name)` -> `list` of `int`:
    #cppname: PDG_WorkItemData::intDataArray
    Looks up an integer attribute array with the specified name.

::`removeData(self, name, index=0)` -> `bool`:
    #cppname: PDG_WorkItemData::removeData
    Removes an attribute with the specified name. If `index` is greater than 0,
    only attribute values beyond the index are removed - the attribute array is
    truncated. Returns `True` on success.

::`setFloat(self, name, value, index)` -> `bool`:
    #cppname: PDG_WorkItemData::setFloat
    Sets a floating point attribute value with the specified name and index.

::`setFloatArray(self, name, floats)` -> `bool`:
    #cppname: PDG_WorkItemData::setFloatArray
    Sets a floating point attribute array with the specified name.

::`setInt(self, name, value, index)` -> `bool`:
    #cppname: PDG_WorkItemData::setInt
    Sets an integer attribute value with the specified name and index.

::`setIntArray(self, name, value)` -> `bool`:
    #cppname: PDG_WorkItemData::setIntArray
    Sets an integer attribute array with the specified name.

::`setString(self, name, value, index)` -> `bool`:
    #cppname: PDG_WorkItemData::setString
    Sets a string attribute value with the specified name and index.

::`setStringArray(self, name, value)` -> `bool`:
    #cppname: PDG_WorkItemData::setStringArray
    Sets a string attribute array with the specified name.

::`stringData(self, name, index)` -> `str`:
    #cppname: PDG_WorkItemData::stringData
    Looks up a string attribute value with the specified name and index.

::`stringDataArray(self, name)` -> `list` of `str`:
    #cppname: PDG_WorkItemData::stringDataArray
    Looks up a string attribute array with the specified name.

::`allDataMap` -> `dict` of `list` of `int`, `float`, and `str`:
    All the data on the work item, as a dict from name to arrays of 
    string, float and int values.

::`floatDataMap` -> `dict` of `list` of `float`:
    #cppname: PDG_WorkItemData::floatData
    The floating point attributes on the work item, as a map to lists of
    float values.

::`intDataMap` -> `dict` of `list` of `int`:
    #cppname: PDG_WorkItemData::intData
    The integer attributes on the work item, as a map to lists of int values.

::`stringDataMap` -> `dict` of `list` of `str`:
    #cppname: PDG_WorkItemData::stringData
    The string attributes on the work item, as a map to lists of string values.

::`workItem` -> [Py:pdg.WorkItem]:
    #cppname: PDG_WorkItemData::workItem
    The work item that owns this data object.
