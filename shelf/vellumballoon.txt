#icon: SHELF/vellum_balloon
#parent: vellum

= Vellum Balloon =

"""Configures vellum balloon from geometry and adds to current vellum simulation."""

:video:
    #src: /videos/vellumballoon.mp4

This tool lets you pick a piece of geometry and configure it as vellum balloon.  It will then be added to the active simulation and merged with any other existing vellum objects.

A balloon consists of two types of constraints.  A stretchable cloth constraint is built for the outer surface.   A pressure constraint is added to keep the cloth from collapsing.  The pressure constraint uniformly pushes the cloth outwards to maintain a global volume, so squeezing one area will bulge distant areas.

This is more expensive than a [Vellum Strut Softbody|/shelf/vellumsoftbody] since instead of creating struts between opposite interior points, it computes the volume of the entire model and inflates or shrinks the model to keep the same volume. The [Vellum Strut Softbody|/shelf/vellumsoftbody] is a better choice for soft bodies as it is faster to solve.

NOTE:
    The topology of your object could affect how pressure is applied. You may have to simplify the topology by using PolyReduce or increase the __Stiffness__ parameter in the `pressure_constraints` node to properly inflate your object.

== Using Vellum Balloon == (includeme)

    # Select the geometry object to configure as vellum balloon.
    
    # Click the [Icon:SHELF/vellum_balloon]__Vellum Balloon__ tool on the __Vellum__ tab.

    NOTE:
        There is a [Surface Collider|/shelf/clothbodycollider] tool on the __Vellum__ shelf that you can use for objects that will be colliding with your balloon. It is essentially the same as the [Deforming Object|/shelf/deformingobject] shelf tool on the __Collisions__ tab, as they are both designed for deforming objects. However the [Surface Collider|/shelf/clothbodycollider] does not try to generate a VDB collision object, which is less expensive.
    
For specific parameter information, see the [Vellum Constraints|Node:sop/vellumconstraints] and [Vellum Solver|Node:dop/vellumsolver] help.

== Working with Vellum Balloon ==

By default the Stretch __Stiffness__ is very low, since balloons have to be able to stretch. 

There is an __Output Group__ parameter on the `pressure_constraints` [Vellum Constraints|Node:sop/vellumconstraints] node which adds the generated stretch constraints to this primitive group. This is useful so you can edit them later with a [Vellum Constraint Property DOP|Node:dop/vellumconstraintproperty]. For example, you can output the pressure constraints and animate them using the __Rest Length Scale__ parameter.
