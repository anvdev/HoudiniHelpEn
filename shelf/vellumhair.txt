#icon: SHELF/vellum_hair
#parent: vellum

= Vellum Hair =

"""Configures vellum hair from geometry and adds to current vellum simulation."""

:video:
    #src: /videos/vellumhair.mp4

This tool lets you pick a piece of geometry and configure it as vellum hair.  It will then be added to the active simulation and merged with any other existing vellum objects.

Hair consists of polygonal lines that maintain their length and orientation. The solve includes the idea of twist, so torsion applied to the hair will cause buckling.

Usually the roots of the hair need to be pinned to the animation.   The [Group Expression SOP|Node:sop/groupexpression] has a useful preset for selecting the first point of curves that can be useful for this.

Technically hair only supports unbranching curves.  However, if branched curves are given, they will be split at branches and a `branchweld` attribute will be used to allow the reconstruction of the original geometry.

== Using Vellum Hair == (includeme)

    # Select the geometry object to configure as vellum hair.
    
    # Click the [Icon:SHELF/vellum_hair]__Vellum Hair__ tool on the __Vellum__ tab.

    NOTE:
        There is a [Surface Collider|/shelf/clothbodycollider] tool on the __Vellum__ shelf that you can use for objects that will be colliding with your hair. It is essentially the same as the [Deforming Object|/shelf/deformingobject] shelf tool on the __Collisions__ tab, as they are both designed for deforming objects. However the [Surface Collider|/shelf/clothbodycollider] does not try to generate a VDB collision object, which is less expensive.
    
For specific parameter information, see the [Vellum Constraints|Node:sop/vellumconstraints] and [Vellum Solver|Node:dop/vellumsolver] help.

== Working with Vellum Hair ==

Vellum hair tries to maintain both the distance and orientation of particular pieces. Increasing the Bend __Stiffness__ and __Damping Ratio__ will cause hair to not twist but instead stay stiff in the direction that it's pointing. 

Hair has support for twisting, which will prevent the line from twisting around its axis even though it's a one dimensional line. There is another a __Constraint Type__ called __String__ on the [Vellum Constraints|Node:sop/vellumconstraints] node, which is a simpler constraint that doesn't deal with twisting. It still has Bend constraints; however, the bend is only on by angle, so the hair is able to twist all the way around.

Typically you need to pin the roots of the hair to the scalp. An easy way of doing this, if your geometry doesn't have roots already set, is to use a [Group Expression SOP|Node:sop/groupexpression]. Set the __Group Type__ to points, choose __First Point of Primitive__ from the __Vexpression__ dropdown menu, and name the __Group__ "roots". This will group the first point of each of your primitives.

The __Orientation Pin Type__ is an important parameter on the [Vellum Constraints|Node:sop/vellumconstraints] node for hair, because if you don't pin the orientation it could fall flat instead of the way it was groomed. The default is __Same as Position__; however, you can have it set to __Soft__ when the __Pin Type__ is __Permanent__ so it can flex and rotate around. 

NOTE:
        The damping is set relatively low for Vellum Hair. You may want to increase the bend damping and occasionally the stretch damping as well.