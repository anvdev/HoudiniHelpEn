= Install and manage digital assets =

== Asset libraries ==

Digital asset definitions are saved in digital asset library files with a `.hda` extension. (Older versions of Houdini saved libraries with a `.otl` extension.) Houdini will load the assets from any library files it finds in `HOUDINIPATH/otl` and make them available to the user alongside the "factory" nodes included with Houdini.

* A large studio can put site-wide assets in a central, networked directory and make sure all artists have that directory in their `$HOUDINI_PATH`.
    #glyph: fa-umbrella

* You can put assets specific to a project in `$JOB/hda`. See [project management|/basics/project] for how to set up `$JOB`.
    #glyph: fa-users

* You can put your own personal assets in the `hda` directory in your user account's Houdini preferences. This is the default location when you create a new asset.
    #glyph: fa-user

:task:Manually install the asset(s) in a library file:
    Choose __File > Import > Houdini digital asset__.

:task:Manually uninstall an asset library:
    # Choose __Windows > Operator Type Manager__.
    
    # Right-click the library name and choose __Uninstall__.

NOTE:
    If you are using assets containing other assets (for example, a character asset containing a skeleton setup asset), you need to make sure the library files for _all_ assets are [installed|install], not just the "top" asset. If nested assets are not installed, the top level node will error.

    If you install the libraries containing the missing nodes, the top-level asset will automatically start working (you don't need to restart Houdini).

== Manage assets ==

:task:Find which file an asset comes from:
    Press ((MMB)) on an instance of the asset in the network editor. A window with information about the node will appear including where it is defined.
    
    ~~~ Or ~~~
    
    # Choose __Windows > Operator Type Manager__.
    
    # Find the asset in the tree. Right-click it and choose __Jump to current definition__.
    
:task:Create a copy of an existing asset:
    # Choose __Windows > Operator Type Manager__.
    
    # Find the asset you want to copy in the tree. Right-click it and choose __Copy__.
    
    # Choose the library file to save the new asset into, then click __Accept__.

:task:Choose between multiple available sources of an asset:
    # Choose __Windows > Operator Type Manager__.
    
    # Find the asset you want to use in the tree. Right-click it and choose __Use this definition__.

    You can also __Jump to current definition__ and __Jump to next definition__ in the context menu to find all available sources of an asset in the tree.

:task:Remove an asset from a library file:
    # Choose __Windows > Operator Type Manager__.

    # Find the asset you want to delete in the tree. Press ((Del)) or right-click it and choose __Delete__.
