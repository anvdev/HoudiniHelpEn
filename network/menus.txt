= Network editor |> menus =

"""Explains all the menu items in the network editor menus."""


== Add == (add_menu)
#display: raised

Node:
    #action: add_op
    
    Opens the node type menu to let you add a new node to the current network.

File Node:
    #action: addfileop
    
    Opens a file browser to let you choose a file, then creates a File node to import that file.

Network Box:
    #action: create_netbox
    
    Adds a [box|organize#netbox] to the current network. Any selected nodes are automatically added to the box. You can use boxes to visually group nodes and move them together.

Sticky Note:
    #action: add_postit
    
    Adds a [sticky note|organize#notes] to the current network. You can use notes to annotate nodes or parts of the network.

Background Image:
    #action: add_image
    
    Adds a [background image|organize#images] to the current network. You can use images to annotate nodes or parts of the network.

~~~~~

Node Bundle:
    #action: add_bundle
    
    Creates a new [node bundle|/ref/panes/bundles] from the selected nodes.

Node Group:
    #action: add_group
    
    Creates a new node group from the selected nodes.


== Edit == (edit_menu)
#display: raised

Select All:
    #action: select
    
    Selects all items in the current network.

~~~~~

Cut:
    #keyfor: h.cut
    
    Copies the selected item(s) to the clipboard and removes them from the network.

Copy:
    #keyfor: h.copy
    
    Copies the selected item(s) to the clipboard.

Paste:
    #keyfor: h.paste

    Pastes any items on the clipboard into the current network.

Delete:
    #action: del_netbox_and_contents
    
    Removes any selected items, but does not delete network boxes that are not empty.
    
Delete with Network Box Contexts:
    #action: del_netbox_and_contents

    Removes any selected items, including network boxes that are not empty.

~~~~~

Find Node:
    #action: find
    
    Opens a window that lets you find nodes matching various criteria.

Next Matching Node:
    #action: find_next
    
    Selects the next node from the list that matched in the Find dialog.

Previous Matching Node:
    #action: find_prev
    
    Selects the previous node from the list that matched in the Find dialog.

Rename Selected Nodes:
    #action: h.rename_selected_nodes
    
    Opens a window that lets you perform prefix and suffix changes on the names of the selected nodes.

~~~~~

Disconnect Inputs:
    #action: disconnect_inputs

    Disconnects any inputs to the selected node(s).

Disconnect Outputs:
    #action: disconnect_outputs

    Disconnects any outputs from the selected node(s).

Disconnect Inputs and Outputs:
    #action: disconnect_all

    Disconnect any inputs and/or outputs from the selected node(s).

Reconnect Around Selected:
    #action: reconnect_around
    
    Rewires any inputs and outputs of the selected node(s) into each other, causing them to bypass the node(s).

Rotate Input Connections:
    #action: swap_inputs
    
    Rotates the order of the inputs into the selected node. This may be useful with a multi-input where the wires are crossing.

~~~~~

Scope Channels:
    #action: scope_chans
    
    [Scope|/anim/scope] any animated parameters on the selected node(s).

Delete Channels:
    #action: delete_chans
    
    Delete any keyframe animation on the selected node(s).

~~~~~

Collapse Selected into Sub-Network:
    #action: collapse
    
    Moves the selected nodes inside a newly created subnet node.

Collapse Selected into Material:
    #action: collapse_to_material
    
    In a [material network|/shade/build], takes the selected "loose" VOPs and creates a new Material VOP node with them inside.

~~~~~

Unhide All:
    #action: expose
    
    Shows any nodes that have been hidden. Nodes can become hidden from [collapsing network branches|organize#collapse] or by turning on their "hide" flag.


== Go == (go_menu)
#display: raised

Objects:
    #action: jump_obj
    
    Goes to the [scene|/basics/objects] level (`/obj`).

Materials:
    #action: jump_mat
    
    Goes to the default [materials|/shade/build] network (`/mat`).

CHOPs:
    #action: jump_ch
    
    Goes to the default CHOPs network (`/ch`)

COPs:
    #action: jump_img
    
    Goes to the default [compositing|/composite/] network (`/img`).

Render nodes:
    #action: jump_out
    
    Goes to the default [render node|/render/] network (`/out`).

~~~~~

Up to Parent Network:
    #action: updir
    
    Goes the parent of the current network.

Go Into Selected Network:
    #action: jump
    
    Goes to the network inside the selected node (for example, the geometry network inside a [Geometry node|Node:obj/geo]).

~~~~~

Move Current Node Up:
    #action: up
    
    Move the selection upstream.

Move Current Node Down:
    #action: down
    
    Move the selection downstream.

Move Current Node Left:
    #action: left
    
    Move the selection to the previous node connected to the same upstream node.

Move Current Node Right:
    #action: right
    
    Move the selection to the next node connected to the same upstream node.

~~~~~

Set Quickmark:
    The items in this menu allow you to [assign the current network to a number key|navigate#quick]. Then pressing that key will jump the network back to that location.
    
    This is very useful when you're bouncing between a few different networks constantly, for example a source geometry network, dynamics network, and render network.

Jump to Quickmark:
    The items in this menu allow you to recall a network location assigned to a [quickmark|navigate#quick].

Last View:
    #action: jump_mark_undo
        
    Jumps to the previously viewed network location. Pressing this key repeatedly bounces you back and forth between the last two locations.


== View == (view_menu)
#display: raised

Zoom In:
    #action: zoom_in
    
    Increases the magnification of the network editor, making nodes appear bigger.

Zoom Out:
    #action: zoom_out
    
    Decrease the magnification of the network editor, making nodes appear smaller.

Zoom to Show Selected:
    #action: home_selected
    
    Tracks and zooms the network view to show the selected node(s).

~~~~~

Show Node Type:
    #action: shownodetypes
    
    Toggles showing the node type above the name (for nodes where the type is not obvious from the name).

Show Custom Node Shapes:
    #action: shownodeshapes
    
    Toggles showing [custom node shapes|organize#custom]. If this is off, all nodes use the default rectangle shape.

Show Node Previews:
    #action: showpreviews
    
    Toggles global show/hide of node previews in networks that support them (for example, compositing networks). This overrides show/hide preview on individual nodes.

Show Task Graph:
    #action: showtaskgraph

    Toggles showing the task graph view of TOP nodes.

Task Graph Display Options:
    #action: open_task_graph_display_options

    Opens the Task Graph Display Options window for customising the appearance of the task graph network editor view.
    
~~~~~

Dependency Links:
    Dependency links let you visualize channel references between nodes. See [dependencies|dependencies] for more information.

    Dependencies: Hide:
        #action: showdepnone
        
        Don't show dependency links.
    
    Dependencies: Show for Selected Nodes:
        #action: showdepselected
        
        Only show dependency links for the selected node(s).
    
    Dependencies: Show for All Nodes:
        #action: showdepall
        
        Show dependency links for all nodes.
    
Show Dependency Links for Child Nodes:
    #action: showchilddep
    
    For nodes that have networks inside, also show the dependencies of their child nodes.

~~~~~

Change Network Wiring Style:
    #action: change_wire_style
    
    Cycles the network through the available wire drawing methods.

Show Performance Data:
    #action: display_perfstat
    
    Toggles visualizing data from the [performance monitor|/ref/panes/perfmon] in the network.

Performance Data to Show:
    This submenu lets you choose which data from the [performance monitor|/ref/panes/perfmon] to visualize when __Show Performance Data__ is on.

~~~~~

Show Help Messages:
    #action: showprompttext
    
    Toggles the display of messages at the bottom of the network view explaining the current mode and what you can do.

Display Options:
    #action: open_display_options
    
    Opens a display options window allowing you to customize the network editor view.


== Tools == (tools_menu)
#display: raised

List Mode:
    #action: mode_switch
    
    Toggles between showing nodes in the network editor as a graph or a list.

Show Parameter Dialog:
    #action: opparms

    Shows or hides an embedded parameter editor in the corner of the network view.

Show Parameter Dialog When Maximized:
    #action: opparms_max
    
    Shows or hides an embedded parameter editor in the corner of the network view only when the network editor pane is [maximized|/basics/panes].

Show Node Tree:
    #action: open_treeview
    
    Shows or hides an embedded network tree view beside the network view.

Show Groups:
    #action: open_groups
    
    Shows or hides an embedded node group list above the network view.

Show Tool Palette:
    #action: open_sidebar
    
    Shows or hides a list of available node types you can drag into the network.

~~~~~

Show Overview:
    The [network overview|navgiate#overview] shows a schematic view of the entire network. You can click and drag around the overview to move the view window.
    
    Overview: When Needed:
        #action: overview_auto
        
        Show the overview in the network editor whenever the entire network doesn't fit into view.
    
    Overview: Always:
        #action: overview_on
        
        Always show the overview in the network editor.
    
    Overview: Never:
        #action: overview_off
        
        Don't show the overview in the network editor.
    
~~~~~

Show Grid:
    You can change the grid spacing in the display options.

    Grid: No Grid:
        #action: grid_off
        
        Don't show the grid in the network editor.
    
    Grid: Grid Points:
        #action: grid_points
        
        Only draw the intersection points of the grid in the network editor.
    
    Grid: Grid Lines:
        #action: grid_lines
        
        Draw the grid lines in the network editor.

Snap to Grid:
    #action: gridsnapping
    
    Toggles grid snapping on or off in the network editor.

~~~~~

Show Palette:
    The [color and shape palettes|organize#custom] let you assign custom colors and shapes to nodes to make them easier to distinguish in the network.
    
    Palette: None:
        #action: no_palette
        
        Don't show either palette in the network editor.
    
    Palette: Colors:
        #action: color_palette
        
        Show the color palette in the network editor.
    
    Palette: Shapes:
        #action: shape_palette
        
        Show the shape palette in the network editor.

~~~~~

Edit Background Images:
    #action: edit_images
    
    Enters a mode where you can [move, resize, link, and delete background images|organize#images] in the network editor.

Snap to Visible Nodes:
    #action: dosnapping
    
    Toggles automatic alignment of new nodes with existing nodes.

Allow Dropping Nodes on Wires:
    #action: allowdroponwire

    Toggles the ability to drop a node onto an existing wire. You can temporarily switch this setting by holding the ((8)) <!-- drop_on_wire_mode --> key.

Make Room for New Nodes:
    #action: doautomovenodes

    Toggles whether to move existing nodes out of the way when you add a new node.


== Layout == (layout_menu)
#display: raised

Lay Out All:
    #action: layout_all
    
    Automatically repositions all nodes in the network.
    
    This will completely replace any organization you might have set up in the network. You might want to make smaller-scale local changes using the alignment tools below instead.

Lay Out Selected:
    #action: layout
    
    Automatically repositions the selected nodes.

~~~~~

Layout Nodes Up:
    #action: layout_up

    Reposition the selected nodes upstream (for vertical networks) or sibling nodes above (for horizontal networks).

Layout Nodes Down:
    #action: layout_down

    Reposition the selected nodes downstream (for vertical networks) or sibling nodes below (for horizontal networks).

Layout Nodes Left:
    #action: layout_left

    Reposition the selected sibling nodes to the left (for vertical networks) or upstream nodes (for horizontal networks).

Layout Nodes Right:
    #action: layout_right

    Reposition the selected sibling nodes to the right (for vertical networks) or downstream nodes (for vertical networks).

~~~~~

Align Nodes Horizontally:
    #action: align_horizontal

    Align the selected nodes horizontally

Align Nodes Vertically:
    #action: align_vertical

    Align the selected nodes vertically

Distribute Nodes Horizontally:
    #action: distribute_horizontal

    Distribute the selected nodes horizontally

Distribute Nodes Vertically:
    #action: distribute_vertical

    Distribute the selected nodes vertically

~~~~~

Minimize Selected:
    #action: minimize

    Minimizes the selected sticky notes and network boxes

Minimize and Adjust Network:
    #action: minimize_adjust

    Minimizes sticky notes and network boxes, moving connected outputs

Maximize Selected:
    #action: maximize

    Maximizes the selected sticky notes and network boxes

Maximize and Adjust Network:
    #action: maximize_adjust

    Maximizes sticky notes and network boxes, moving connected outputs

Resize Network Boxes to Fit:
    #action: snap_netbox_bounds

    Snaps a network box's borders to its minimum bounding box

~~~~~

Space Nodes Vertically:
    #action: space_vertical

    Space out the selected nodes vertically

Space Nodes Horizontally:
    #action: space_horizontal

    Space out the selected nodes horizontally

Correct VOP Positions:
    #action: correct_vop_pos

    Correct VOP Node positions for use in the new network editor


== Node context menu ==
#display: raised

Flags:
    #display: collapsible collapsed
    
    The items in this submenu let you set or clear individual flags on a node, including some rarely-used flags that are not visible on the node. Different node types have different flags available. See [node flags|flags] for an explanation of the node types and their flags.
    
    :box:
        #display: raised
    
        Display:
            #action: .opmenu.flag_display
        
            (Objects, SOPs) Toggles the current node's [display flag|flags#sop]. For objects, this controls whether the object appears in the viewport. For geometry nodes, it sets which node provides the final view geometry.
        
        Selectable:
            #action: .opmenu.flag_select
        
            Toggles the current node's [selectable flag|flags#obj]. This controls whether an object can be selected in the viewport.
    
        Display Origin:
            #action: .opmenu.flag_origin
        
            Toggles the current node's [display origin flag|flags#obj]. Controls whether a jack appears at the object's origin.
    
        X-Ray:
            #action: .opmenu.flag_xray
        
            Toggles the current object's [X-ray flag|flags#obj]. Controls whether the object is visible behind other objects. This is used to make bones visible inside skin geometry.
    
        Render:
            #action: .opmenu.flag_render
        
            Toggles the geometry node's [render flag|flags#sop]. This sets which node's output provides the render geometry.
    
        Output:
            #action: .opmenu.flag_output
            
            Toggle the node's [output flag|flags]. This sets which node represent's the network's output in various network types.
            
            In SOPs, this is a menu called __Output for view__ where you can choose which output is displayed. By default, it displays the first output.
    
        Template:
            #action: .opmenu.flag_template
            
            Toggles the node's [template flag|flags#sop]. In a geometry network, this lets you see the node's geometry in the viewport along with the display geometry.
    
        Selectable Template:
            #action: .opmenu.flag_footprint
            
            Toggles the node's [selectable template flag|flags#sop]. In a geometry network, this lets you see and snap to the node's geometry in the viewport along with the display geometry.
    
        Highlight:
            #action: .opmenu.flag_highlight
            
            Toggles the node's [highlight flag|flags]. 
    
        Unload:
            #action: .opmenu.flag_unload
            
            Toggles the node's [unload flag|flags#sop]. In a geometry network, this tells the node to not cache the generated geometry. 
    
        Export:
            #action: .opmenu.flag_export
            
            Toggles the node's [export flag|flags#chop].
    
        Lock:
            #action: .opmenu.flag_lock
            
            Toggles the node's [lock flag|flags#sop]. In a geometry network, this makes the node throw away upstream geometry and just output its cached geometry instead of regenerating it when needed.
    
        Thumbnail:
            #action: .opmenu.flag_thumbnail
            
            Toggles the display of thumbnails on the node.
    
        Bypass:
            #action: .opmenu.flag_bypass
            
            Toggles the node's [bypass flag|flags#sop]. This makes the node pass its input through unchanged.
    
        Hide Geometry:
            #action: .opmenu.flag_hidden
            
            Toggles the node's [hide flag|flags#obj].
    
        Display Descriptive Parameter:
            #action: .opmenu.flag_displaydescriptivename
            
            Toggles the display of a "descriptive parameter" next to the node in the network editor. For example, the File SOP shows the filename.
    
        Display Comment:
            #action: .opmenu.flag_displaycomment
            
            Toggles the display of the node's comment next to the node in the network editor.
    
        ~~~~~
    
        Make Display Editable in Take:
            #action: .opmenu.takedisplay
            
            Add the selected node's display flag state to the current take.
    
        Make Output Editable in Take:
            #action: .opmenu.takeoutput
            
            Add the selected node's editable flag state to the current take.
    
        Make Bypass Editable in Take:
            #action: .opmenu.takebypass
            
            Add the selected node's bypass flag state to the current take.

Actions:
    #display: collapsible collapsed
    
    This menu contains various uncommonly used actions you can perform on the node.

    :box:
        #display: raised
        
        Select:
            #action: .opmenu.select_node
    
        Use Default Color:
            #action: .opmenu.use_default_color
    
        Use Default Shape:
            #action: .opmenu.use_default_shape
    
        Collapse to Subnet:
            #hotkey_for: collapse
        
        Collapse to Material Builder:
            #hotkey_for: collapse_to_material
    
        Extract Contents:
            #action: .opmenu.extract
    
        Create Reference Copy:
            #action: .opmenu.refcopy
    
        Delete:
            #hotkey_for: delete
    
Dive Into Network:
    #hotkey_for: jump
    
    Go inside the selected node (if it is a network container).

~~~~~

Preview:
    #display: collapsible collapsed
    
    This submenu appears for compositing nodes. The actions in this menu open an image viewer with a (possibly scaled-down) preview of the compositing output.
    
    :box:
        #display: raised
        
        Icon Size:
            #action: .opmenu.preview_icon
            
            Show a tiny preview of the selected node's output in an image viewer window.
        
        1/4 Size:
            #action: .opmenu.preview_quarter
            
            Show a 1/4 sized preview of the selected node's output in an image viewer window.
        
        1/2 Size:
            #action: .opmenu.preview_half
            
            Show a half-sized preview of the selected node's output in an image viewer window.
        
        Full Size:
            #action: .opmenu.preview_full
            
            Show a full-sized preview of the selected node's output in an image viewer window.

Flipbook:
    #action: .opmenu.flipbook
    
    For compositing nodes, this generates a flipbook animation of the node's output.

<!--
Open Cook Controls:
    #action: .opmenu.open_cook_controls
    
    For TOP nodes, opens a settings window for how the node cooks.

Dirty Node:
    #action: .opmenu.dirty_node
    
    For TOP nodes, makes the node "dirty" (that is, its output needs to be regenerated).

Filter Root Work Items:
    #action: .opmenu.filter_root_work_items

Cook Node:
    #action: .opmenu.cook_node
    
    For TOP nodes, forces the node to regenerate its outputs.

Change Mapper Type:
    
    :box:
        #display: raised
        
        Index Mapper:
            #action: .opmenu.change_to_index_mapper
        
        Frame Expression Mapper:
            #action: .opmenu.change_to_frame_exp_mapper
        
        Coalesce All:
            #action: .opmenu.change_to_coalesce_mapper
-->

Parameters and Channels:
    #display: collapsible collapsed
    
    The items in this sub-menu let you edit and change [parameters|parms] and keyframe animation on the selected node.
    
    :box:
        #display: raised
        
        Parameters:
            #action: .opmenu.parameters
            
            Opens a floating parameter editor for the selected node.
        
        Create Nested Channel Groups:
            #action: .opmenu.create_channel_groups
            
            Creates nested animation channels for the selected node from the folder structure of the animated parameters.
        
        Edit Parameter Interface:
            #action: .opmenu.spareparms
            
            Edits the parameter interface of this particular node instance, allowing you to add, edit, or remove spare parameters.
        
VOP Options:
    #display: collapsible collapsed
    
    This submenu contains seldom-used items that apply to VOP nodes. Some of these items have UI equivalents on the node itself and exist in this menu to allow you to add hotkeys to them if you wish.
    
    :box:
        #display: raised
        
        View VEX Code:
            #action: .opmenu.vn_view_code
            
            Opens a window showing the source code generated from the selected node.
        
        Edit VOP Network:
            #action: .opmenu.edit_vop_network
            
            If the selected node is defined by a VOP network, goes to that network in the network editor.
            
        Creator VOP Network:
            #action: .opmenu.creator
        
            Goes to the network that created the selected node in the network editor.
        
        Compile VEX Code to VOP Type:
            #action: .opmenu.vn_save_context_op
    
            Creates a new VOP node type by compiling the VEX code generated by the node.
        
        Convert to VOP Type:
            #action: .opmenu.vn_convert_to_type
            
            Converts this VOP Network to a network that defines a node type.

        ~~~~~
        
        Jump to Parameter Definer:
            #action: .opmenu.parm_definer
            
            If the selected node is bound to a parameter, selects the corresponding Parameter VOP.
        
        ~~~~~
        
        Set Tile LOD:
            The items in this menu control whether to show all input/output rows on the VOP node. They are equivalent to the buttons on the bottom right of the node.
            
            :box:
                #display: raised
                
                Low:
                    #action: .opmenu.flag_lodlow
                    
                    Only show pop-up menus representing the VOP node's inputs and outputs to save space. You can click a menu to choose a connector to start wiring.
                
                Medium:
                    #action: .opmenu.flag_lodmed
                    
                    Only show connected input/output rows on the VOP node, and pop-up menus representing any other inputs and outputs to save space.
                
                High:
                    #action: .opmenu.flag_lodhigh
                    
                    Show all input and output rows on the VOP node.

        Collapse All Input Groups:
            #action: .opmenu.collapse_input_groups
            
            Many VOP nodes groups inputs and outputs together under collapsible headings. This collapses all group headings to save space.
        
        Expand All Input Groups:
            #action: .opmenu.expand_input_groups
            
            Many VOP nodes groups inputs and outputs together under collapsible headings. This expands all group headings to make all inputs/outputs visible.
        
        ~~~~~
        
        Create Input Parameters:
            #action: .opmenu.create_parms
            
            Creates Parameter VOPs and wires them into any unconnected inputs on this VOP node. This is a way of quickly building the shader's parameter from a key node inside.
    
        Create Subnet Inputs:
            #action: .opmenu.create_subnet_inputs
        
            Creates Parameter VOPs with __Scope__ set to "Subnet Connector" and wires them into any unconnected inputs on the parent subnetwork node. This is a way of quickly building the parent node's input interface from a key node inside.
        
        Create Input Constants:
            #action: .opmenu.create_consts
            
            Creates Constant VOPs and wires them into any unconnected inputs on this VOP node.
            
        ~~~~~
        
        Create Output Bindings:
            #action: .opmenu.create_output_bindings
            
            Creates exported Bind VOPs and wires them into any unconnected outputs on this VOP node. This is a way of quickly building the shader's exports from a key node inside.
        
        Create Subnet Outputs:
            #action: .opmenu.create_subnet_outputs
            
            Creates exported Parameter VOPs with __Scope__ set to "Subnet Connector" and wires them into any unconnected outputs on the parent subnetwork node. This is a way of quickly building the parent node's output interface from a key node inside.
        
Preview Window:
    #action: .opmenu.preview
    
    For object and geometry nodes, shows the node's output geometry in a floating window.

Spreadsheet:
    #action: .opmenu.spreadsheet
    
    For geometry nodes, opens a window showing the geometry and attribute data. This is very useful for understanding what a node is doing. For dynamics nodes, shows geometry, attributes, and relationships.

Show Node Information:
    #action: .opmenu.extended_info
    
    Opens the [info window|#info] for the selected node. This is the same as clicking the info button in the node ring or holding ((MMB)) on the node.

View Dependencies:
    #action: .opmenu.view_deps
    
    Opens a window showing all external references to and from the selected node's parameters.

Edit Comment:
    #action: .opmenu.edit_comment
    
    Opens a window with a editor for the node's comment string. This is the same as editing the comment in the [info window|#info].

Save:
    This submenu contains items for exporting the node's data somewhere else.

    :box:
        #display: raised
        
        Save: Geometry:
            #action: .opmenu.save_geometry
            
            Saves this geometry node's output to a file, such as a `.bgeo`.
        
        Save VEX Code to File:
            #action: .opmenu.vn_save_code
            
            Saves this VOP node's compiled VEX to a file.
        
        Save: Texture UV to Image:
            #action: .opmenu.save_texture
            
            Saves this geometry node's UV layout to an image file to allow artists to paint over it.
        
        Save: Image:
            #action: .opmenu.save_image
            
            Saves this compositing node's output to a file, such as a `.png`.
        
        Save: LUT:
            #action: .opmenu.save_lut
            
            Saves this compositing node's lookup table to a file.
        
        Save: Data Channels:
            #action: .opmenu.save_data
            
            Saves this CHOP node's output to a file.
        
        Save: to Gallery:
            #action: .opmenu.save_to_gallery
            
            Saves the selected node as a reusable template in the gallery.

~~~~~

Exporter - Set Scope:
    #action: .opmenu.set_scope
    
    For CHOP nodes, sets the exporter scope for the selected node.

Exporter - Add to Scope:
    #action: .opmenu.add_to_scope
    
    For CHOP nodes, adds to the exporter scope for the selected node.

~~~~~

Inputs:
    The items in this submenu relate to node inputs.
    
    :box:
        #display: raised
        
        Hide Inputs:
            #action: .opmenu.hide_inputs
            
            [Hides|organize#collapse] all node branches connected into the selected node.
        
        Unhide Inputs:
            #action: .opmenu.expose_inputs
            
            Expands any [hidden|organize#collapse] inputs to the selected node.
        
        Select Inputs:
            #action: .opmenu.select_inputs
            
            Selects the nodes connected into the selected node.
        
        Select Input Parameters:
            #action: .opmenu.select_input_parameters
            
            Selects any Parameter VOPs connected to the selected node's inputs.
        
Outputs:
    The items in this submenu relate to node outputs.
    
    :box:
        #display: raised
        
        Hide Outputs:
            #action: .opmenu.hide_outputs
            
            [Hides|organize#collapse] the node branch out of the selected node.
        
        Unhide Outputs:
            #action: .opmenu.expose_outputs
            
            Expands any [hidden|organize#collapse] outputs from the selected node.
        
        Select Outputs:
            #action: .opmenu.select_outputs
            
            Selects the nodes connected into the selected node.
        
        Collapse Outputs:
            #action: .opmenu.collapse_outputs
            
            Takes all nodes connected to the selected node's outputs and puts them in a new subnet.
        
~~~~~

Character Tools:
    The items in this submenu let you load this object node into character tool panes.
    
    :box:
        #display: raised
        
        Character Picker:
            #action: .opmenu.charpicker
            
            Opens the character represented by the selected node in the character picker.
        
        Pose Library:
            #action: .opemnu.poselibrary
            
            Opens the character represented by the selected node in the pose library.
        
~~~~~

Help:
    #action: .opmenu.help
    
    Opens the help page for the selected node.

~~~~~

Create Digital Asset:
    #action: .opmenu.create_hda
    
    [Creates a new asset|/assets/create] type from the selected node.

Allow Editing of Contents:
    #action: .opmenu.unsynchronize
    
    Unlocks the selected asset node and allows editing the network inside.

Match Current Definition:
    #action: .opmenu.synchronize
    
    Saves any changes and re-locks the selected unlocked asset node.

Save Node Type:
    #action: .opmenu.saveoptype
    
    Saves any changes but leaves the selected asset node unlocked.

Show Changes:
    #action: .opmenu.diff
    
    Opens a window showing any unsaved differences between the saved asset definition and the selected unlocked node.
    
    The textual "diff" can be hard to read but should give a rough idea of what's changed.

~~~~~

Show in Asset Manager:
    #action: .opmenu.optypemanager
    
    Opens the [asset manager|/ref/windows/optypemanager] window and jumps to the asset type of to the selected node.

Change Type:
    #action: opmenu.change_type
    
    Opens a window that lets you (attempt to) change the selected node to a different node type. This creates a new node of the new type and copies over any parameters with the same name.
    
    This might be useful for updating nodes to new versions.

Type Properties:
    #action: .opmenu.properties
    
    Opens the selected asset node's type in the [type properties editor|/ref/windows/optype].


@actions

Deselect All But Current:
    #action: desel_noncurrent

    Deselect all but the "current" node in the network.

Current Node Info:
    #action: open_node_info

    Opens the node information window for the current node.

Visualize Output:
    #action: visualize_mode

    Hold this key and select a node or output connector to visualize the output


== List mode ==

Expand Selected:
    #action: expand_selected

    Expands the selected nodes in the network list

Show Implicit Operators:
    #action: show_implicit

    Show implicit operators

Show Selected Operators:
    #action: show_picked

    Show selected operators

Show Filter Buttons:
    #action: show_filter_buttons

    Show or hide the filter buttons in the network list.

Show Columns:
    #action: show_columns

    Show or hide the columns in the network list.

