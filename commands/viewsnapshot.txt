#type: hscript

= viewsnapshot =

"""Manages the view snapshot memory."""

:usage: `viewsnapshot [-t <<memory>>] [-d <<memory>>] [-h] [-c] <<viewer>>`

This command can record an image from the viewer, display (recall) a
memory image to the viewer, hide the recalled memory, and erase the
image memory.

A viewer argument is a name of a pane for viewing the scene. A viewer
can be subdivided into up to four viewports (such as top, left, front,
and perspective).

Viewers have names of the form "<<desk>>.<<pane>>.<<type>>", where:

desk:
    The name of the desk containing the viewer pane.
pane:
    The name of the viewer pane.
type:
    "world", "particle", or "texture", depending on the contents of the
    pane.


@options
    `-t <<memory>> `:
        Takes a snapshot of the viewer and stores it in the <<memory>>
    `-d <<memory>> `:
        Displays the snapshot stored in the <<memory>>
    `-h`:
        Hides currently displayed snapshot (if any).
    `-c`:
        Frees all the snapshot memories.

    [Include:/commands/_guide#viewers]

@examples
    {{{
    #!hscript
    viewsnapshot -t 4 Build.panetab1.world
    }}}
    Take a snapshot of the scene in the viewer to memory 4.

    {{{
    #!hscript
    viewsnapshot -d some_memory Build.panetab1.world
    }}}
    Display a snapshot stored in memory "some_memory"

    {{{
    #!hscript
    viewsnapshot -h Build.panetab2.world
    }}}
    Hide the snapshot displayed in Build.panetab2.world


@related
    - [viewsnapshotoption|Cmd:viewsnapshotoption]
    - [viewls|Cmd:viewls]

