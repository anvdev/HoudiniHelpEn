= Marker =

#type: visualizer
#internal: vis_marker
#icon: VIEW/visualization_marker
#tags: visualization, marker, trail, quaternion, axes
#helpid: h.visualizers.vis_marker

"""Visualizes attributes using various markers and labels."""

See [visualizers|/basics/visualizers] for more information.

@parameters

Style:
    #id: style

    Determines the style of visualization.
    
    [Text|#text]:
        Shows attribute values as a label next to each element.
    
    Element index:
        Shows each element's index number as a label next to the element.
    
    [Point trail|#point_trail]:
        Draws a line from the element's location to the point contained in an attribute value. For example, visualizing the contents of a rest attribute would draw lines from the current point positions to their rest positions.
    
    [Vector trail|#vector]:
        Draws a line from the point based on a vector attribute value's direction and length.
    
    [Vector|#vector]:
        Same as "vector trail" but draws the line gradient in the opposite direction.
        
    [Axes|#axes]:
        Draws a small set of axes at each element to visualize a matrix or quaternion attribute.
        
        The attribute must have either:
        
        * Nine (or more) components, in which case components 0-2, 3-5, and 6-8 are treated as the first, second, and third vector.
        
            ~~~ or ~~~
        
        * Four components, in which case it is treated as a quaternion.
    
Class:
    #id: class
    
    Whether to visualize a point, primitive, vertex, or detail attribute. 

== Common parameters ==

Radius:
    #id: decorradius
    
    When __Visibility__ is "Near pointer", Houdini projects a ray under the mouse pointer to the closest point, then displays markers on elements within this world space distance of that point.

Group: 
    #id: group
    
    The geometry to visualize on. This can be a group name or a space separated list of group names and/or component numbers. You can use expressions such as `10-30:3` to specify every third component from 10-30. See [groups|/model/groups] for more information.

Attribute: 
    #id: attrib
    
    Name of the attribute to visualize. 

Visibility:
    #id: visibility
    
    When the attribute is drawn in the viewport for each element. 
    
    Always Visible:
            Draw the marker on every element. If the geometry has a large number of densely-packed elements, you may want to use one of the other options to reduce clutter.
        
    Only on Selection:
            Only draw the markers on the selected elements.
    
    Near Pointer:
        Only draw markers on elements within a certain (world space) distance of the point under the mouse pointer. It projects a ray under the cursor onto the closest geometry, finds the (X,Y,Z) world space point of that intersection, then shows markers whose anchors are within that distance in 3D space. It should give you a small circular window effect.
    
    Under Pointer:
        Only draw marker on the single element the mouse pointer is on.
        
    Group:
        Only draw makers on elements of a group given by a group expression.

== Text/Element index == (text)

Text Color:
    #id: textcolor
    
    The color of the labels.

Font Size:
    #id: font size
    
    The size of the labels. "Guide font size" uses the size set on the __Guides__ tab of the viewport display options window.
    
== Point trail == (point_trail)

Marker Color:
    #id: markercolor
    
    Color of the points drawn at the attribute positions.
    
Trail Color: 
    #id: trail
    
    Color of the lines from the current position to the attribute positions. You can use the color's alpha channel to make the lines semi-transparent.
    
Point Size:
    #id: pointsize
    
    Radius of the point markers.

== Vector/Vector trail == (vector)

Length Scale:
    #id: lengthscale
    
    Allows you to scale the lines length up or down. This lets you make long lines shorter to reduce clutter, or make short lines longer to be more visible.

Unit length:
    ???

Normalize vectors:
    #id: normalize
    
    Normalize the values to the 0-1 range for display.

Show Arrow Tips:
    #id: arrowheads
    
    Draw a small barb at the end of each line.

Coloring:
    #id: coloring
    
    [Fixed color|#coloring_fixed_color]:
        Color all quills using the same color.
    
    [Vector values|#coloring_vector_values]:
        Color the quills according to the vector values.
    
    [Vector directions|#coloring_vector_values]:
        ???
    
    [Other attribute|#coloring_other]:
        Color the quills using the value of another attribute.

=== Fixed color === (coloring_fixed_color)
#display: rounded

Marker Color:
    #id: markercolor
    
    Color of the lines drawn from the element based on the attribute vector.

=== Vector values/vector directions === (coloring_vector_values)
#display: rounded

Color mapping:
    #id: ramptype
    
    How to display scalar data as colors. Choose a preset color ramp, or choose "Custom" to get a ramp control.

[Include:color#rangespec]

[Include:color#clamptype]

[Include:color#treatasscalar]

[Include:color#using]

=== Other attribute === (coloring_other)
#display: rounded

[Include:color#attrib]

See [above|#coloring_vector_values] for the other settings.

== Axes Style == (axes)

X Color: 
    #id: xcolor
    Color of the first vector.

Y Color: 
    #id: ycolor
    Color of the second vector.

Z Color: 
    #id: zcolor
    Color of the third vector.

Show Arrow Tips:
    #id: arrowheads
    
    Draw a small barb at the end of each axis line.

