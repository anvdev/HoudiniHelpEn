= hou.PythonPanel =
#type: homclass
#cppname: HOM_PythonPanel
#superclass: hou.PathBasedPaneTab
#group: ui

"""Class representing a pane tab that can display an embedded PySide or PyQt 
interface."""

See also [Hom:hou.pypanel] and [Hom:hou.PythonPanelInterface].

NOTE:
    PySide and PyQt interfaces can only be created from the main Houdini
    application thread.  You cannot call any method in this class from a
    separate thread (i.e. do not call from a Python Shell).

@methods

::`isToolbarExpanded(self)` -> `bool`:
    #cppname: HOM_PythonPanel::isToolbarExpanded
    Return True if the toolbar is expanded and False otherwise.

::`isToolbarShown(self)` -> `bool`:
    #cppname: HOM_PythonPanel::isToolbarShown
    Return True if the toolbar is shown and False otherwise.
    
::`activeInterface(self)` -> `hou.PythonPanelInterface`:
    #cppname: HOM_PythonPanel::activeInterface
    Returns the interface currently assigned to the Python Panel, or None if
    no interface has been assigned.

::`activeInterfaceRootWidget(self)` -> `Qt.QtWidgets.QWidget` subclass:
    #cppname: HOM_PythonPanel::activeInterfaceRootWidget
    Returns a reference to the user-defined root widget created by the active
    interface in the Python Panel. Returns None if there is no active
    interface or widget.

::`setActiveInterface(self, interface)`:
    #cppname: HOM_PythonPanel::setActiveInterface
    Show the specified interface in the Python Panel.  `interface` is a
    [Hom:hou.PythonPanelInterface] object.

    Raises [Hom:hou.OperationFailed] if `interface` is not an installed 
    Python Panel interface.
    
::`showToolbar(self, show)`:
    #cppname: HOM_PythonPanel::showToolbar
    Show or hide the toolbar.  `show` must be either True or False.
    
::`expandToolbar(self, expand)`:
    #cppname: HOM_PythonPanel::stowToolbar
    Expand or collapse the toolbar.  `expand` must be either True or False.
