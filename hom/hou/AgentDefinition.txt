= hou.AgentDefinition =
#type: homclass
#cppname: HOM_AgentDefinition
#group: crowds

"""The shared data for an agent primitive."""

An agent definition includes a rig, shape library, layers, and clips, and can
be shared between agent primitives. See [Agent Primitives|/crowds/agents] for
more information.

Since an agent definition is shared between copies of an agent primitive (such
as agents in an upstream SOP's geometry), the definition returned by
[Hom:hou.Agent#definition] is read-only. The [Hom:hou.AgentDefinition#freeze]
method can be used to create a modifiable copy of an agent definition.

@methods

::`__init__(rig, shapelib)`
    #cppname: HOM_AgentDefinition::HOM_AgentDefinition

    Creates a new (and modifiable) agent definition.

    `rig`:
        The [Hom:hou.AgentRig] that the definition should reference.

    `shapelib`:
        The [Hom:hou.AgentShapeLibrary] that the definition should reference.

::`addClip(self, clip)`:
    #cppname: HOM_AgentDefinition::addClip

    Adds a clip to the agent definition.

    Raises [Hom:hou.GeometryPermissionError] if the agent definition is not modifiable.

    Raises [Hom:hou.OperationFailed] if the clip is associated with a different rig.

    `clip`:
        A [Hom:hou.AgentClip].

::`addLayer(self, layer)`:
    #cppname: HOM_AgentDefinition::addLayer

    Adds a layer to the agent definition.

    Raises [Hom:hou.GeometryPermissionError] if the agent definition is not modifiable.

    Raises [Hom:hou.OperationFailed] if the layer is associated with a different rig or shape library.

    `layer`:
        A [Hom:hou.AgentLayer].

::`addTransformGroup(self, group)`:
    #cppname: HOM_AgentDefinition::addTransformGroup

    Adds a transform group to the agent definition.

    Raises [Hom:hou.GeometryPermissionError] if the agent definition is not modifiable.

    Raises [Hom:hou.OperationFailed] if the group is associated with a different rig.

    `group`:
        A [Hom:hou.AgentTransformGroup].

::`clips(self)` -> `tuple` of [Hom:hou.AgentClip]:
    #cppname: HOM_AgentDefinition::clips

    Returns a list of the clips in the agent definition.

::`findClip(self, name)` -> [Hom:hou.AgentClip]:
    #cppname: HOM_AgentDefinition::findClip

    Finds the clip with the specified name, or None if no such clip exists.

::`findLayer(self, name)` -> [Hom:hou.AgentLayer]:
    #cppname: HOM_AgentDefinition::findLayer

    Finds the layer with the specified name, or None if no such layer exists.

::`findTransformGroup(self, name)` -> [Hom:hou.AgentTransformGroup]:
    #cppname: HOM_AgentDefinition::findTransformGroup

    Finds the transform group with the specified name, or None if no such group exists.

::`freeze(self, new_shapelib = None)` -> [Hom:hou.AgentDefinition]:
    #cppname: HOM_AgentDefinition::freeze

    Creates a modifiable copy of the agent definition.
    Use [Hom:hou.Agent#setDefinition] to change one or more agents to use the new agent definition.

    `new_shapelib`:
        If specified, the copied agent definition and its layers will reference the new shape library.

::`layers(self)` -> `tuple` of [Hom:hou.AgentLayer]:
    #cppname: HOM_AgentDefinition::layers

    Returns a list of the layers in the agent definition.

::`removeClip(self, name)`:
    #cppname: HOM_AgentDefinition::removeClip

    Removes a clip from the agent definition.

    Raises [Hom:hou.GeometryPermissionError] if the agent definition is not modifiable.

    `name`:
        The name of the clip to remove.

::`removeLayer(self, name)`:
    #cppname: HOM_AgentDefinition::removeLayer

    Removes a layer from the agent definition.

    Raises [Hom:hou.GeometryPermissionError] if the agent definition is not modifiable.

    `name`:
        The name of the layer to remove.

::`removeTransformGroup(self, name)`:
    #cppname: HOM_AgentDefinition::removeTransformGroup

    Removes a transform group from the agent definition.

    Raises [Hom:hou.GeometryPermissionError] if the agent definition is not modifiable.

    `name`:
        The name of the transform group to remove.

::`rig(self)` -> [Hom:hou.AgentRig]:
    #cppname: HOM_AgentDefinition::rig

    Returns the agent definition's rig.

::`shapeLibrary(self)` -> [Hom:hou.AgentShapeLibrary]:
    #cppname: HOM_AgentDefinition::shapeLibrary

    Returns the agent definition's shape library.

::`transformGroups(self)` -> `tuple` of [Hom:hou.AgentTransformGroup]:
    #cppname: HOM_AgentDefinition::transformGroups

    Returns a list of the transform groups in the agent definition.

@related

- [Hom:hou.crowds#findAgentDefinitions]
