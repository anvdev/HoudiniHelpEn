= hou.Keyframe =
#type: homclass
#cppname: HOM_Keyframe
#superclass: hou.BaseKeyframe
#group: animation

"""Class representing the default keyframe type, a numerical keyframe."""

@methods

::`__init__(self, values)`:
    #cppname: HOM_Keyframe::HOM_Keyframe
    Return a new Keyframe object.  You can pass no parameters (the result will
    have no value set), a float value, a float value and float time, or a
    Keyframe object.

::`accel(self)` -> `double`:
    #cppname: HOM_Keyframe::accel
    Returns the acceleration leaving the keyframe.
    
    This function raises [Hom:hou.KeyframeValueNotSet] if the acceleration has
    not been set.

::`asJSON(self, brief=False, save_keys_in_frames=False)` -> `dict`:
    #cppname: HOM_Keyframe::asJSON
    Returns a JSON dictionary that represents the keyframe. The dictionary 
    includes the frame time, value/expression, and the slope and acceleration
    parameters. If the `brief` parameter is set to True a smaller set of
    key/value pairs are included in the dictionary to reduce space usage.
    If the `save_keys_in_frames` parameter is True the dictionary uses a frame
    number instead of a time value.

    See also the [fromJSON|Hom:hou.Keyframe#fromJSON] method.

::`fromJSON(self, keyframe_dict)`:
    #cppname: HOM_Keyframe::fromJSON
    Sets the keyframe time, value and parameters using the key/value pairs from
    a JSON dictionary.

    See also the [asJSON|Hom:hou.Keyframe#asJSON] method.

::`evaluatedType(self)` -> [Hom:hou.parmData] enum value:
    #cppname: HOM_Keyframe::evaluatedType
    Return the data type of the keyframe's evaluated value.  For keyframes
    storing numerical values this method returns [Hom:hou.parmData#Float].

::`inAccel(self)` -> `double`:
    #cppname: HOM_Keyframe::inAccel
    Returns the acceleration entering the keyframe.

    This method raises [Hom:hou.KeyframeValueNotSet] if the acceleration has
    not been set or it is tied.

::`inSlope(self)` -> `double`:
    #cppname: HOM_Keyframe::inSlope
    Returns the slope entering the keyframe.
    
    This method raises [Hom:hou.KeyframeValueNotSet] if the slope has not been
    set or the slope is tied.

::`interpretAccelAsRatio(self, on)`:
    #cppname: HOM_Keyframe::interpretAccelAsRatio
    Sets whether Houdini should interpret the acceleration values entering 
    and leaving the keyframe as a single ratio.  When set to True, the 
    ratio of the in-acceleration to out-acceleration is always maintained.
    If, for example, the in-acceleration is made to be twice as large 
    using the Animation Editor, then the out-acceleration will automatically 
    be adjusted to be twice as large as well.  This is the default behavior 
    for Houdini keyframes.

::`inValue(self)` -> `double`:
    #cppname: HOM_Keyframe::inValue
    Returns the value entering the keyframe.

    This method raises [Hom:hou.KeyframeValueNotSet] if the value
    has not been set or the value is tied.

::`isAccelInterpretedAsRatio(self)` -> `bool`:
    #cppname: HOM_Keyframe::isAccelInterpretedAsRatio
    Returns True if the acceleration values entering and leaving the
    keyframe are interpreted as a ratio by Houdini.

::`isAccelSet(self)` -> `bool`:
    #cppname: HOM_Keyframe::isAccelSet
    Returns True if the acceleration entering or leaving the keyframe has
    been set.

::`isAccelTied(self)` -> `bool`:
    #cppname: HOM_Keyframe::isAccelTied
    Returns True if the acceleration entering the keyframe has not been set.

::`isInSlopeAuto(self)` -> `bool`:
    #cppname: HOM_Keyframe::isInSlopeAuto
    Returns True if the slope entering the keyframe is set to automatic.

::`isSlopeAuto(self)` -> `bool`:
    #cppname: HOM_Keyframe::isSlopeAuto
    Returns True if the slope leaving the keyframe is set to automatic.

::`isSlopeSet(self)` -> `bool`:
    #cppname: HOM_Keyframe::isSlopeSet
    Returns True if the slope entering or leaving the keyframe has been set.

::`isSlopeTied(self)` -> `bool`:
    #cppname: HOM_Keyframe::isSlopeTied
    Returns True if the slope entering the keyframe has not been set. 

::`isValueSet(self)` -> `bool`:
    #cppname: HOM_Keyframe::isValueSet
    Returns True if the value entering or leaving the keyframe has been set.

::`isValueTied(self)` -> `bool`:
    #cppname: HOM_Keyframe::isValueTied
    Returns True if the value entering the keyframe has not been set.

::`setAccel(self, accel)`:
    #cppname: HOM_Keyframe::setAccel
    Sets the acceleration leaving the keyframe.

::`setInAccel(self, in_accel)`:
    #cppname: HOM_Keyframe::setInAccel
    Sets the acceleration entering the keyframe.  Sets the acceleration
    leaving the keyframe, if not already set. Unties the acceleration.

::`setInSlope(self, in_slope)`:
    #cppname: HOM_Keyframe::setInSlope
    Sets the slope entering the keyframe.  Sets the slope leaving the keyframe,
    if not already set.  Unties the slope.

::`setInSlopeAuto(self, on)`:
    #cppname: HOM_Keyframe::setInSlopeAuto
    Sets the slope entering the keyframe to automatic.

::`setInValue(self, in_value)`:
    #cppname: HOM_Keyframe::setInValue
    Sets the value entering the keyframe. Sets the value leaving the keyframe,
    if not already set. Unties the value.

::`setSlope(self, slope)`:
    #cppname: HOM_Keyframe::setSlope
    Sets the slope leaving the keyframe.

::`setSlopeAuto(self, on)`:
    #cppname: HOM_Keyframe::setSlopeAuto
    Sets the slope leaving the keyframe to automatic.

::`setValue(self, value)`:
    #cppname: HOM_Keyframe::setValue
    Sets the value leaving the keyframe.

::`slope(self)` -> `double`:
    #cppname: HOM_Keyframe::slope
    Returns the slope leaving the keyframe.

    This method raises [Hom:hou.KeyframeValueNotSet] if the slope
    has not been set.

::`unsetInAccel(self)`:
    #cppname: HOM_Keyframe::unsetInAccel
    Unsets the acceleration entering the keyframe and tie the acceleration.

::`unsetInSlope(self)`:
    #cppname: HOM_Keyframe::unsetInSlope
    Unsets the slope entering the keyframe and tie the slope.

::`unsetInValue(self)`:
    #cppname: HOM_Keyframe::unsetInValue
    Unsets the value entering the keyframe and tie the values.

::`value(self)` -> `double`:
    #cppname: HOM_Keyframe::value
    Returns the value leaving the keyframe.

    This method raises [Hom:hou.KeyframeValueNotSet] if the value
    has not been set.

@replaces

- [Cmd:chkey]
- [Cmd:chkeyls]

