= hou.ViewerEvent =
#type: homclass
#superclass: hou.UIEvent
#cppname: HOM_ViewerEvent
#group: view

"""Represents a user interface event specific to viewers."""

`hou.ViewerEvent` objects are used with [Python states|/hom/python_states].  Houdini [will call event handlers with a dictionary|/hom/python_states#handlers] containing various useful data, including a `ui_event` key containing a `ViewerEvent` object. You do not instantiate this type of object yourself.
See [Python states|/hom/python_states] for more information.

`hou.ViewerEvent` is a specialized [Hom:hou.UIEvent] class that you can used for accessing ray coordinates in a viewer. 

@methods

::`ray(self)` -> `(origin_point, direction)`
    #cppname: HOM_ViewerEvent::ray
    
    Returns a tuple of two [Hom:hou.Vector3] objects representing the origin point and a direction vector of a "pointing ray" in 3D world space corresponding to the underlying [Hom:hou.UIEventDevice]'s mouse coordinates in screen space.
    
    The resulting ray can be used to shoot into the scene that passes through whatever is under the mouse. The method puts the ray origin at the mouse screen coordinates on the near plane and then maps the camera space position to world space.     
    For a perspective projection, the near plane part of the frustum is usually small in world space, so the origin point will be pretty close to the camera position. 

::`snappingRay(self)` -> `(origin_point, direction, snapped)`
    #cppname: HOM_ViewerEvent::snappingRay
    
    Same as [Hom:hou.ViewerEvent#ray], but the returned original point may be snapped with respect to the snapping controls in Houdini. The tuple returns the [Hom:hou.Vector3] objects representing the origin point and a direction vector along with a `bool` value (`snapped`) representing the snap result.  
    
    If `snapped` is `True`, the origin point corresponds to a snapped coordinate in 3D world space. If `False`, the origin point is a regular "pointing ray". 
    
    Note: 
        `snapped` may be `False` if snap is not enabled or the origin point doesn't correspond to a snapped point.
