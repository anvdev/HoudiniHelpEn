= hou.IndirectInput =
#type: homclass
#cppname: HOM_IndirectInput
#superclass: hou.NetworkMovableItem
#group: nodes

"""An abstract base class for a network item that can be used as an input to
nodes in the same network, but which is not a node itself."""

There are two specific forms of an indirect input. The
[Hom:hou.SubnetIndirectInput] provides a way to connect nodes outside a
sub-network to nodes inside the sub-network. The [Hom:hou.NetworkDot]
allows connections to be routed through a network along any path.

@methods

== Inputs and outputs ==

::`outputs(self)` -> `tuple` of [Hom:hou.Node]:
    #cppname: HOM_SubnetIndirectInput::outputs
    Return the nodes that have one of their inputs connected to the output of
    this object.

::`outputConnections(self)` -> `tuple` of [Hom:hou.NodeConnection]:
    #cppname: HOM_SubnetIndirectInput::outputs
    Return a tuple of objects representing each connection to a node from the
    output of this object. The objects returned by this method allow you to
    discover not just which nodes are connected to this object, but which
    inputs it feeds into.

::`input(self)` -> [Hom:hou.Node]:
    #cppname: HOM_IndirectInput::inputNode
    Return the node on the input side of this indirect input. If this
    input comes through another indirect input, this function will recurse
    through that indirect input until it finds a node. If no node is
    connected, even indirectly, `None` will be returned. Note that the
    returned node may not be inside the same parent network as this object
    if the method traverses up through a [Hom:hou.SubnetIndirectInput].
    
::`inputOutputIndex(self)` -> `int`:
    #cppname: HOM_IndirectInput::outputIndex
    Returns the index of the output connection on the node that the input
    side of this object connects to. As with the `input` function, indirect
    inputs are traversed until a node is found. If no node is connected, even
    indirectly, `0` will be returned.

::`inputItem(self)` -> [Hom:hou.NetworkMovableItem]:
    #cppname: HOM_IndirectInput::inputItem
    Returns the item connected directly to the input side of this indirect
    input. This may be a node, indirect input, or `None` if nothing is
    connected. Note that the returned item may not be inside the same parent
    network as this object if it is a [Hom:hou.SubnetIndirectInput].

::`inputItemOutputIndex(self)` -> `int`:
    #cppname: HOM_IndirectInput::inputItemOutputIndex
    Returns the index of the output connection on the network item connected
    directly to the input side of this object. Returns `0` if nothing is
    connected. This value will only be non-zero if a [Hom:hou.Node] is
    connected to this object since all other network items only has a single
    output connector.

== Metadata ==

::`setColorDefault(self)`
    #cppname: HOM_SubnetIndirectInput::setColorDefault
    Sets the color of this object to be the default for indirect inputs. By
    explicitly setting to the default color, any future changes to the default
    indirect input color will cause this object to use the new color. This
    method clears the `symbolicColorName` setting and the
    `useColorFromOutput` setting.

::`setSymbolicColorName(self, name)`
    #cppname: HOM_SubnetIndirectInput::setSymbolicColorName
    Sets the color of this object to use a symbolic color name defined in the
    current Houdini color scheme (see [Hom:hou.ui.colorByName]). The symbolic
    color name will be saved with the hip file so that changes to the color
    scheme will result in a new color being used for this object. This
    method clears the `useColorFromDefault` setting, and causes the
    `color` value to be ignored.

::`setUseColorFromOutput(self, use_output_color)`
    #cppname: HOM_SubnetIndirectInput::setUseColorFromOutput
    Set this indirect input to display itself with the same color as the
    first input connector connected as an output to this object. If set to
    `False`, this object is displayed with its color returned by the
    [Hom:hou.NetworkMovableItem#setColor] method. This method clears the
    `symbolicColorName` setting, and causes the `color` value to be ignored.

::`symbolicColorName(self)` -> `str`:
    #cppname: HOM_SubnetIndirectInput::symbolicColorName
    Return the symbolic color name used to display this object, set with the
    `setSymbolicColorName` method. Returns an empty string if the color of
    this object was set using the `setUseColorFromOutput` or
    [Hom:hou.NetworkMovableItem#setColor] methods. The symbolic color name
    can be converted to a [Hom:hou.Color] using [Hom:hou.ui.colorFromName].

::`useColorFromOutput(self)` -> `bool`:
    #cppname: HOM_SubnetIndirectInput::useColorFromOutput
    Return `True` if this object will be displayed based on the color of the
    first input to which it is connected. Return `False` if will be displayed
    using the color return by the [Hom:hou.NetworkMovableItem#color] method.

