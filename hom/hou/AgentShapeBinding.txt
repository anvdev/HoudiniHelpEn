= hou.AgentShapeBinding =
#type: homclass
#cppname: HOM_AgentShapeBinding
#group: crowds

"""A shape binding in an agent's layer."""

A shape binding attaches a shape from the agent's shape library to a transform
in the agent's rig.
See [Agent Layers|/crowds/diversity#layers] for more information.

@methods

::`__init__(transform, shape, deforming, bounds_scale = 1.0)`
    #cppname: HOM_AgentShapeBinding::HOM_AgentShapeBinding

    Creates a new shape binding.

    `transform`:
        The index of a transform in the agent's [rig|Hom:hou.AgentRig].

    `shape`:
        A [shape|Hom:hou.AgentShape] in the agent's [shape library|Hom:hou.AgentShapeLibrary].

    `deforming`:
        Specifies whether the shape should be treated as static or deforming.

    `bounds_scale`:
        Scale factor for the shape's bounding box.

::`__init__(transform, shape, deformer, bounds_scale = 1.0)`
    #cppname: HOM_AgentShapeBinding::HOM_AgentShapeBinding

    Creates a new shape binding.

    `transform`:
        The index of a transform in the agent's [rig|Hom:hou.AgentRig].

    `shape`:
        A [shape|Hom:hou.AgentShape] in the agent's [shape library|Hom:hou.AgentShapeLibrary].

    `deformer`:
        Specifies the [Hom:hou.AgentShapeDeformer] that should be used to deform the shape.

    `bounds_scale`:
        Scale factor for the shape's bounding box.

::`__init__(shape, deformer, bounds_scale = 1.0)`
    #cppname: HOM_AgentShapeBinding::HOM_AgentShapeBinding

    Creates a new shape binding, where the shape is not attached to a transform in the agent's rig.
    This can be useful for deforming shapes, which are deformed based on their capture attributes and the agent's current pose.

    `shape`:
        A [shape|Hom:hou.AgentShape] in the agent's [shape library|Hom:hou.AgentShapeLibrary].

    `deformer`:
        Specifies the [Hom:hou.AgentShapeDeformer] that should be used to deform the shape.

    `bounds_scale`:
        Scale factor for the shape's bounding box.

::`boundsScale(self)` -> `float`
    #cppname: HOM_AgentShapeBinding::boundsScale

    Returns the scale factor for the shape's bounding box.

::`deformer(self)` -> [Hom:hou.AgentShapeDeformer]
    #cppname: HOM_AgentShapeBinding::deformer

    Returns the deformer used for the shape, or `None` if the shape binding is static.

::`isAttachedToTransform(self)` -> `bool`
    #cppname: HOM_AgentShapeBinding::isAttachedToTransform

    Returns whether the shape is attached to a transform in the agent's rig.

::`isDeforming(self)` -> `bool`
    #cppname: HOM_AgentShapeBinding::isDeforming

    Returns whether the shape is static or deforming.

::`shape(self)` -> [Hom:hou.AgentShape]
    #cppname: HOM_AgentShapeBinding::shape

    Returns the referenced shape.

::`shapeId(self)` -> `int`
    #cppname: HOM_AgentShapeBinding::shapeId

    Returns the unique id of the shape. This is equivalent to `shape().uniqueId()`.

::`shapeName(self)` -> `str`
    #cppname: HOM_AgentShapeBinding::shapeName

    Returns the name of the shape. This is equivalent to `shape().name()`.

::`transformId(self)` -> `int`
    #cppname: HOM_AgentShapeBinding::transformId

    Returns the index of the transform in the agent's [rig|Hom:hou.AgentRig] that the shape is attached to.
