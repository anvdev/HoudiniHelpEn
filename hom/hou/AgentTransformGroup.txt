= hou.AgentTransformGroup =
#type: homclass
#cppname: HOM_AgentTransformGroup
#group: crowds

"""A group of transforms in an agent's rig."""

See [Crowd Agents|/crowds/agents] for more information.

@methods

::`__init__(filename, rig, keep_external_ref = True)`
    #cppname: HOM_AgentTransformGroup::HOM_AgentTransformGroup

    Creates a new transform group by loading it from the specified JSON file.

    Raises [Hom:hou.OperationFailed] if the file does not exist or otherwise cannot be loaded.

    `filename`:
        A path to a JSON file.

    `rig`:
        The [Hom:hou.AgentRig] that the group will be associated with.

    `keep_external_ref`:
        A `bool` indicating whether the external reference should be maintained when the agent is saved to a geometry file.
        If the reference is maintained, then the JSON file needs to be available when the saved geometry is used (only the path to the JSON file is saved in the geometry file).
        Otherwise, a copy of the rig will be inlined when saving out the geometry so that the original file is no longer needed.

::`__init__(name, transforms, rig)`
    #cppname: HOM_AgentTransformGroup::HOM_AgentTransformGroup

    Creates a new transform group containing the specified transforms.

    `name`:
        The name of the new transform group.

    `transforms`:
        An `int` sequence containing the [index of each transform|Hom:hou.AgentRig#findTransform] in the group.

    `rig`:
        The [Hom:hou.AgentRig] that the group will be associated with.

::`__init__(name, transforms, rig, weights)`
    #cppname: HOM_AgentTransformGroup::HOM_AgentTransformGroup

    Creates a new transform group containing the specified transforms.
    This signature allows specifying a `float` sequence with the weight (between 0 and 1) of each transform in the group.

    `name`:
        The name of the new transform group.

    `transforms`:
        An `int` sequence containing the [index of each transform|Hom:hou.AgentRig#findTransform] in the group.

    `rig`:
        The [Hom:hou.AgentRig] that the group will be associated with.

    `weights`:
        A `float` sequence specifying the weight (between 0 and 1) of each transform in the group.

::`asJSON(self)` -> `str`:
    #cppname: HOM_AgentTransformGroup::asJSON

    Returns a string containing the JSON representation of the group.

::`fileName(self, expanded = False)` -> `str`
    #cppname: HOM_AgentTransformGroup::fileName

    If the transform group is an [external reference|Hom:hou.AgentTransformGroup#isExternalReference], returns the path to the file on disk.

    `expanded`:
        Specifies whether to expand any variables in the path, such as `$HIP`.

::`isExternalReference(self)` -> `bool`
    #cppname: HOM_AgentTransformGroup::isExternalReference

    Returns a `bool` indicating whether the transform group [references a file on disk|/crowds/agents#agentdefinition].

::`name(self)` -> `str`:
    #cppname: HOM_AgentTransformGroup::name

    Returns the name of the transform group.

::`transformIndices(self)` -> tuple of `int`:
    #cppname: HOM_AgentTransformGroup::transformIndices

    Returns a list containing the index of each transform in the group.

::`weights(self)` -> tuple of `float`:
    #cppname: HOM_AgentTransformGroup::weights

    Returns a list containing the weight of each transform in the group.
