= hou.AgentShapeLibrary =
#type: homclass
#cppname: HOM_AgentShapeLibrary
#group: crowds

"""The shape library of an agent primitive."""

See [Crowd Agents|/crowds/agents] for more information.

@methods

::`__init__()`
    #cppname: HOM_AgentShapeLibrary::HOM_AgentShapeLibrary

    Creates an empty (and modifiable) agent shape library.

::`__init__(filename, keep_external_ref = True)`
    #cppname: HOM_AgentShapeLibrary::HOM_AgentShapeLibrary

    Creates a new agent shape library by loading it from the specified geometry file.

    Raises [Hom:hou.OperationFailed] if the file does not exist or otherwise cannot be loaded.

    `filename`:
        A path to a geometry file.

    `keep_external_ref`:
        A `bool` indicating whether the external reference should be maintained when the agent is saved to a geometry file.
        If the reference is maintained, then the shape library file needs to be available when the saved geometry is used (only the path to the shape library is saved in the geometry file).
        Otherwise, a copy of the shape library will be inlined when saving out the geometry so that the original shape library file is no longer needed.

::`addShape(self, name, geometry)` -> [Hom:hou.AgentShape]
    #cppname: HOM_AgentShapeLibrary::addShape

    Adds a new shape to the shape library.

    Raises [Hom:hou.GeometryPermissionError] if the shape library is not modifiable.

    `name`:
        The name for the new shape.
    `geometry`:
        A [Hom:hou.Geometry] containing the shape's geometry.

::`data(self)` -> [Hom:hou.Geometry]
    #cppname: HOM_AgentShapeLibrary::data

    Returns the geometry representation of the shape library, which can be saved to disk.

::`fileName(self, expanded = False)` -> `str`
    #cppname: HOM_AgentShapeLibrary::fileName

    If the shape library is an [external reference|Hom:hou.AgentShapeLibrary#isExternalReference], returns the path to the file on disk.

    `expanded`:
        Specifies whether to expand any variables in the path, such as `$HIP`.

::`freeze(self, keep_external_ref = False)` -> [Hom:hou.AgentShapeLibrary]
    #cppname: HOM_AgentShapeLibrary::freeze

    Creates a modifiable copy of the shape library.

    `keep_external_ref`:
        If the original shape library referenced a file on disk, specifies whether the new shape library should be marked as _including_ the original library.
        In this situation, saving out the new shape library will only write out shapes that were not included from the original library, along with the path to the included shape library.
        Otherwise, saving out the new shape library will produce a standalone library containing all of the shapes.

::`isExternalReference(self)` -> `bool`
    #cppname: HOM_AgentShapeLibrary::isExternalReference

    Returns a `bool` indicating whether the shape library [references a file on disk|/crowds/agents#agentdefinition].

::`findShape(self, shape_name)` -> [Hom:hou.AgentShape]
    #cppname: HOM_AgentShapeLibrary::findShape

    Finds the shape with the specified name, or None if no such shape exists.

::`name(self)` -> `str`
    #cppname: HOM_AgentShapeLibrary::name

    Returns the name or filename of the shape library.

::`shapes(self)` -> `tuple` of [Hom:hou.AgentShape]
    #cppname: HOM_AgentShapeLibrary::shapes

    Returns a list of all shapes in the shape library.
