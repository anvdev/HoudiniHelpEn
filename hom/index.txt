= Python Scripting =
#bestbet: python script scripting

"""How to script Houdini using Python and the Houdini Object Model."""

== Overview ==

The Houdini Object Model (HOM) is an application programming interface
(API) that lets you get information from and control Houdini using the
[Python scripting language|http://www.python.org/]. HOM replaces the
functionality of Houdini's previous scripting solutions,
the [expression language|/expressions/] and [HScript|/commands/].

In Python, the [hou package|/hom/hou/index] is the top of a hierarchy of modules, functions, 
and classes that define the HOM. The `hou` module is automatically imported 
when you are writing expressions in the [parameter editor|/ref/panes/parms] 
and in the `hython` command-line shell.


== Which Python? ==

:platform:Mac
    On Mac OS X, Houdini uses the system's Python.

:platform:Windows
    On Windows, Houdini uses the version of Python installed with Houdini.

:platform:Linux
    On Linux, Houdini does not look at `$PATH` when trying to search and load the Python library. Instead it searches all the paths in `$LD_LIBRARY_PATH`, then `/lib`, and then `/usr/lib`. If it can't find a suitable Python library in the system, it uses the one in `$HFS`. If your Python library is not in a standard location, you should add its directory path to `$LD_LIBRARY_PATH`. 


@subtopics

:col:
    == Getting started ==

    :: [intro]
    :: [expressions]
    :: [locations]
    :: [tool_script]

:col:
    == Next steps ==

    :: [HOM cookbook|cb/]
    :: [nodeuserdata]
    :: [pythonsop]
    :: [pythoncop]
    :: [browserpython]
    :: [commandline]
    :: [nodesearch]

~~

:col:
    == Python viewer states == (state)

    """You can write viewer states in Python that let you customize user interaction in the viewport for your node."""
    
    :: [python_states]
    :: [state_node]
    :: [state_nodeless]
    :: [state_selectors]
    :: [state_handles]
    :: [state_guides]
    :: [state_events]
    :: [state_menus]
    :: [state_undo]
    :: [state_guidelines]

:col:
    == Guru level ==

    :: [rpc]
    :: [network]
    :: [extendingwithcpp]

    == Reference ==

    :: [hou/]
    :: [abc_extensions]
