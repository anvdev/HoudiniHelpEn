= Geometry file formats =

table>>
    tr>>
        th>> Extensions
        th>>
            [Type|create_external_format]
        th>> Read
        th>> Write
        th>> Notes
    tr>>
        td>>
            [ .geo |geo]
        td>> Internal
        td>>&#x2713;
        td>>&#x2713;
        td>> Houdini ASCII geometry format.
    tr>>
        td>>
            [ .bgeo |geo]
        td>> Internal
        td>>&#x2713;
        td>>&#x2713;
        td>> Houdini binary geometry format.
    tr>>
        td>>
            `.poly`
        td>> Internal
        td>>&#x2713;
        td>>&#x2713;
        td>>
            Prisms ASCII format (polygons only).

            This format only supports polygonal geometry types. It is
            included in the Geometry Editor to maintain compatibility
            with other, older, systems.


            TIP:
                In a `.poly` file, the first point referred to by the
                polygons is point number 0.

    tr>>
        td>>
            `.bpoly`
        td>> Internal
        td>>&#x2713;
        td>>&#x2713;
        td>> PRISMS binary format (polygons only).
    tr>>
        td>>
            [ .d |draw]
        td>> Internal
        td>>&#x2713;
        td>>&#x2713;
        td>> PRISMS move/draw format (polygons only).
    tr>>
        td>>
            `.rib`
        td>> Internal
        td>>
        td>>&#x2713;
        td>> RenderMan geometry.
    tr>>
        td>>
            `.dxf`
        td>> External
        td>>&#x2713;
        td>>&#x2713;
        td>>
            Uses `gdxf` - polygons only, no attributes.

            `.dxf` was invented by Autodesk for use with AutoCAD. It is
            a common geometry exchange format. `.dxf` format only
            supports polygonal geometry types.

            `.dxf` layers are mapped to groups when read into the SOP
            Editor. Texture and color information is lost if you save to
            a `.dxf` file.

    tr>>
        td>>
            `.obj`
        td>> External
        td>>&#x2713;
        td>>&#x2713;
        td>>
            Uses `gwavefront` - polygons only. Only `texture` and
            `pointnormal` attributes (groups are kept on read).

            `.obj` was invented by Wavefront. It is a very common
            geometry exchange format. `.obj` supports polygons,
            textures, normals, and groups.

    tr>>
        td>>`.pc`
        td>>Internal
        td>>&#x2713;
        td>>&#x2713;
        td>>
            Point cloud tile-based format, as written by [Vex:pcwrite].

    tr>>
        td>>
            `.sdl`
        td>> External
        td>>&#x2713;
        td>>
        td>>
            Uses `gsdl` command.

            `.sdl` was invented by Alias/Wavefront. It was
            traditionally used as input to a renderer.

            Houdini can read `.sdl` files but cannot write them. Houdini
            only imports spline surface geometry (and instances of
            spline surfaces), and the name of each patch and shader is
            imported. It does not import colors and texture
            coordinates.

    tr>>
        td>>
            `.eps`
        td>> External
        td>>&#x2713;
        td>>
        td>>
            Uses `geps` command.

            Houdini reads `.eps` files from Illustrator 5.5 as planar
            geometry. It does not import fills, patterns, or colors.

    tr>>
        td>>
            `.med`
        td>> External
        td>>&#x2713;
        td>>
        td>>
            Uses `gmed` command.

            Houdini will read Meta Editor metaball files, although
            eccentric information is lost upon loading.

    tr>>
        td>>
            `.lw`
        td>> External
        td>>&#x2713;
        td>>
        td>>
            Uses glightwave command.

            `.lw` was invented by NewTek for use with LightWave. Houdini
            supports objects from version 3.5 and earlier. Houdini only
            handles the following LightWave features:

            * points

            * polygons

            * surface names (as primitive groups)

            * surface color as primitive colors)

            * surface transparency as primitive alpha)

            * surface smoothing (as internal cusp operations)

            Houdini will ignore all other features. It cannot load files
            saved with layer information. The file to be loaded _must_
            contain points. However, it need not contain any polygons.

            NOTE:
                By default, LightWave objects are rendered as faceted
                (no smoothing) whereas in Houdini you must explicitly
                cusp polygons in order to achieve this. As a result, if
                you load an object that has no smoothing values set (all
                faceted) you will end up with all points in the
                resulting object being "unique-ed" - giving you a _much_
                larger data set. To get around this, manually convert
                the file using the `glightwave` utility with the `-s`
                option.

    tr>>
        td>>
            `.ply`
        td>> External
        td>>&#x2713;
        td>>&#x2713;
        td>>
            Uses `gply` command.

            `.ply` was designed at Stanford University and UNC Chapel
            Hill, and is mostly used for academic research and with
            Cyberware scanners.

            The `.ply` format is a polygonal format. It can handle very
            large data sets, and supports vertex normals and colors.
            Houdini can read and write `.ply` files using the `gply`
            standalone program.
            
    tr>>
        td>>
            `.stl`
        td>> External
        td>>&#x2713;
        td>>&#x2713;
        td>>
            Uses `gstl` command.

            STL (and BSTL for binary) stands for Stereo Lithographic and is widely used in CAD software as well as many 3D scanners.
            
    tr>>
        td>>
            `.off`
        td>> External
        td>>&#x2713;
        td>>&#x2713;
        td>>
            Uses `goff` command.

            OFF stands for Object File Format, but is not to be confused with OBJ format.  It only supports closed polygons and positions for points.
            
    tr>>
        td>>
            `.hclassic`
        td>> 
        td>> 
        td>> 
        td>>
            Houdini 11 ASCII geometry format.

    tr>>
        td>>
            `.bhclassic`
        td>> 
        td>> 
        td>> 
        td>>
            Houdini 11 binary geometry format.
            
    tr>>
        td>>
            `.json`
        td>> 
        td>> 
        td>> 
        td>>
            Houdini 12 ASCII geometry format

    tr>>
        td>>
            `.bjson`
        td>> 
        td>> 
        td>> 
        td>>
            Houdini 12 binary geometry format
            
NOTE:
        Setting the environment variable `HOUDINI_GEOMETRY_FORMAT` to `hclassic` will set `.geo/.bgeo` to save as `.hclassic/.bhclassic` format. This will cause Houdini to save locked geometry in a format that can be read into older versions of Houdini. The older `hclassic` formats do not support all features of the newer geometry libraries, so use of the environment variable to override the format globally should be used with caution.


@related
- [Tile block formats|tbf]

