= Supported file formats =

== Available formats ==

- [Image formats|image_formats] (`pic` is Houdini's native image format)
- [Geometry formats|geometry_formats] ([geo/bgeo|geo] is Houdini's native geometry format)
- [Scene description formats|sdl_formats] (for renderers)
- [Channel/audio formats|channel_formats]

== External vs. internal file formats ==

_External_ formats are implemented by standalone converter programs
piped to Houdini. _Internal_ formats are built into Houdini. Internal
formats are slightly faster. You can [create new external
formats|create_external_format]  without using the Houdini
Developer's Kit.

== How to write a custom importer/exporter ==

If you have a format that you would like to be able to read and/or
write, you can write a converter from your file format to the equivalent
native Houdini format and/or a converter from the equivalent native
format to your format. Then, add an entry to the appropriate IO table in
$HFS/houdini/support. The converter program can appear anywhere in the
Houdini search path.

table>>
    tr>>
        th>> Data type
        th>> Intermediate format
        th>> I/O table
    tr>>
        td>> Geometry
        td>>
            `.geo`
        td>>
            $HFS/houdini/GEOio
    tr>>
        td>> Channel
        td>>
            `.clip`
        td>>
            $HFS/houdini/CHOPio
    tr>>
        td>> Image
        td>> Any supported image format
        td>>
            $HFS/houdini/FBio
NOTE:
    You should generally not modify files in $HFS/houdini. Copy the
    files under $HOME/houdini and modify them there.

Each line of an I/O table file contains the filename suffix, the command
to read the custom format (in quotes), and the command to write the
custom format (in quotes). Use `%s` to represent the filename in the
quoted commands.

Future formats will be added using this method.
