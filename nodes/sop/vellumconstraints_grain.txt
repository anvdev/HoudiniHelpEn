#type:     node
#context:  sop
#internal: vellumconstraints_grain
#icon:     SHELF/vellum_grains

= Vellum Configure Grain =

"""Configures geometry for Vellum Grain constraints."""

The Vellum Configure Grain SOP configures the incoming geometry to be solved as grains in the Vellum Solver system.  The two main options are either to convert the incoming geometry into points by treating
it as a volume and filling it with grains; or tag existing points on the input to have grain-like behavior.

NOTE:
    Grains often require more substeps than other Vellum constraint types.  It is recommended any attached Vellum solver be raised to at least 5 substeps for stability.

NOTE:
    For more control over filling a volume with grains, look at the [Grain Source|Node:sop/grainsource] node.

@parameters

Create Points from Volume:
    #id: createpoints

    Treat the incoming geometry as a closed volume and fill it with points.
    These points are then configured as grains.

Group:
    #id: group

    The subset of incoming points to configure for grain-like interaction.

Group Type:
    #id: grouptype

    In case the group is named or numeric, this can disambiguate what
    type of group it is.

Grain Size:
    #id: grainsize

    Diameter of the grains.   The `pscale` attribute will be set to
    one half this.

Mass:
    #id: mass

    The mass of each individual grain.

Jitter Scale:
    Controls jittering of point positions.  

    Because relaxation can never accurately separate all particles, note
    that the final `pscale` will be reduced to minimize overlap.

Add Sprite Material:
    #id: showsprite

    Adds a sprite material so the grains will display as spheres in
    the viewport.

Show All Points:
    #id: showallpoints

    Points that are attached to primitives do not draw their sprites by
    default.  This will cause them to still draw the sprite, useful
    if combining two constraint types within the same point.

@related
    - [Node:sop/grainsource]
    - [Node:sop/vellumdrape]
    - [Node:sop/vellumconstraints]
    - [Node:sop/vellumsolver]
    - [Node:sop/vellumio]

