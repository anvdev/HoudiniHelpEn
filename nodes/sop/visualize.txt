= Visualize =

#type: node
#context: sop
#internal: visualize
#icon: SOP/visualize
#tags: visualize

"""Lets you attach visualizations to different nodes in a geometry network."""

== Overview ==

While the [visualization interface|/basics/visualizers] lets you attach visualizations to specific nodes, sometimes you want to move the same visualization around to different nodes in a geometry network to inspect the geometry as it moves through the network. This node lets you do that by attaching visualizers to this node, then using a shortcut key to move this node around the network quickly.

== How to ==

# Hover over a geometry node in the network editor and press ((X)). Houdini will wire a visualize node onto that node and set the display flag.

# Use the controls on the visualize node's __Visualizers__ tab or the [visualizers interface|/basics/visualizers] to set up the visualization.

# Hover over various nodes in the network and press ((X)). The visualize node will automatically move and rewire as you go.

TIP:
    Pressing ((X)) again on the node with the visualize attached will unwire the visualize node.

@parameters

Update Visualizers:
    Regardless of this setting, any visualizers in the Visualizer tab
    will be shown when viewing this node.  But if this is set, the visualizers
    are also added to the list of visualizers on the geometry so they
    are passed down to later nodes.

Clear Incoming Visualizers:
    Don't show any visualizers that were already on the node the visualize node is wired to. (Technically, this clears the `visualizers` attribute on the incoming geometry.)

Wireframe:
    Normally geometry is displayed as wireframe or shaded according to
    the viewport options.  The `gl_wireframe` detail attribute can override
    this, and this allows it to be overridden.  Note that in the case
    of force shaded, normals are not recomputed so this is usually used
    with no lighting.

    For guide geometry, which are normally only drawn as wireframe, this allows
    them to also be drawn as shaded when using any of the shaded viewport modes.

Lighting;
    Viewport lighting can be disabled on geometry with the `gl_lit`
    detail attribute.  This is useful when geometry already has
    baked point colours and one doesn't want the lighting to wash
    it out.

Show Points:
    Only unconnected points are normally drawn for point markers and
    sprites.  But the `gl_showallpoints` detail attribute can be used
    to override and show all points.

Cusp Angle:
    Houdini auto-cusps polygons whose angle crosses the global cusp
    threshold.  For some geometry (such as cloth or fluid surfaces)
    this can introduce unwanted creases.   The `vm_cuspangle` will
    override how this geometry data is cusped.

    NOTE:
	This applies to both Mantra and Houdini.

@related

- [Node:sop/volumevisualize]
