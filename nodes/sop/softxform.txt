#type: node
#context: sop
#internal: softxform
#icon: SOP/softxform

#tags: reshape, model, smooth

= Soft Transform =

"""Moves the selected point, with smooth rolloff to surrounding points."""

As you move the select point(s) or group, the surrounding points (within a set radius) move by an amount proportional to their distance to the selected point/group.


@parameters

Group:
    Subset of points to transform.
Transform Order:
    Order in which transformations occur.
Rotate Order:
    Order in which rotations occur.
Translate:
    #channels: /tx /ty /tz

    Amount of translation along xyz axes.
Rotate:
    #channels: /rx /ry /rz

    Amount of rotation about xyz axes.
Scale:
    #channels: /sx /sy /sz

    Non-uniform scaling along xyz axes.
Shear:
    Amount of shearing. The three values represent X on XY plane, X
    on XZ plane, and Y on YZ plane respectively.
Pivot:
    #channels: /px /py /pz

    Local pivot point for transformations.
Distance Metric:
    #id: distmetric
    Method for measuring which points are within the soft radius.

    Edge:
        The shortest distance to a point in the group following a path along
        edges.
    Surface:
        The shortest distance to a point in the group following a path along
        the surface.
    Radius:
        The 3D distance to the closest point in the group.
    Radius with Connectivity (deprecated):
        The 3D distance to the closest point in the group, as long as there
        is a connected path contained entirely within the __Soft Radius__.
    Attribute:
        __Distance Attribute__ determines how much each point is transformed.
        Only points in the input group will be transformed, even if other points
        have valid values in the attribute.
Apply Rolloff:
    #id: applyrolloff

    If __Distance Metric__ is __Attribute__, apply a rolloff to the distance
    output by treating the __Distance Attribute__ as raw distances. A value
    of zero will be fully transformed, while higher values will be
    transformed less. Only points whose values are less than or equal to __Soft
    Radius__ will be affected. If this is toggled off, the __Distance
    Attribute__ value is treated as if it has already been rolled off, and the
    transform is multiplied by the value. A value of one will be fully
    transformed while smaller values will be transformed less.
Distance Attribute:
    #id: distattr

    If __Distance Metric__ is __Attribute__, this specifies the point attribute
    containing the values that modify the amount each point in the group is
    transformed by. If __Apply Rolloff__ is true the values are treated as
    raw distances and will be rolled off to between zero and one, otherwise
    the transform amount is multiplied by the value.
Soft Radius:
    #channels: /radius

    Area of influence.
Soft type:
    #id: type

    The type of rolloff for soft modifications. This affects how
    much influence your direct edits have on other points/faces
    with the soft radius, based on their distance.

    Linear:
        Linear falloff: the amount of influence decreases
        linearly with distance.
    Quadratic:
        Slow falloff: direct edits affect distant points/faces
        more than with Cubic.
    Cubic:
        Quick falloff: direct edits affect distant points/faces
        less than with Quadratic.
    Metaball:
        Calculate falloff according with the metaball density
        function you specify in the __Kernel function__
        parameter.
Tangent Angles:
    #channels: /tandeg

    Angles of the cubic rolloff function's tangents. The first value
    applies to the tangent farthest from the source point, the
    second applies to the tangent closest to the source point.
Kernel Function:
    [Metaball kernel|/nodes/sop/metaball#kernels]  to use when rolloff Type is __Meta-ball__.
Attributes:
    These point attributes are transformed, if they are marked as transforming.
    Use [Attribute Create|Node:sop/attribcreate] to set the transformation type on an attribute to __Position__, __Vector__, __Normal__, __Quaternion__, or __Transform Matrix__. Set the type to __None__ to make an attribute non-transforming, or
    remove it from this list.
Recompute Point Normals:
    Recomputes all normals as point normals, if a normal attribute exists.
Recompute Affected Normals:
    Recomputes any normals that are affected by polygons that use any transformed points.
    This does nothing if `P` is not being transformed.
Preserve Normal Length:
    Normal lengths remain unaffected.
Visualize Falloff:
    When to output the soft radius falloff as a `vis_falloff` point
    attribute.

    Never:
        Never create or write to the `vis_falloff` attribute.
    Always:
        Always create and write to the `vis_falloff` attribute. 
    When Viewport Tool Is Active:
        Only create or write to the `vis_falloff` attribute temporarily
        when the viewport tool for this node is active.
Local Space:
    If true, the manipulation of selected points will take place in 
    a frame defined by the averaged normals of the selected points.
Up Vector:
    If the soft transform node is operating in local space mode, 
    then the second degree of freedom may be specified via this parameter.
    The local y-axis will be rotated to match the specified up vector as
    closely as possible.
    
@locals

CEX, CEY, CEZ:
    The centroid of the input
GCX, GCY, GCZ:
    The centroid of the input group
XMIN, XMAX:
    The X extents of the bounding box of the input
YMIN, YMAX:
    The Y extents of the bounding box of the input
ZMIN, ZMAX:
    The Z extents of the bounding box of the input
SIZEX, SIZEY, SIZEZ:
    The size of the bounding box of the input

@related

- [Node:sop/xform]
- [Node:sop/primitive]
- [Node:sop/point]
- [Node:sop/softpeak]
- [Node:sop/edit]
- [Node:sop/falloff]

