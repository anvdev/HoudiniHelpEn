#type: node
#context: sop
#internal: solidembed
#icon: SOP/solidembed

#tags: finite element solver, tetrahedralize, embedding, solid object, tet mesh

= Solid Embed =

"""Creates a simple tetrahedral mesh that covers a connected mesh."""

The Solid Embed SOP creates a simplified tetrahedral mesh that covers the input mesh. This simplified tetrahedral mesh can be used with the [Solid Object|Node:dop/solidobject] in an embedded finite element simulation. When the source mesh consists of highly detailed rendering geometry, it is much more efficient to simulate the simplified tetrahedral mesh created by Solid Embed instead of the original source mesh.

NOTE:
    The Solid Embed SOP is designed to be used only with meshes that consist of a single connected component.

To use the embedded workflow for finite elements, you can point the __Embedded Geometry__ on the [Node:dop/solidobject] to the original mesh and point the __Initial Geometry__ to the Solid Embed SOP. 

If the `fracturepart` attribute is present on the input geometry, then this attribute is transferred to the simplified mesh. This allows the finite element solver to maintain correspondences between the embedded parts and the simplified parts. The `Cd` attribute is transferred as well, to facilitate visualization.

@parameters

== Sizing ==

The following parameters control the sizes of generated tetrahedra.  Each scale is multiplied by the __Base Size__, which can be specified manually or computed automatically.

Base Size:
        If enabled, this option sets the size of the model in the input. This enables the modification of the model without changing the relative scale of the generated tets. If disabled, the base size of the model is determined automatically as the diameter.  In this mode, the sizes of generated tets are independent of the global scale of the model. All sizing parameters below as scaled using the manually set or automatically computed Base Size.

Max Tet Scale:
        This parameter controls the maximum size of individual generated tets. This value is relative to the __Base Size__. The higher this parameter is set, the larger the tetrahedra on the interior of the tet mesh are allowed to be (less interior detail).

Min Triangle Scale:
        This parameter controls the minimum size of the triangles on the surface of the mesh. This value is relative to the __Base Size__. The higher this parameter is set, the larger the triangles on the tet mesh boundary will be (less surface detail).

Local Scaling:
        Selects the method to control sizes of tetrahedra on the surface of the resulting tetrahedralization. Interior tetrahedra are sized based on sizes interpolated from the surface.

        None:
            Surface tetrahedra will not be scaled in any particular way.
        Use Local Feature Size:
            Determine the sizes of surface tetrahedra by following the sizes of triangles in the input.
        Use Point Attribute:
            Specify a custom point attribute to guide the sizes of generated tetrahedra.

Local Feature Scale:
        Sets the scale of local features to guide how large tetrahedra should be on the surface. This is the only scale that isn't multiplied by the __Base Size__ because it scales an already relative quantity -- the feature size.

Local Scale Attribute:
        Sets the scale of surface tetrahedra based on the values of the given point attribute.
    
NOTE:
        All scales above except __Local Feature Scale__ are multiplied by the __Base Size__ to give the actual size of tetrahedra.


== Discretization ==

    Use Remesh:
	Enables the use of [Remesh|Node:sop/remesh] to control the quality of the tet mesh on the surface.  This option improves the quality of the mesh near the surface at a performance cost.

    Voxel Size:
	When enabled, this parameter directly controls the resolution of the underlying voxel representation as the [Voxel Size|Node:sop/vdbfrompolygons#voxelsize] controls the resolution in the [VDB from Polygons SOP|Node:sop/vdbfrompolygons]. If this is not enabled, then a voxel size is determined automatically. Generally, a smaller value for the Voxel Size will capture finer details of the input geometry.

    Max Resolution:
	When enabled, this parameter puts an upper limit on the voxel resolution that is used to define the solid surface.

== Other Parameters ==

    Add Surface Triangles:
        Output surface triangles in addition to the tetrahedra.

    Enlarge to Cover Input Mesh:
        If this is turned on, the tet mesh is made bigger so that it covers more of the input mesh.

@related

- [Node:sop/tetrahedralize]
- [Node:sop/solidconform]
- [Node:sop/solidify]
- [Node:sop/remesh]
- [Node:sop/divide]
- [Node:sop/polyreduce]
- [Node:sop/vdbfrompolygons]
