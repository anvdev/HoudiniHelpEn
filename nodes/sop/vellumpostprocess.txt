#type:     node
#context:  sop
#internal: vellumpostprocess
#icon:     SOP/vellumpostprocess

= Vellum Post-Process =

"""Applies common post-processing effects to the result of Vellum solves."""

The Vellum Post-Process node provides common post-processing operations
for Vellum solvers.  It can fuse the welds to be shared points, smooth
the geometry, and subdivide the mesh.  In addition, if constraints
are provided it can visualize the constraint energies, very useful
when inspecting a simulation that has been saved to disk.


@parameters

== Operations ==

Apply Welds:
    #id: doweld

    Fuse all the points that have been implicitly welded with
    `weld` and `branchweld` attributes.


=== Smooth ===

Group:
    #id: blurgroup

    Points to apply blurring effects to.


Spatial Blur:
    #id: spatialblur

    Amount of blurring to apply.  Points move to the average of their
    neighbors.  This can smooth out unwanted spikes in the cloth.


Subdivision:
    #id: subdivide

    A low res cloth can be up-resed after the solve by smoothly subdividing it.  Non-manifold patches will be split prior to subdividing to ensure gaps aren't formed.

    None:
	No subdivsion is done.

    Catmull-Clark:
	Catmull-Clark subdivision, which works best for quadrilaterals is done.

    Loop:
	Loop subdivision, which works best for triangles, is done.


Subdivision Depth:
    #id: depth

    Number of rounds of subdivision to perform.


=== Collision Correction ===

Detangle:
    #id: dodetangle

    The smooth and subdividing may introduce collisions.  Detangling
    moves points to avoid such introduced collisions.  Note each point
    moves independently, so this can result in ugly geometry if large
    changes are required.

Self Collisions:
    #id: doself

    Check for self-collisions.


Passes:
    #id: detangle_pass

    Number of iterations of detangling to perform.


Default Thickness:
    #id: detangle_thickness

    If no `pscale` is present, this is used for the thickness of the objects.


=== Thicken ===

Extrude by Thickness:
    #id: doextrude

    Extrude cloth sheets in both directions along their normals.


Thickness Scale:
    #id: extrude_scale

    Multiplier to scale `pscale` by for the extrusion amount.


== Visualize ==

Show Collision:
    #id: showcollision

    Visualize the third input, the collision geometry, as blue wireframe.


Show Guide Geometry:
    #id: showguide

    Display the constraint guide geometry.

[Include:/nodes/sop/_vellum_common]


@related
    - [Node:sop/vellumsolver]
    - [Node:sop/vellumdrape]
    - [Node:sop/vellumconstraints]
    - [Node:sop/vellumconstraints_grain]
    - [Node:sop/vellumio]
