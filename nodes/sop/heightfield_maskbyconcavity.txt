= HeightField Mask by Concavity =

#type:     node
#context:  sop
#internal: heightfield_maskbyconcavity
#icon:     SOP/heightfield_maskbyconcavity

"""Creates a mask where the input terrain is hollow/depressed, for example riverbeds and valleys."""

The node measures concavity as "how much sky is visible from the given point?" It sends rays from each point in different directions and measures how many hit terrain before reaching their maximum distance.

[Image:/images/nodes/sop/heightfield_concavity,png]

@parameters

== Masking ==

[Include:_heightfield_common#combine]
    
[Include:_heightfield_common#blend]        
    
Minimum Concavity:
    #id: minexposure
    
    Areas with concavity equal to or greater than this value are added to the mask.

Maximum Concavity:  Maximum concavity to mask.
    #id: maxexposure
    
    Areas with concavity less than or equal to this value are added to the mask.
    
Invert Mask: Invert Mask.
    #id: invertmask
    
    Invert the mask, so values _outside_ the concavity range are added to the mask instead.


=== Quality ===

View Distance:
    #id: viewdistance
    
    How far to send rays to determine if a point can see the sky. Longer distances give more accurate measurements, but can be slower.
    
Step Scale:
    #id: stepscale
    
    How finely to step along the rays to determine if a point can see the sky. Larger values are faster but might miss thin features.
    
Number of Searches:
    #id: numsearches
    
    How many rays to send to determine if a point can see the sky. Larger numbers give more accurate measurements, but can be slower.

    
== Layer Bindings ==

[Include:_heightfield_common#masklayer]

[Include:_heightfield_common#heightlayer]

    

