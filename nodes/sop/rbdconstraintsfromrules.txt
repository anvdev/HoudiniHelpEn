#type: node
#context: sop
#icon: SOP/rbdconstraintsfromrules
#internal: rbdconstraintsfromrules
#tags: rbd, constraints

= RBD Constraints From Rules =

"""Creates rigid body constraint geometry from a set of rules and conditions."""


== Overview == 

This is a procedural node that allows you to create and edit constraints based on a set of rules and conditions. For example, you can constrain pieces based on groups and then only constrain the pieces that are within a certain bounding region. Once the rules and conditions are set, you can choose the __Connection Type__ to determine how the constraints are set up.

[Image:/images/sop/RBD_constraint_rules.png]

:task: Edit hinge position:
    ((LMB)) drag the hinge.
    
:task: Delete hinge:
    ((Ctrl + LMB)) click the hinge.
    
:task: Slide hinge position along the constraint line.
    ((MMB)) drag along the line.

:task: Switch between edit and transform handle:
    Press ((2)).

:task: Display/hide bounding box handles:
    Press ((3)).

:task: Cycle between handles:
    Press ((Z)).


[Include:/dyno/fracturing#types]

@inputs

Geometry:
    Input geometry to create constraints for.

Constraint Geometry:
    Constraint geometry to be merged with. Used with the match name pairs option.

Proxy Geometry:
    Proxy geometry. The constraints will be built using this geometry when available.

Bounding Geometry:
    Input geometry defining the volume within which to create constraints.

@parameters

Connection Type:
    Surface Points:
        Creates constraints connecting closest points from nearby pieces.
    Hinges:
        Creates 0 length 2 point prim constraints placed at the intersection of the 2 surfaces.
    Center of Mass:
        Creates constraints connecting centroids of nearby pieces.
Hinge Length:
    Specify the length of the hinge constraint.
Create Group:
    Add the created constraints to a primitive group.
Group Name:
    The name of the primitive group to create.
Show Object Link:
    When the connection type is set to __Surface Points__ or __Hinges__, displays links to the pieces' centroids to help identify them.

Clear Hinge Edits:
    Remove all hinge constraint edits.

Groups:
    All:
        Create constraints between all pieces.
    All to Group:
        Create constraints between pieces in Group 1 and all other pieces.
    Group to Group:
        Create constraints between pieces in Group 1 and pieces in Group 2.

Points per Area:
    #id: pointsperarea
    When connection type is __Center of Mass__, points are first seeded on 
    the surface of all the objects. There must be enough points for close
    points to occur to detect close surfaces. This should be scaled down
    by the square of the geometry size. For example, if your geometry is 10x bigger, 
    you should have 1/100 of the points per area.

Piece Attribute:
    #id: pieceattribute
    String or Int primitive attribute name indicating piece boundaries - no 
    constraints will be created between pieces with the same attribute value.

Search Radius:
    #id: searchradius
    Specify the maximum allowed distance when searching for nearby points.

Max Search Points:
    #id: maxsearchpoints
    Specifies an upper limit on the number of nearby points that can be 
    inspected. Lower numbers will improve performance but run the risk
    that only points from the same piece will be detected rather than 
    points on nearby pieces, causing connections to be missed.

Max Connections:
    #id: maxconnections
    Specifies an upper limit on the number of pieces that each seed point
    can be connected to.

Constraints Per Piece:
    #id: constraintsperpiece
    Specify the maximum number of constraints between 2 pieces.

Use Clusters:
    Use a cluster float attribute to connect pieces with matching values within a given tolerance.

Cluster Attribute:
    Specify the name of the float cluster attribute.

Tolerance:
    Specify the attrib value tolerance. 

Match by Existing Constraints:
    Constraints will only be created between pieces with name pairs defined by the second inputs 
    constraint geometry. This is mostly useful for converting center of mass constraints 
    to other constraint types.

Group:
    The group of constraint prims to consider when matching by name pairs.

Keep Constraints:
    By default the original reference name pair constraint primitives will be replaced by the new constraints. Turning this on will ensure they aren't deleted.

Keep in Bounding Regions:
    Enable:
        Generate constraints only within the bounding volume.
    
    Bounding Type:
        Shape of bounding volume.

    Inverse:
        Constraints are generated only outside the bounding volume.

    Size:
        Size of the bounding box.

    Center:
        Center of the bounding box.

    Rotation:
        Rotation of the bounding box.


@related
    - [Node:sop/booleanfracture]
    - [Node:sop/rbdcluster]
    - [Node:sop/rbdconstraintsfromlines]
    - [Node:sop/rbdconstraintsfromcurves]
    - [Node:sop/rbdconstraintproperties]
    - [Node:sop/rbdinteriordetail]
    - [Node:sop/rbdmaterialfracture]
    - [Node:sop/voronoifracture]
