#type: node
#context: sop
#internal: voronoisplit
#icon: SOP/voronoisplit

#tags: subdivide, split

= Voronoi Split =

"""Cuts the geometry into small pieces according to a set of cuts
defined by polylines."""

Voronoi Split cuts geometry according to a set of polylines.  Each
line describes a cut along its mid point.  Lines are best created with
the [Tetrahedralize SOP|Node:sop/tetrahedralize].

This is a utility SOP which is similar to the [Voronoi Fracture SOP|Node:sop/voronoifracture], but without any of the extra features. [Voronoi Fracture|Node:sop/voronoifracture] should typically be used instead of Voronoi Split.

@parameters
Group:
    Subset of the input geometry to split.
Clip Points Group:
    Lines leaving these points will be used as clipping lines.
    Each point will correspond to a new piece.
Offset:
    Instead of cutting at the mid point, it is offset by this
    percentage along the line.
Create Interior Surfaces:
    The interior faces of cutting the polygons are created.  This
    requires the input be a closed watertight manifold.
Stamp Pieces with Point Numbers:
    Creates attributes storing the original point number and piece
    number.  This allows one to build a stable correspondence
    between your input points and the resulting polygons.
Weight Attribute:
    When enabled, the specified float attribute provides a "weight" for each point.
Method:
    Specifies how the __Weight Attribute__ is used to place the cutting planes.

    Power Distance:
        The weight will be interpreted as the radius of a sphere centered at the point.
        The cutting plane will be placed at the point where the [power with respect to both spheres|Wp:Power_of_a_point] is the same.
        This produces a [power diagram|Wp:Power_diagram].
        If the radii are equal, this results in a normal Voronoi diagram.

    Ratio:
        The cutting plane for each connected pair of points will be placed such that the ratio of the distances from each point will be the same as the ratio of the weights.
        The plane will be closer to points with smaller weight and farther from points with larger weight.

@related
    - [Node:sop/cookie]
    - [Node:sop/tetrahedralize]
