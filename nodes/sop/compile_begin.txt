#type:     node
#context:  sop
#internal: compile_begin
#icon:     SOP/compile_begin

= Block Begin Compile =

"""The start of a compile block."""

The Block Begin Compile works in concert with the [Block End Compile|Node:sop/compile_end] to separate part of a node network from the rest of the graph.

Block Begin Compiles form the input into compiled block and mark the transition from normal SOP cooking into the compiled subgraph.

NOTE:
    This node will rarely be explicitly placed.  Instead, the __Compile Block__ tab menu entry will generate a pair of block nodes in a single operation.

@parameters

Block Path:
    #id: blockpath

    The path to the [Block End Compile|Node:sop/compile_end] representing the end of the compiled sub-graph.
    
Input Name:
    Each of the inputs of a compiled block may be assigned a name to allow
    external users of the compiled block to replace the wired input with
    their own data.  This is used by the [Invoke|Node:sop/invoke] and
    the [SOP Solver|Node/dop/sopsolver::2.0].

Optional:
    Normally all inputs are cooked prior to invoking the compiled block.
    This ensures no unexpected needs to return to the old cook engine
    and generally more controllable results.  However, if the Optional
    flag is set the input will only be cooked on demand

    NOTE:
	This only applies to the top level of compile blocks, nested
	compile blocks currently will pre-cook all their inputs.
    
Create Block Begin Node:
    #id: createbeginblock

    Creates a clone of this node with the appropriate block path setup.
    
    
@related
- [Node:sop/compile_end]
- [Node:sop/invoke]
