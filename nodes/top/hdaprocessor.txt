#type:     node
#context:  top
#internal: hdaprocessor
#icon:     TOP/hdaprocessor

= HDA Processor =

"""Creates work items that cook a digital asset"""

This node generates work items that are cooked using the HDAProcessor executable
that ships with Houdini. The attributes of the work item are applied as
parameters to the asset.

@top_attributes
HDA Processor will create attributes on work items for all spare parms added
to the __HDA Parameters__ folder on the node. Additionally, it will create the
following built-in attributes:

::`hda`:
    #type: string

    The path to the digital asset that will be cooked by the work item

::`operatortype`:
    #type: string

    The operator type within the digital asset. If an operator type is not
    specified using the __Operator Type__ parameter this attribute will be
    set to empty string, and the work item will use the first operator in the 
    .hda.

::`fileinputs`:
    #type: integer

    The number of input files, as specified in the __Number of Inputs__
    parameter.

::`inputpath`:
    #type: string array

    The input file(s) that should be passed to file SOP inputs wired into
    the .hda. The length of the string array will match the value of the
    __Number of Inputs__ parameter and the `fileinputs` attribute.

::`writegeo`:
    #type: integer

    Set to 1 if __Write Geometry__ is turned on, else 0.

::`outputpath`:
    #type: string

    The output path where geometry will be written, if __Write Geometry__ is
    turned on.

::`outputtag`:
    #type: string

    The result data tag associated with the output path.

::`dumpdebug`:
    #type: integer

    Set to 1 if __Save Debug .hip File__ is turned on, else 0.

@parameters

== Generation ==

=== Asset ===
Template Node:
    #id: templatenode

    An instance of a digital asset in the current Houdini session. The HDA Processor will cook instances of that asset and use its parameter values as defaults.

HDA File:
    #id: inputfile

    The path of the HDA to cook.  This path can be absolute or it can be relative to HOUDINI_PATH.  
    
    For example an asset `myasset.hda` is in a sub-directory `otls` in `hou.homeHoudiniDirectory()`, you can specify it as `otls/myasset.hda` in this parm and in the `File Dependencies` folder.

    You should also add this path to __File Dependencies__ if it should be copied to the working directory before the HDA Processor executes.

Operator Type:
    #id: optypeselection

    The operator type to select from within the digital asset. If no operator type is specified, HDA Processor will pick the first type it finds when cooking the asset.

Update HDA Parameters:
    #id: updateHDAParms

    When pressed, this button updates the __HDA Parameters__ section

Filter HDA Parameters:
    #id: filterparms

    Opens a dialog that can be used to configure which parameters from the asset should be promoted onto this node.

Auto Enabled HDA Parameter Expressions:
    #id: autoexpression

    When this parameter is enabled, empty expressions will automatically be set on the __HDA Parameters__

=== Work Items ===

[Include:processor_common#pdg_workitemgeneration]

[Include:processor_common#pdg_cachemode]

Iterations:
    #id: iterations

    The number of work items to create

Priority:
    #id: priority

    When enabled, the priority of the work items created by this node. The 
    default priority is 0.

Sequential:
    #id: sequential

    When this toggle is enabled, the work items generated by this node will be
    sequentially dependent on each other.

=== Asset Input ===

Create File SOP Inputs:
    #id: createfileinput

    When this parameter is enabled, one or more file SOPs will be instantiated and wired as inputs to the asset. This can be used to chain multiple HDA Processor nodes together more easily.

Number of Inputs:
    #id: fileinputs

    The number of input file SOPs to create. By default, the file SOP will use the nth input file to the work item.

Custom Input File #:
    #id: customfile

    By default, the input file that corresponds to this file's number will be used as the input to the file SOP. This parameter can be enabled to provide a custom input file path.

=== Asset Output ===

Write Geometry:
    #id: writegeo

    When this toggle is turned on, HDA Processor will output geometry to disk from the display node in the asset. If the asset contains a COP network or a ROP network, it may be useful to turn this off.

Output File Name:
    #id: outputfile

    When writing geometry, this is the name of the output file.

Output Tag:
    #id: outputtag

    When writing geometry, this is the tag assigned to the result file

Save Debug .hip File:
    #id: dumpdebug

    When this toggle is enabled, a debug .hip file containing the instantiated asset, the file SOP and all parameter values will be written to disk. This is useful for tracking down problems with the asset.  Be careful not to leave this on because it will significantly slow down execution.

== HDA Parameters ==

This section of the node is filled in automatically based on the parm interface
of the selected digital asset. Parameters set here will be copied to work item
attributes and applied to the asset when its cooked.

== Files ==

[Include:processor_common#pdgnodedeps]

@related
- [Node:top/ropfetch]
- [Node:top/ropgeometry]
