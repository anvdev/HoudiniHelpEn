= File Copy =

#type:      node
#context:   top
#internal:  filecopy
#icon:      TOP/filecopy

"""Copies a file from one location to another, either at runtime or whenever the node generates."""

The node sets the destination file path as the result file of this node's work item.

See the help for the __Async copy__ and __Copy in generate__ parameters for how this node works. If you want to copy a file that is generated by the network, you need to turn on __Async copy__ or turn off __Copy in generate__.


@top_attributes

::`destname`
    #type: string

    The destination path to copy to.

::`resultdatatag`
    #type: string

    The [file tag|/tops/filetags] to use for the copied file.

::`asynccopy`
    #type: integer

    Boolean indicating whether the copy is being performed asynchronously (work
    script) or in process.

::`copyingenerate`
    #type: integer

    Boolean indicating whether the copy will be performed in the onGenerate
    callback (in-process only).

::`sourcename`
    #type: string

    The source path to copy from.


@parameters

Source File Path:
    #id: sourcename

    File path of the file to copy.

Destination File Path:
    #id: destname

    File path to copy the file to.

Result Data Tag:
    #id: resultdatatag

    This node sets the destination path as the "file result" of its work item. The [file tag|/tops/filetags] to use for the result. The default is just `file`. You may want to specialize the tag based on the type of file being copied (for example, `file/image/exr` or `file/geo`).

Async Copy:
    #id: asynccopy

    Perform the file copy in another process (potentially on a render farm). When this is off (the default), the copy runs in the graph cooking process (see the __Copy in generate__ parameter below). You will usually want to leave this off unless the file to be copied is very large, in which you could run the copy in another process so it doesn't hold up cooking the rest of the network.

Copy in Generate:
    #id: copyingenerate

    When this is off (the default), the file is copied when the work item runs (inside the main cooking process). This allows you to copy files that might have been generated by previous nodes in the network. When this is on, the file is copied whenever the node generates static items (when the network starts cooking, or when you explicitly ask to generate static items). Only turn this on if the file always exists ahead of time (is not generated by the network).




