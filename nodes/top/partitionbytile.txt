#type:     node
#context:  top
#internal: partitionbytile
#icon:     TOP/partitionbytile

= Partition by Tile =

"""Partitions work items spatially using axis-aligned bounding boxes."""

This partitions work items based on tiles so that each partition corresponds to 
a tile that contains work items with geometry that intersects with that tile. 
The tiles are arranged in a 3D grid, with origin at __Tile Origin__, where each 
axis has __Tile Count__ number of tiles. Each tile has size per side calculated 
as __Total Size__ / __Tile Count__. Tiles can be visualized as a grid of 
bounding boxes.

The source geometry is specified by attributes on each work item. The types of 
attribute data supported are points from string, points from vector, and 
bounding box. Points can be connected (i.e. a curve) or disconnected 
(point cloud), and points can be given a radius for size (i.e. sphere or tube).

Note that partitions are only created for tiles that contain or intersect with
work item geometry. The resulting index of the partition corresponds to the tile
index.

As an example, a __Tile Count__ of 2x2x2 and a __Total Size__ of 512 produces 8 
axis-aligned bounding boxes, where each box is of size 256x256x256.


@parameters

[Include:partitioner_common#pdg_dynamicpartition]

[Include:partitioner_common#pdg_partitionmerge]
    
    
== Tiles ==

Tile Origin:
    #id: tileorigin

    The offset of all tiles from world origin.


Tile Count:
    #id: tilecount

    The number of tiles for each axis.
    
    
Total Size:
    #id: totalsize

    The combined size of all tiles. To get a tile side's size, the 
    __Total Size__ is divided by the __Tile Count__ for that axis.


Tile Index Order:
    #id: tileindexorder

    Specifies whether to use row-major or column-major for the tile indexing.


Write Tile Attributes:
    #id: writetileattrs

    If enabled, writes out the tile origin, total tile size, tile count,
    intersecting tile's position, intersecting tile's minimum bounds,
    and intersecting tile's maximum bounds. This can be useful for visualization.
    
    
== Source ==

The source geometry is specified by attributes on work items.

Attribute Type:
    #id: srcattrtype

    The type of attribute for the source geometry.

    Points String:
    Points are specified as a string attribute. Similar to the __Coordinates__
    parameter in [curve|Node:sop/curve]


    Points Vector:
    Points are specifed as a position vector. An example is the P attribute
    for position.


    Bounding Box:
    The source geometry is a bounding box with min and max bounds.


Points Attribute:
    #id: ptsattrname

    Specifies the name of the points attribute.
    
    
Points Connected:
    #id: connectedpts

    Specifies whether the points are connected (e.g. curve) or disconnected.
    
    
Point Radius:
    #id: ptradius

    Specifies the radius of each point for intersection test.


Min Bounds Attribute:
    #id: minattrname

    The name of the attribute for the minimum bounds.


Max Bounds Attribute:
    #id: maxattrname

    The name of the attribute for the maximum bounds.

    
    
== Advanced ==

These are advanced parameters that provide finer control over the behavior of
the partitioner.

[Include:partitioner_common#pdg_removestale]

[Include:partitioner_common#pdg_alwaysevaluate]

[Include:partitioner_common#pdg_partitionsort]

[Include:partitioner_common#pdg_dirtymode]

[Include:partitioner_common#pdg_partitionwhen]

[Include:partitioner_common#pdg_partitiontarget]

    
    
@related
- [Node:top/partitionbybounds]

