#type:	    node
#context:   top
#internal:  jsoninput
#icon:	    TOP/jsoninput

= Json Input =

"""Extracts data from JSON files and creates attributes"""

This node will read in JSON files and extract data that is specified by the
user. The user can specify the name of the work item attribute in which the data
will be placed as well as its type and list index.

@parameters

== Node ==

Operation:
    #id: op

    This specifies the retrieval operation that you want to perform.

    <b>Retrieve</b>

    This operation allows single data extractions to be performed on the JSON
    file. For example, it can be used to query a specific value in an object or
    a value at a certain index in a list. The Data Extractions multiparameter
    specifies the extractions that should be performed on the JSON.

    <b>Array Retrieve</b>

    This operation allows a specified field to be extracted from each index of a
    list within the JSON file.

Data Extractions:
    #id: extractmult

    The parameters in this multiparameter are used to specify the data
    extractions that should be performed when using the <b>Retrieve</b>
    operation.

Query:
    #id: query#

    This parameter is used to specify the path to the JSON object or value that
    you want to extract. It uses a hierarchical syntax separated by "/"
    characters to specify the path. If an list is within the hierarchy, a number
    can be used to specify the array index.

    If we have the following JSON file:

    <code>
    {
	"plants" :
	[
	    { "name" : "tree", "inMyGarden" : true, "height" : 5.5 },
	    { "name" : "sunflower", "inMyGarden": false, "height" : 3 }
	]
    }
    </code>

    And we wanted to retrieve the height of the first plant, the query would be:

    <code>plants/0/height</code>

    If we wanted to retrieve the name of the second plant, the query would be:

    <code>plants/1/name</code>

    When performing the <b>Array Retrieve</b> operation, the query <i>must</i>
    point to a list in the JSON.

Field:
    #id: field

    This parameter is only used when the <b>Array Retrieve</b> operation is
    being performed. It is used to specify the property that should be retrieved
    from <b>each</b> array index in the list pointed to by the query.

Attribute Name:
    #id: attributename#

    This specifies the name of the work item attribute to store the extracted
    value in.

PDG Value Index:
    #id: valindex#

    This specifies the index of the work item attribute's list to store the
    extracted value in.

PDG Attribute Type:
    #id: valtype#

    This specifies the type of the data. It can be a string, integer, or float.

== Processor ==

[Include:processor_common#pdg_workitemgeneration]

@related
- [Node:top/jsonoutput]
