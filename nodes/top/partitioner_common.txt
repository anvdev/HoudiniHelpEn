#type: include

Merge Input Attributes:
    #id: pdg_partitionmerge

    When this toggle is enabled the partitioner will merge the attributes
    of the work items in each partition and export them to the partition
    itself.


Use Dynamic Partitioning:
    #id: pdg_dynamicpartition

    When this toggle is enabled the partitioner will wait for all input
    work items to be generated before partitioning them. If the input work items
    are dynamic, this means the partitioner will have to wait for and
    depend on the parent(s) of those items.


Auto Remove Stale Dependencies:
    #id: pdg_removestale

    When recooking the node, indicates that the partitioner should remove
    old dependencies if the partitioning scheme changes as a result of the
    cook.


Force Re-Evaluation on Cook:
    #id: pdg_alwaysevaluate

    Forces the partitioner to re-evaluation the partitioning scheme even if
    all of the work items are already cooked and no new work items have
    been added.


Partition Target:
    #id: pdg_partitiontarget

    This parameter is only enabled when using dynamic partitioning. When the
    target is set, the partition scheme will be applied to the work items in
    the target TOP node instead of the input work items.
    
    The target TOP node must be a processor in the same graph above this
    node, and there cannot be any other mappers or partitioner between this
    node and the target.

Partition When:
    #id: pdg_partitionwhen

    This parameter is only enabled when using dynamic partitioning. It controls
    when the partitioning step is performed on the input work items.

    Input Items Are Generated:
	Inputs are partitioned once all of them have been generated.

    Input Items Are Cooked:
	Inputs are partitioned once all of them are cooked. This is required when
	the partitioning scheme is based on the results of the work items'
	execution.

	This makes this partitioner behave like a 
	[Wait for All|Node:top/waitforall] except that it may create
	multiple partitions.

Sort Partition By:
    #id: pdg_partitionsort

    Determines the order that work items are sorted when accessing the
    partitioned items. This also affects the sort order of output files on
    the partition.

    None:
	No sorting is applied - the work items in the partition are handled in 
	no particular order.

    Work Item Index:
	Work items in the partition are sorted based on their index

    Input Order:
	Work items in the partition are sorted based on the order of inputs to the
	partitioner itself. If two work items are from the same input, they
	are then sorted by index.

Dirtying Mode:
    #id: pdg_dirtymode

    The dirty mode parameter offers fine grained control over when a partition
    is dirtied and the effects on child items when that occurs. This parameter
    is particularity useful for working around some of the limitation of using
    dynamic partitioning.

    Standard:
	A given partition will be dirtied when any of the work items in the
	partition are dirtied. In the case of dynamic partitioning, if any
	ancestor of a dynamic work item in a partition is dirtied, then __All__
	partitions will be dirtied.

	When a partition is dirtied all of its children are deleted.

    Non-destructive:
	The same dirtying behavior as __Standard__, except when a partition is
	dirtied its children will be dirtied instead of deleted.

    Mapping Standard:
	A given partition will only be dirtied if an item in the partition is
	dirtied or if the partition's contents changes as a result of a recook.
	When the partition is dirtied, any child work items will be deleted.

    Mapping Non-destructive:
	The same as __Mapping Standard__, except when a partition is
	dirtied its children will be dirtied instead of deleted.

Partition From Secondary Input:
    #id: paritionsecondary
    
    When this parameter is toggled on, the role of the primary and secondary
    inputs are reversed. A partition is created for each secondary input item,
    and primary input items that successfully compare against each secondary
    item are put into those partition(s).
