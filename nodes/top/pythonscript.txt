#type:     node
#context:  top
#internal: pythonscript
#icon:     MISC/python

= Python Script =

"""Creates work items that run a script"""

This node creates work items that run a Python script either in process or as
a scheduled job. In-process scripts can access a larger amount of information
about the PDG graph, as well as other objects and settings within the current
Houdini session. If the script is run out of process it is limited to accessing
the attributes of the work item it is associated with, and anything the script
can import itself.

The node will always created exactly one work item per upstream item, with the
__Python Code__ field as the work to be done for that item. To generate custom
work item configuration, the [Python Processor|Node:top/pythonprocessor] node
should be used instead.

@top_attributes

::`script`:
    #type: string

    The Python script that the work item will execute.

@parameters

[Include:processor_common#pdg_workitemgeneration]

Evaluate In Process:
    #id: inprocess

    Indicates whether or no the script should be run in the current Houdini
    process.

Python Bin:
    #id: pythonbin

    When running out of process, this parameter determines which Python
    executable to use to run the script.

Custom Python Bin:
    #id: python

    When __Python Bin__ is set to __Custom__ this parameter is evaluated to 
    determine the path to the Python executable.

Python Arguments:
    #id: pythonargs

    Extra arguments passed to the Python executable itself to configure the
    behavior of the interpreter.

Script Arguments:
    #id: extraargs

    Arguments passed to the Python script. These values are accessible in the
    script through `sys.argv[1:]`.

Reset Python Path Variables:
    #id: resetpython

    When this toggle is enabled the PYTHONHOME and PYTHONPATH variables defined
    by Houdini are reset in the external Python process. This is necessary when
    using a Python version that is incompatible with the one built into Houdini.

Python Code:
    #id: script
    
    The Python code that is run for each work item.
    
    When running out of process, the code is saved to disk an executed using the
    specified Python interpreter. The script has access to the `work_item`
    variable which provides an API to access the name, index, frame and
    attributes of the work item associated with the script. Additionally, the
    `intData`, `floatData` and `strData` helper functions can be used to
    query attributes on the work item.

    When running in-process the script is run using the Python interpreter
    embedded in Houdini. In addition to the `work_item` variable, the `self` and
    `parent_item` variables are also available. The former is a reference to the
    node that owns the work item, and the `parent_item` variable is a reference
    to the parent or `None`.

@related
- [Node:top/pythonprocessor]
