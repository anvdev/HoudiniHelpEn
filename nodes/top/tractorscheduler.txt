#type:     node
#context:  top
#internal: tractorscheduler
#icon:     TOP/tractorscheduler

= Tractor Scheduler =

"""Schedules work items using Pixar's Tractor."""

This scheduler allows the use of Pixar's Tractor to schedule work items on a farm of remote machines.

This requires Pixar's Tractor to be installed and set up on the local machine.  The installed __tractor__ directory containing Python scripts must be specified in __PYTHONPATH__. For example, on Windows this directory is typically located at: C:\Program Files\Pixar\Tractor-2.2\lib\python2.7\Lib\site-packages

@top_attributes
::`tractor_id`:
    #type: integer

    When the schedule submits a work item to Tractor, it will add this attribute to the work item in order to track the Tractor Job and Task IDs.  The first element is the Job jid and the second element is the Task tid.

@parameters

== Scheduler ==

These are global parameters for all work items using this scheduler.

Submit Graph As Job:
    #id: submitjob

    Called when the scheduler should cook the entire TOP Network as a standalone
    job. Displays the status URI for the submitted job.

Tractor Server Hostname:
    #id: tractor_hostname

    The Tractor server address.

Tractor Server Port:
    #id: tractor_port

    The Tractor server port.

Tractor User:
    #id: tractor_user

    User name for Tractor server login.


Tractor Password:
    #id: tractor_pass

    Password for Tractor server login.

Job Title:
    #id: jobname

    The title of the top-level Job for submitted cooks.

Job Priority:
    #id: tractor_priority

    The priority of cook Jobs.

Tier:
    #id: tractor_tier

    List of valid site-wide tiers, where each tier represents a particular global job priority and scheduling discipline.

Projects:
    #id: tractor_projects

    Names of project affiliations for this job.

[Include:_scheduler_common#pdg_workingdir]

Python Executable:
    #id: pythonexe

    The full path to the python executable on the farm machines.  This is used to execute the job wrapper script for PDG work items.

== Shared File Root Path  ==
NFS:
    #id: nfsremotesharedroot

    The path to the shared file root for farm machines in the NFS zone.

UNC (Windows):
    #id: uncremotesharedroot

    The path to the shared file root for farm machines in the UNC zone.

==$HFS Path  ==
NFS:
    #id: tractor_nfshfs

    The path to the houdini installation for farm machines in the NFS zone.

UNC (Windows):
    #id: tractor_unchfs

    The path to the houdini installation for farm machines in the UNC zone.

==Message Queue==
Task Callback Port:
    #id: taskcallbackport

    Set the TCP Port used by the Message Queue Server for the XMLRPC callback API.  The port must be accessible between farm blades.

Relay Port:
    #id: mqrelayport

    Set the TCP Port used by the Message Queue Server connection between PDG and the blade that is running the Message Queue Command.  The port must be reachable on farm blades by the PDG/user machine.

== Job Parms ==

These job specific parameters can be overridden by each node under the __Tractor Scheduler__ tab on the node's __Schedulers__ parameter interface.

Service Key Expression:
    #id: tractor_servicekeys

    The job service key expression. Used to specify the type of blade that supports running this job.

Limit Tags:
    #id: tractor_limittags

    The job limit tags. This is a space-separated list of strings representing the tags to be associated with every command of the job.

At Least Slots:
    #id: tractor_atleast

    The minimum number of free slots that must be available on a Tractor blade in order to execute this command.

At Most Slots:
    #id: tractor_atmost

    If enabled, the maximum number of free slots that this command will use when launched.  This will be used as the default value of __Houdini Max Threads__ unless explicitly set.

Houdini Max Threads:
    #id: tractor_houdinimaxthreads

    Set the __HOUDINI_MAXTHREADS__ environment to the given value.  By default __HOUDINI_MAXTHREADS__ is set to the value of __At Most Slots__, if enabled.

    The default of 0 means to use all available processors.

    Positive values will limit the number of threads that can be used. A value of 1 will disable multithreading entirely (limiting to only one thread). Positive values will be clamped to the number of CPU cores available.

    If the value is negative, the value is added to the maximum number of processors to determine the threading limit. For example, a value of -1 will use all CPU cores except 1.

Inherit Local Environment:
    #id: tractor_inheritlocalenv

    When enabled, environment variables in the current session of PDG will be copied into the Job's environment.

Tractor Env Keys:
    #id: tractor_envkeys

    Space separated list of environment keys which are defined in the blade profiles.

Metadata:
    #id: tractor_metadata

    An arbitrary string that will be attached to the task definition.

Job Environment:
    #id: tractor_envmulti

    Additional work item environment variables can be specified here.

Pre Shell:
    #id: tractor_preshell

    Shell script to be executed/sourced before command is executed.

Post Shell:
    #id: tractor_postshell

    Shell script to be executed/sourced after command is executed.

Pre Python:
    #id: tractor_prepy

    Python script to be exec'd in wrapper script before command process is spawned.

Post Python:
    #id: tractor_postpy

    Python script to be exec'd in wrapper script after command process exits.

@related
- [Node:top/localscheduler]
- [Node:top/hqueuescheduler]
- [Node:top/deadlinescheduler]
- [Node:top/pythonscheduler]
