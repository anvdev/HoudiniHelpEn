#type: include

Time Scale:
    Scales the timestep used by the solver. This parameter can be animated.
    This can be used to create bullet-time like effects where the physics of the Bullet solver run at a different rate than the Houdini playbar.
    A value of 2 will cause objects to fall twice as fast, and 0.1 will slow them to a tenth the speed.

Number of Substeps:
    The number of substeps for each simulation step, used by Bullet internally. Increasing this number will increase the resolution of the simulation.
    
    In Bullet's documentation:
    
    {{{
	maxSubSteps = substeps + 1
	fixedTimeStep = timeStep / substeps
	}}}
	
    Houdini adds 1 to `maxSubSteps` to account for roundoff errors during division when substeps > 1.
    
    See [Stepping the World|http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World].

Sleeping Time:
    When an object's speed has been below its linear and angular speed thresholds for this amount of time, the object is eligible to be deactivated and put to sleep. This can improve performance for simulations where there are some stationary objects.
    NOTE:
        An object can only be put to sleep once any nearby objects and objects it is constrained to are also eligible to be put to sleep.

Contact Breaking Threshold:
    Distance threshold used by the Bullet engine when determining whether a cached contact point should be discarded.
    Adjusting this value according to the scene scale may also improve performance, as it influences the margin added to objects' bounding boxes.

== Constraint Solver ==

    Constraint Solver:
        Specifies which constraint solver Bullet will use to resolve collisions
        and constraints. Both solvers parallelize the workload, but differ in the
        strategy they use to do so. __Parallel Gauss-Seidel (Islands)__ will be
        faster in cases that involve many small "islands" of interacting objects
        (for example, a large number of small separate book stacks), whereas
        __Parallel Gauss-Seidel (Graph Coloring)__ should perform better when
        such "islands" are few and large (such as a huge collapsing building).

        Although results obtained with these solvers will generally not be
        identical, qualitative differences should be minor.

    Constraint Iterations:
        The more iterations you use, the more accurate the constraint and collision handling will be.
        
        See [Advanced constraint solver settings|http://bulletphysics.org/mediawiki-1.5.8/index.php/BtContactSolverInfo].

    Solve Tolerance:
        Allows the constraint solver to terminate before performing the full number of __Constraint Iterations__ if it is close enough to the solution.
        Larger values can increase performance at the cost of accuracy.

    Randomize Constraint Order:
        Specifies that the constraints should be randomly reordered before each
        of the __Constraint Iterations__. This may improve stability, but
        incurs a minor performance hit.

    Ensure Islands are Independent:
        Specifies that the solver should ensure that changes to an island of interacting objects (including adding, removing, or repositioning objects) do not cause other islands to produce different simulation results, unless those changes cause the objects to interact.
        Otherwise, the solver only guarantees that resimulating with the exact same input to the solver will produce the same results.
        Enabling this option may incur a minor performance hit, and may change the simulation results slightly.

    Contact CFM:
        Increasing the CFM (constraint force mixing) parameter will make
        contact constraints softer, and may increase the stability of the
        simulation. Contact constraints may be violated by an amount
        proportional to this parameter times the force that is needed to
        enforce the constraint.

    Contact ERP:
        Specifies what proportion of the constraint error for contact
        constraints will be fixed during the next simulation step. If ERP
        (error reduction parameter) is set to 0, constrained objects will drift
        apart as the simulation proceeds. If ERP is set to 1, the solver will
        attempt to fix all constraint error during the next simulation step
        (however, this may result in instability in some situations). A value
        between 0.1 and 0.8 is recommended for most simulations.

    Split Impulse:
        Tries to make interpenetrating objects split without adding velocity (to keep objects from explosively flying apart).
        
        See [Split Impulse|http://bulletphysics.org/mediawiki-1.5.8/index.php/BtContactSolverInfo#Split_Impulse].

    Penetration Threshold:
        __Split Impulse__ only applies when objects interpenetrate by more than this distance. This number should be negative (representing less than 0 distance between the objects).
        
        See [Split Impulse|http://bulletphysics.org/mediawiki-1.5.8/index.php/BtContactSolverInfo#Split_Impulse].

    Split Impulse ERP:
        Overrides the __Error Reduction Parameter__ for contact constraints
        where the penetration distance is within the __Penetration Threshold__
        and __Split Impulse__ is enabled.
