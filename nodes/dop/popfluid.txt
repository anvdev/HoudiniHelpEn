#type: node
#context: dop
#internal: popfluid
#icon: POP/fluid

= POP Fluid =

"""Controls local density by applying forces between nearby particles."""

POP Fluid applies forces between nearby particles of a
[POP Object|Node:dop/popobject] in an attempt to maintain the goal __Particle
Separation__. This node can be used to capture simple fluid effects (such as
cohesion and basic surface tension) with points.

@inputs
    [Include:standard_pop_inputs]

@outputs
    [Include:standard_pop_outputs]

@parameters

[Include:standard_pop_parms#commonMain/]

Time Scale:
    An overall scale applied to the actual timestep.

== Parameters ==

Projection Type:
    #id: projectiontype
    This parameter governs which particle properties will be affected. Best
    results are achieved in __Update Positions__ mode.

    __Update Positions__:
        The particle positions and velocities will be updated.
    __Update Velocities__:
        Only particle velocities will be updated.
    __Update Forces__:
        Each particle's `force` attribute will be updated.

Velocity Blend:
    #id: velocitymix
    When __Projection Type__ is set to __Update Velocities__, this parameter
    controls how the constraint velocity is to be combined with the particle's
    velocity. Value of 1 causes the particle's velocity to be completely
    overridden, while value of 0 ignores the constraint velocity altogether.

Particle Separation:
    #id: particleseparation
    The desired distance between nearby particles.

Constraint Iterations:
    #id: constraintiterations
    The number of iterations of constraint projection to perform. More
    iterations allow __Particle Separation__ to be matched more closely at the
    cost of running time.

Constraint Stiffness:
    #id: defstiffness
    The stiffness determines how closely __Particle Separation__ will be
    matched. Stiffer constraints have a lower tolerance for deviation from the
    goal, but can be unstable.

Maximum Acceleration:
    #id: maxacceleration
    The maximum acceleration that can be applied to a particle by constraints.
    Lowering this parameter can help in mitigating instabilities.

Tensile Radius:
    #id: tensileq
    Particles apply repulsive forces on their neighbors to prevent clustering.
    This parameter determines the distance (as a fraction of the particle's
    kernel radius) at which this force is equal to __Tensile Strength__.

Tensile Strength:
    #id: tensilek
    Magnitude of the repulsive forces between nearby particles.

Viscosity:
    #id: enableviscosity viscosityc
    Enabling viscosity causes velocity diffusion, resulting in more coherent
    motion among nearby particles.

Vorticity Confinement:
    #id: enablevorticityconfinement vorticitystrength
    Counteracts energy dissipation by maintaining vortices.

Use OpenCL:
    #id: useopencl
    Use the OpenCL device to accelerate computations.

== Neighbors ==

Neighborhood Size:
    #id: desiredneighbors
    The desired number of points in each particle's neighborhood.

Adaptive Range:
    #id: enableadaptiveradius adaptiveradiusrangemin adaptiveradiusrangemax
    Range of allowed kernel radii, as multiples of a global radius. Disabling
    this option forces use of a fixed kernel radius for all particles.

Max Neighbors:
    #id: maxneighbors
    The number of points in a particle's neighborhood is not allowed to exceed
    this value. Only applies when __Adaptive Range__ is turned off.

Construction Frequency:
    #id: constructionfrequency
    Number of times neighborhoods are constructed in a substep.

    NOTE:
        It is only safe to reduce __Construction Frequency__ below 1 if
        particles are not being deleted from the bound geometry.

== Bindings ==

Geometry:
    #id: bindgeo
    The name of the simulation data to apply the POP node to. This commonly is
    Geometry, but POP Networks can be designed to apply to different geometry if
    desired.

Stiffness Attribute:
    #id: stiffnessattrib
    The name of the point attribute that determines the constraint stiffness for
    each particle. Note that the value of this attribute will be scaled by
    __Constraint Stiffness__ to obtain the actual stiffness.

Output Density:
    #id: outputdensity densityattrib
    When enabled, the last computed density for each particle is stored in the
    specified attribute.

