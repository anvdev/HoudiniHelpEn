#type: include

Shape Stiffness:
    #id: shapestiffness

    This determines how strongly the Solid Object resists changes in shape. In the isotropic use case (Anisotropic Strength all 1), this physical constant is also known as shear modulus, modulus of rigidity, or Lame's second parameter. If the units of length are set to meters, then the Shape Stiffness parameter has units of GPa.

Volume Stiffness:
    #id: volumestiffness

    This determines how strongly the Solid Object resists changes in volume. In the isotropic use case (Anisotropic Strength all 1), this physical constant is also known as Lame's first parameter.  If the units of length are set to meters, then the Shape Stiffness parameter has units of GPa.

Damping Ratio:
    #id: dampingratio

    This value should lie between 0 and 1. It controls the rate of energy loss as a result of the rate of deformation. A value of 0 means that there is no loss of energy due to internal damping forces. A value of 1 means that the object is critically damped, in which case the object comes to rest in the quickest possible way without oscillating. The higher the damping ratio, the less the solid oscillates and the quicker the object's motion will come to rest. The effect of damping is independent of your geometry's resolution.

Mass Density:
    #id: volumemassdensity

    This is the mass per cubed length unit. The mass density can be made lower or higher in parts of the object using the primitive attribute `volumemassdensity`, which works as a multiplier for the parameter. The higher the mass density, the less the object tends to accelerate as a result of any internal or external forces (F = m a, Newton's second law).

Enable Fracturing:
    #id: enablefracturing
    
    This enables or disables all fracturing for this object.
        
    NOTE:
        Before any fracturing can occur, __Enable Fracturing__ must also be enabled on the [FEM Solver|Node:dop/finiteelementsolver].

Fracture Threshold:
    #id: fracturethreshold

    The amount of relative stretch that will cause the geometry to break up into separate parts during the simulation. For example, if the threshold is set to 0.1, the geometry will break in places where there is more than 10% stretch compared to the rest geometry.

    Realistic solid objects are not equally strong everywhere, there are weak parts that tend to fracture before any other parts. To create these relatively weaker parts you can create a vertex attribute called `fracturethreshold`. This attribute is a multiplier for the __Fracture Threshold__ parameter, so that you can still use the __Fracture Threshold__ to control the overall strength of the object.

Friction Coefficient:
    #id: friction

    The coefficient of friction of the object. A value of 0 means the object is frictionless. This governs how much the velocity that is tangential to the contact plane is affected by collisions. When two objects are in contact, the solver multiplies the friction coefficients of the involved object to get the effective friction coefficient for that contact.

Anisotropic Strength:
    #id: aniso
    
    These values allow you to make the internal forces of the Solid Object behave in an anisotropic way; in that case, the amount of stress will differ depending on the direction in which the object is deformed. An example of an anisotropic material is wood, which has a different strength along the grain than perpendicular to the grain. The `materialuvw` vertex or point attribute can be used to specify the internal directions of the Solid Object's internal force model. For example, in the case of wood, the U direction could be aligned with the grain of the wood, while the VW coordinates are chosen perpendicular to the grain of the wood. In this case, the strength along the grain can be separately controlled using the U component of the __Anisotropic Strength__.
