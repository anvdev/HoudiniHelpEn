= Stash =

#type: node
#context: chop
#internal: stash
#icon: CHOP/stash
#tags: network, util

"""Caches the input motion in the node on command, and then uses it as the node's output."""


== Overview ==

When you click __Stash input__, the node will cook the input and cache the motion in a data parameter. The node does not otherwise cook its input and will simply output the cached motion. (You can even disconnect the input and the node will continue to output its stored geometry.) You can click __Stash input__ again to re-cache if the input changes.

This node is conceptually very similar to [locking|/network/flags#chop] a Null CHOP, however it has several additional features:

* The interaction is slightly more convenient.

* You can modify or overwrite the cached motion with [Hom:hou.Motion] objects through scripting.

* You can link the motion parameter to a parameter on a parent [asset|/assets/].  This allows assets to inject motion into a network without making the contents editable.

* The node never passes the input directly to the output, so Houdini doesn't see downstream nodes as depending on upstream nodes. This is useful if a live connection would create a dependency cycle.


== Notes ==

* The stashed motion is saved as part of the node instance when you save the scene, so stashing large motion can bloat the size of the `.hip` file.

* You can discard the cached motion by disconnecting the node's input and clicking __Stash input__.

@parameters

Motion Stash:
    The data parameter (internal name `stash`) where the node stores the motion.

Stash Input:
    Click to cook the input and cache its motion in the data parameter above. Once motion is cached, the node will output the cached motion.
