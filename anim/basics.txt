= Animation basics =

#bestbet: key keys autokey anim animate animation

Hello there

== How to set keyframes ==

:vimeo:Set keyframe
    #id: 116173730

At the object level, [select|/basics/select] and [transform|/basics/handles#basic-handles] objects and characters to position them for keyframing.

Selecting an object automatically adds commonly animated parameters to the [channel list|/ref/panes/chanlist]. To add other parameters, or change which parameters are automatically added to the channel list, see [Working with the Channel List|scope].

:task:Set keyframes on parameters in the channel list:
    Press the __Key__ button on the playbar, press ((K)) or choose __Edit > Set Keyframe__.

:task:Set keyframes on all parameters of the current operator's active handle:
    ((Ctrl + K))

    Press ((RMB)) on the handle and choose __Keyframes > Set Keyframe__.

:task:Set keyframes on the selected object's position:
    ((Shift + T))

:task:Set keyframes on the selected object's rotation:
    ((Shift + R))

:task:Set keyframes on the selected object's scale:
    ((Shift + E))

:task:Key everything:
    Press ((Ctrl + A)) to select all, then press ((K)).

:task:Protect certain parameters from being keyframed:
    In the parameter editor pane, press ((RMB)) on the parameter and choose __Lock Parameter__.

:task:Automatically create keyframes whenever you change parameters (auto-key):
    Turn on Auto key on the playbar by using the down arrow menu to the right of the keyframe button on the playbar.
    When Auto key is enabled, the keyframe button has a different look.
    See [auto-key|autokey] for more information.

See also [how to edit keyframes and channels|edit].

TIP:
    You can set the default curve function for new keyframes in the [animation preferences|/ref/windows/mainprefs#anim] (__Edit > Preferences > Animation__).

== How to set and manage keyframes in the parameter editor ==

:task:Set a keyframe on a parameter:
    * Press ((RMB)) on a parameter and choose __Keyframes > Set Keyframe__.

    * As a shortcut, you can click the parameter with ((Alt + LMB)) to set a keyframe.

:task:Remove a keyframe:
    # Move the playbar to the keyframe for the parameter.

    # Press ((RMB)) on a parameter and choose __Keyframes > Remove Keyframe__. As a shortcut, you can click the parameter with ((Ctrl + LMB)) to remove a keyframe.

:task:Remove a keyframe on all parameters in the Channel List:
    # Move the playbar to the keyframe for the parameter.

    # Press ((Delete)) with the mouse on the playbar.


:task:Move the playbar to the next/previous keyframe for a parameter:
    * Press ((RMB)) on a parameter and choose __Keyframes > Step to Previous Key__ or __Keyframes > Step to Next Key__.

TIP:
    For parameters with multiple components (for example, a position parameter with X, Y, and Z values) you can click individual component text boxes, or click the parameter label to affect all components at once.

== Color coding for keyframes and parameters == (colors)

Houdini color-codes the background of parameter edit fields in the parameter editor, and the keyframe ticks on the playbar timeline, according to the current keyframe status. The playbar's keyframe button uses the same color-codes to give a quick status for all the keys at the current frame.

"Pending changes" means you've changed one or more parameters so the value is different from the previous keyframe, but you haven't set a keyframe to save those changes yet.

The timeline only shows key markers for the parameters in the Channel List. The __Global Set Key__ animation preference controls if all the channels or only selected channels are displayed on the timeline.

Background ||
    Timeline mark ||
        State ||
Green |
    Green |
        *Keyed*
        
        This component is animated and you're on a keyframe.

|
    Bright green |
        *Partial key*
            
        One or more of the channels are keyed at this frame, but not all.
    
Yellow |
    Orange |
        *Pending changes*
            
        You've changed this component on a keyframe, but not committed the change.

        You can set Houdini to [automatically commit|autokey] changes on keyframes.

Light blue |
    |
        *'Tween*
            
        This component is animated (either with keyframes or an expression), but you're not on a keyframe.

        (Click the name of a parameter to switch between showing the current value and the expression.)


Steel blue |
    |
        *Disabled key*

        This component is animated (either with keyframes or an expression), but the channel is disabled in the [dopesheet|/ref/panes/dopesheet].

== How to animate an object moving along a path curve ==

Use the [Follow Path tool|/shelf/constraintpath] on the *Constraints* shelf tab.
    
== View the animation curves for keyframed parameters ==

See [working with the channel list|scope] , [channel list|/ref/panes/chanlist] and [animation editor|/ref/panes/animeditor].


