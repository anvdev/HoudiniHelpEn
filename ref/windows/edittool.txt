= Edit tool window =

#helpid: h.shelf.edittool

== Creating and editing shelf items ==

See [customizing the shelf|/shelf/customize] for information on rearranging the shelf.

TIP:
    To make a shelf item that creates a node or group of nodes, you don't need to script the item yourself. Just drag the node or nodes from the network editor onto the shelf.

# In the shelf, right click the tab background and choose __New tool__, or right-click an existing icon and choose __Edit tool__.
        
# Set the item's __Name__ (an identifier that must be unique across all tabs), and __Label__ (the human-readable label that will appear in the tooltip and when the shelf is set to display text).

== Embedding tools in digital assets ==

The __Tools__ tab of the [type properties window|/ref/windows/optype] lets you specify the options for item(s) that added to the [tab menu|/basics/tabmenu] for a [digital asset|/assets/]. This lets you, for example, write a script, and specify a different submenu name (by default all digital assets show up in a submenu named "Digital Assets").

== Window controls ==

Save to:
    The `.shelf` file to save the tool into. The default is `$HOME/houdiniX.X/toolbar/default.shelf`, which makes the tool available to you. To make the tool available for other people to put on their shelf, add it to a `.shelf` file in some central location.
    
    Any shelf files you save should be in $HOUDINI_PATH in a `toolbar` folder, or in a directory in the `$HOUDINI_TOOLBAR_PATH` if it is defined. Shelf files must have a `.shelf` extension.

    You can load a `.shelf` file from the path by choosing it from the __Shelf Sets__ submenu of the [Smallicon:BUTTONS/pane_menu] shelf menu.

== Options tab ==

Name:
    #id: name
    Internal name of the shelf item. This must be unique across all loaded
    shelf tools. Must start with a letter, can contain letters, numbers,
    and/or underscores.

Label:
    #id: label
    The human-readable name of the shelf item, appears in the
    [tab menu|/basics/tabmenu]. The label should be
    relatively short (two to four words) but as descriptive as possible.

[Include:optype#icon]

== Script tab ==

Script language:
    The language of the script. This lets you write this script in HScript, but doing so does not offer any of the advantages of Python, and the script cannot be selection/context aware. We strongly encourage you to use Python instead.
    
External editor:
    Click __Launch__ to edit the script in an external editing program (defined by the `$EDITOR` environment variable). When you save and quit the external editor, your changes will appear in the Edit tool window.
    
Script:
    Enter the script to run when the user clicks the shelf item. See [writing a tool script|/hom/tool_script].

== Help tab ==

You can write or paste [wiki-formatted|/help/format] help for the item here, or specify a URL the help should be loaded from.

This help is displayed when the user hovers over the item and presses ((F1)). When you write the help in wiki format, Houdini uses its "summary" text as the item's tooltip (see the [wiki format documentation|/help/format] for information on summaries).

== Context tab ==

The options on this tab control on which tab menus (in which network contexts) the item appears, when the user opens the [tab menu|/basics/tabmenu] in the viewer or network editor.
    
The __Tab submenu path__ controls which sub-menu of the tab menu the item appears in. You aren't restricted to the submenus containing the original Houdini tools -- you can type a new name here and Houdini will create the corresponding submenu on the tab menu.

== Hotkeys tab ==

This tab lets you specify hotkeys for the item. You can give the item a __Global__ hotkey that works everywhere, and/or a hotkey that only works when the mouse is in the network editor pane, scene view pane, or compositing view pane. 

Refer to the [Hotkey editor|/ref/windows/hotkey] to avoid possible conflicts with existing hotkeys.

            
@related

- [HOM|/hom]
