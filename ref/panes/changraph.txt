= Graph View =

The graph view lets you view and edit animated parameters as graphs of
their values over time. It is one view of the animation editor. You can
also use the [table view|chantable]  and the [dopesheet view|dopesheet]
to edit animation.
To switch between these views, use the buttons in the top left corner of the pane.

[Image:/images/ui/channel_graph.png]

A channel contains a series of segments. Each segment has two end
points. Each endpoint is at a key and has the following properties:
value, slope, and acceleration. The segment as a whole also has a
segment function associated with it and, depending on what it is, will
use any number of the properties at the end points. For example, the
constant() segment function uses the "value" of the first end point
only, while the [bezier|Exp:bezier] segment function uses all three
(slope, acceleration, and value) at each end.

== Navigation ==

:task:Pan and zoom the view:
    * Drag ((RMB)) to zoom and ((MMB)) to pan.

    * To pan and zoom so all graph data is visible, click the __Home
      graph__ icon in the toolbar on the left side of the graph, or
      choose __View > Home All Graphs__.

    * To show all data, choose __View > Home All Views__.

    * To have Houdini automatically pan and zoom so all data stays
      visible as you work, turn on __View > Horizontal Adapt__
      and/or __View > Vertical Adapt__.

:task:Change the current time:
    * A tall white vertical line on the graph indicates the current
      time. Drag the line to change the time. Drag with ((MMB)) to
      hold the values of the parameters in the Channel List.

    * Click or drag in the blue frame number area at the bottom of
      the graph to move the play position to that point.

    * You can also use the regular  [playbar
      controls|/anim/playbar] .

== Adding and deleting keys ==

:task:Add a key:
        * Click the graph with ((Alt + LMB)) to create a new keyframe at that frame. This will only work when adding keyframes to existing channels. You can also hold the button down and drag the insertion point along the curve, allowing more accurate positioning. If a key already exists on a selected channel, this will not create a duplicate key.
                      
        * ((Ctrl + K)) with mouse over the graph adds a keyframe for the selected channels.
        
        * ((K)) or ((LMB)) on the playbar keyframe button adds a keyframes based on the __Global Set Key__ animation preference.
        
        * ((Alt + LMB)) on a parameter edit box adds a keyframe as well, but only for the selected boxes.
        
        * ((RMB)) on the graph and select __Set Keyframe at Current Time__.
        
        * ((RMB)) on a parameter and select __Keyframes > Set Keyframe__.

:task:Remove a key:
        * Select the key handle and press ((Del)).
        
        * ((RMB)) on the graph and select __Delete__.
        
        * ((RMB)) on a parameter and select __Keyframes__ > __Remove Keyframe__.
        
== Editing curves ==

The following illustration shows the handles at each keyframe. The handles correspond to the text boxes at the bottom of the graph (__Value__, __Frame__, __Slope__, and __Accel__), allowing you to set them to exact numbers. (Some indicators may only appear on the selected key.)

[Image:/images/ui/channel_handles.png]

You can select a segment and choose the "segment function" to control how Houdini connects the two ends of the segment.

[Image:/images/ui/channel_segment_types.png]

You can use automatic or manual control of slope, and tie or untie value, slope, and/or acceleration at each keyframe.

[Image:/images/ui/channel_handle_types.png]

:task:Change the shape of a graph segment:
    # Select the segment you want to change.

      If segments are drawn as dashed lines, turn on the "functions"
      icon on the toolbar to the left of the graph to make segments
      selectable.

    #  [Choose a function|#ref_panes_changraph_function]  from the
      pop-up menu at the right end of the __Function__ text box
      below the graph, or type a custom expression into the
      __Function__ box directly.
          
        You can also change the shape of the graph segment by clicking the desired function button on the Functions toolbar.

    # Use the handles (if any) on the selected keys in the graph
      view to adjust the shape of the curve. Press ((Y)) to switch
      to a scale handle.

      For the [cubic|Exp:cubic], [bezier|Exp:bezier], and
      [quintic|Exp:quintic] functions, you can adjust the shape of
      the curve by dragging the slope handles on keyframes, or by
      clicking the handle and typing a value in the __Slope__ text box.

      For the [bezier|Exp:bezier] and [quintic|Exp:quintic]
      functions, you can also drag the round acceleration handles at
      the end of the slop handles, or by clicking the handle and
      typing a value in the __Accel.__ text box.

      You can also type exact numbers for the selected handle in the
      __Slope__, __Accel.__ (acceleration), and __Value__ text boxes below the
      graph.

:task:Move a keyframe in time:
        Drag the short vertical line that runs through a value handle
        left or right to move the keyframe.
        
        Time values on the graph have a dashed line under them. When
        you turn on the __Snap to Frame__ option, keys will move to
        the nearest frame time when you finish dragging.

:task:Quickly edit curve slopes:
        Select a keyframe and press ((0)) to zero the slope, or ((9)) to make the slope tangent.

:task:"Hold" a value:
        Select the keyframe and use ((Alt + C)) or ((Ctrl + C)) to copy it, move along the timeline, and use ((Alt + P)) or ((Ctrl + P)) to paste a copy of it.

:task:Change a value at a keyframe:
        Drag a keyframe handle up or down.
        
        Click a keyframe handle and enter an exact number in the __Value__ field below the graph and press ((Enter)).

:task:Change multiple values at once:
        Use ((Shift + LMB)) to select multiple handles, or drag a marquee around the handles you want to select. The you can drag one selected handle to move them all.
        
        If you select more than one value, the __Value__ field shows `---`. Edit the field to set all selected values at once.
      
:task:Move a key in X and Y and the same time:
        Hold ((Ctrl)) and drag the value handle.
        
:task:Only affect the acceleration and keep the slope orientation intact:
        Hold ((Ctrl)) and drag the acceleration handle.
        
:task:Select all of the same type of handles on a channel:
        Double-click the handle.
        
        [Image:/images/ui/changraph_handles1.png]
        
:task:Add all of the same type of handles to the existing selection:
        ((Shift)) double-click the handle.
        
        [Image:/images/ui/changraph_handles2.png]
        
        NOTE:
            ((Ctrl + Shift)) double-click will remove of the same type of handles from the selection.
            
:task:Add handles to a box selection:
        Hold ((Shift)) and drag ((LMB)).
        
        [Image:/images/ui/changraph_handles3.png]
        
        NOTE:
            ((Ctrl + Shift)) and drag ((LMB)) will remove handles.

== Gear menu ==

To access the following menus, click the [Icon:BUTTONS/gear] gear menu on the top right corner of the Channel graph. You can also access these menus by clicking ((RMB)) in the graph, or by turning on __Show Menu Bar__ in the __View__ menu.

== Channels menu == 

When a channel is displayed, it means that it is visible for viewing/editing in the animation editor's graph, table, and dopesheet panes.

Set Keyframes at Current Time:
        Adds keyframes to the channels at the current time.
        
Sample Values at Current Time:
    Copies the values of the parameters at the current time
    to the clipboard. Move to a different time and choose __Paste
    sampled values at current time__ to use the same values at
    another frame.
    
Paste Sampled Values at Current Time:
    Pastes values copied with __Sample values at current time__.
    
Import into Displayed Parameters:
    Opens a dialog to load previously saved animation data from __Export Displayed Channels__ into the parameters which are currently displayed.

Export Displayed Channels as:
    This brings up a dialog that allows you to save the data from the displayed channels.

Isolate Channels:
    Displays only the selected channels.

Include Channels:
    This is the opposite of __Isolate Channels__. Instead of displaying only the selected channels, this causes all channels to be displayed.

== Edit menu ==

Cut/Copy/Paste:
    Cuts, Copies, or Pastes all selected handles using the __Paste Settings__.

Paste Settings:
    Channel copy and paste works by storing the selected channel handles in a temporary file. The animated range, channels names, full paths, and row order based on the currently displayed channels are also stored in file. This information can be used to perform a mapping between the copied channel list and the target channel list.

    Using Channel Names:
	Channel mapping is performed based on channel names. This works well to transfer animation from 2 nodes of the same type with the same parameter layout. 
	
	NOTE:
	        Use this with caution when copying multiple transform nodes at the same time, as it will only paste the first occurrence of the channel name.

    Using Full Paths:
	    Channel mapping is performed based on full paths. This works well when doing copy/paste to and from the same channels. It will behave correctly even if the list of channels is changing. This mode won't allow copy/paste to be used to transfer animation from different channels.

    Using Row Order:
    	Channel mapping is performed using the row order in the displayed channels at the moment of the copy operation and the row order at the moment of the paste operation. It counts parameters without valid channels to make it possible to copy/paste to a node without any channels, or a node with a different set of channels.
    
    At Current Time:
    	Paste the copied handles after at the current time.
    
    At Original Time:
    	Paste the copied handles at their original time.
    
    On Parameters with Existing Channels:
    	Paste only on parameters with existing channels.
    	
    On All Parameters:
    	Paste on all the displayed parameters creating missing channels.


Delete:
    Deletes selected channels.

Select All Handles:
    Selects all the handles on the displayed channels.

Select No Handles:
    Clear the handle selection.

Invert Handle Selection:
    Selected handles become unselected. Unselected handles become selected.

Snap Selected Keys to Nearest Frame:
    Each selected key, is rounded in time to the nearest integer frame.

Tie/Untie:
    Tie locks the left and right channels together (changing one changes the other). When channels are untied, you can alter the left and right channels independently.

Set Selection to Default Values:
    Sets the values of the selected keys to their default values. The actual values depend on the parameter of the channels.

Set Selection Slopes to Zero:
    Sets the selected slopes to have a value of 0 (ie. flat horizontally).
    
Set Selected Slopes to Manual/Automatic/Toggle Selected Slopes Mode:
        This controls the new Automatic Slope flag on in and out slopes. When the auto slope flag is __Automatic__, moving a keyframe value or time will affect the tangent and will keep it smooth. When the auto slope flag is __Manual__, the slopes will keep the same orientation when moving keyframes. 
        
        NOTE:
                Keyframes with their slopes set to automatic are drawn as diamonds.

Smooth Selected Slopes: 
    Sets the value of the selected slopes so that there is no overshoot. The slopes of keys on the channel for which it is a local minimum/maximum will be set to 0, while all other slopes will be given an approximate value that will result in a smooth transition between its adjacent keys. Smoothing also normalizes the acceleration values.
    
Set Selected Segments to...:
        Allows you to change the segment function. See the [Function field section|#function] for more information.

Filter Euler Rotations of Selected Channels:
	The Euler filter fixes bad rotation interpolations that happen when animating rotations using Euler angles over large angles. A common issue is the rotation flipping the wrong way between the keyframes.
	
	To apply the filter, select any handles on all 3 rotation channels and apply the filter. The filtering operation is applied to all the channels that have a selected handle and it affects the whole channel. The Rotation Order on the object node affects the filtering operation.

	The filter should only be used on rotation channels. Rotations from multiple objects can be filtered at the same time.

Match Keyframes of Selected Timemarks:
	Creates missing keyframes on channels based of selected time marks. This ensures the channels have matching keyframes within the selection.

Bake Keyframes of Selected Segments:
	Shows a modal dialog with options to perform a `cubic()` curve refiting and resampling on the selected segments. Resampling allows segment expressions and CHOP exports to be baked to keyframes. Channel extrapolation (cycles, cycle offset) can be baked to keyframes, if you provide a range that is outside the channel first and last keyframe.

	Enable Refit Segments:
	        Enable/disable the refitting. Refiting reduces the number of keyframes while trying to keep the same curve shape.
	        
	Refit Preserve Extremas:
	        Preserves the local minimas and maximas.

	Refit Set Bezier function on segments:
	        Even if the refitting creates cubic curves, this forces the segments to be bezier segments.

	Refit Tolerance:
	        The tolerance used to merge keyframe values. It is an absolute value and should be picked based on the actual keyframe values.

	Enable Resample Segments:
	        Enable/disable the resampling. Resampling adds keyframes without changing the curve's shape.
	        
	Resample at every (frame):
	        Adds keyframes at every n frame or fractional frame.
	        
	Resample Tolerance:
	        Tolerance used to merge keyframes while resampling.

	Enable Override Range of Selected Segments:
	        Enable/disable the explict range. If disabled, the channel ranges comes from the selected segments. If enabled, the channel range is overriden by the start and end values. This is useful to bake channel extrapolation, CHOP exports and expressions.
	
	Start/End frames:
	        Defines the start and end frame range to use when Enable Override Range of Selected Segments is checked.

	Bake CHOP Exports to Channels:
		Defines what to do when a parameter is driven by a CHOP export.
	    
	    Off:
		    Don't bake CHOP exports.
	    Bake, Keep Export Flags:
		    Perform the baking but leave the CHOP export flag in place. The parameter will still be driven by the CHOP export, but the baked animation will be present on the channel.
	    Bake, Disable Export Flags:
		    Perform the baking and disable the CHOP export flags on all the CHOP nodes. This doesn't take into account the possibly that the CHOP nodes can be exporting to other parameters. Use it only when you know you are baking all the channels exported from a CHOP node.
	    Bake Create Delete CHOPs and Move Export Flags:
		    Perform the baking and create [Delete CHOP|Node:chop/delete] nodes to disable the exported channels individually.


== View menu ==

Home Channels (Current Graph/All Graphs):
    Pans and zooms the graph to show all keys in the current graph or all graphs.
    
Home Playback Range (All Graphs):
    Zooms the graphs to the playback range. The playback range is the range between the Start Frame and End Frame.

Home Global Range (All Graphs):
    Adjusts the zoom of all the channel graphs to show the .hip file's global animation range.

Frame Selection:
    Adjusts the zoom of the channel graph to show only the selected keys.

Horizontal/Vertical Adapt:
    When these checkboxes are turned on, the graph automatically pans and zooms to keep all horizontal and/or vertical values visible.

Show Values:
    Show or hide handles at keyframes. You can drag the handles to change the parameter value at that keyframe. If the values at the key are tied together, the handle is a box, otherwise it is two independent triangles.

Show Time Marks:
    Show or hide short vertical lines indicating keyframes. You can drag the keyframe lines left or right to move the keyframe in time.

Show Slopes and Acceleration:
    Show or hide short lines indicating the slope and acceleration of segments as they enter and leave a keyframe. You can drag the slope lines and/or acceleration handles to change the shape of the segment (for segments controlled by functions that use slopes and/or acceleration).

Show Functions:
    Allow or disallow selection of segments so you can change the function that controls their shape.

Show Time Groups:
    Show or hide [time groups|#timegroups]. The time group is displayed as a vertical yellow line. Handles that belong to the time group have a dotted yellow line connected them. Dragging the time group line left or right moves the grouped keyframes in time.
    
Show Time Bar:
    Displays a vertical line on the graph which indicates the current frame.

Show Box Handles:
        Displays handles that let you translate and scale blocks of keys. You can also turn this on by selecting a group of keys in the Channel Graph an pressing ((Y)).
        
        You can drag the edges of the box to translate the group of keyframes from side to side or up and down. The axis is locked, so you can only move the keyframes in one direction at a time. To move in both axes together, hold ((Shift)) when dragging the edges of the box.
        
        To scale, select and drag a corner of the box.

Show Box Handle Pivot:
        Displays a pivot handle at the center your box handle. You can also turn this on by clicking ((Shift + Y)) in the Channel Graph. Any scaling will be done around the pivot location.
        
        To move your pivot, simply drag it to another location. To move it back to the center, click ((Shift + Y + Y)). This will turn the pivot off and then on again, moving it back to the center.

Show Handles:
    Choose whether all handles or selected handles are displayed on the graph, or turn all handles off.

Show Full Channel Names:
    Displays the full name of the channel in the graph. For example: box_object1/tx, box_object1/ty, box_object1/tz.

Show Channel Names:
    Displays the name of the channel in the graph. For example: tx, ty, tz.

Show Times for Selected Marks:
    Displays the frame number for selected marks.

Show Values for Selected Keys:
    Displays the graph value for selected keys.

Show Only Attached Time Groups:
    When this option is on, the graph only shows  [time groups|#timegroups]  which have visible keyframes attached.

Draw Past Channel Ends:
    Draws a horizontal dotted line after the end of the last keyframe.
    
Show Color Mode Field:
        If you have scripted a custom coloring scheme using [Hom:hou.ChannelEditorPane#registerColorsCallback], you can turn on this menu to select it.

Show Channel Lister:
    Displays the channel lister on the left side of the animation editor. You must have this checkbox enabled to see the group list, channel chooser, and parameters.
    
Show Channel Chooser:
    Displays the channel chooser in the channel lister on the left side of the animation editor.
    
Show Group List:
    Displays the group list in the channel lister on the left side of the animation editor. The group list shows all channel groups.

Show Layers:
    Displays the Animation Layer Editor in the left pane.
        
Show Menu Bar:
        Allows you to see the menu bar at the top of the pane. These options are also available in the [Icon:BUTTONS/gear] gear menu.

Show Bottom Values Toolbar/Top Timeline/Right Toolbar:
        Allows you to hide the toolbars from the display. These are on by default.
        
        
== Snapshots menu ==

Enable Channel Snapshot:
        Creates a temporary channel copy every time the keyframe animation changes. This can be used to quickly revert a keyframe animation to its previous state.

Persistent Channel Snapshot:
        Keeps the snapshot when the channel editor refreshes to show new channels. 
        
Revert Active Channels to Snapshot:
        Returns the keyframe animation to its snapshot state.
        
Swap Active Channels and Snapshots:
        Interchanges the keyframe animation and the snapshot state.
        
Clear Channel Snapshot:
        Clears the snapshot or accepts the modification. 

== Time Group menu == (timegroups)

    A _time group_ is a collection of keys. A time group makes it easy
    to move keys through time together.

    :task:Group keys together in a time group:
        # Select the keys.

        # In the pane menus choose __Time Group > Create Time Group
          on Selected Keys__.

    :task:Add keys to an existing time group:
        # Select the keys.

        # Shift-select the time group line.

        # Choose __Time Group > Attach/Detach Selected Keys__

    :task:Move the keys in a time group together:
        * Drag the yellow time group line left or right.

    :task:Move the time group line without moving the keys:
        * Drag the time group line with ((MMB)).

    :task:Delete a time group:
        # Click the yellow time group line.

        # Press ((Del)).

== Settings menu ==

Show Audio in Timeline:
    If enabled, a graphical representation will be shown in the bottom portion of the channel graph of the currently loaded audio source.

Synchronize Group Selection From Channel List:
    Adjusts the channel group selection to match the current channels.

Grid Line Density:
    Choose the density of the grid or turn the grid off. 
        
Slope Handle Length:
    Allows you to set the length of the slope handle in the channel graph. The preset lengths are short, medium, and long; however, you can also set a custom length by choosing __Custom__.
    
Curve Quality:
    Choose the accuracy of the curves. Lower levels of detail can be faster for very complex graphs. Minimum detail does not draw curves, just lines connecting keyframes.

Add Keys:
    Customizes the behavior in the channel graph when ((Alt + LMB)) is used to create keys. If set to __At Mouse Click Position__, the new key on the channel will be created at the value where the mouse is in the graph. If set to __At Curve Value__, the key is created at the current value of the channel.

Auto-Smooth Slopes:
    Choose if and when you want your slopes to be automatically smoothed. Smoothing also normalizes the acceleration values.
    
Toggle Auto-Slope Mode Preference:
        Toggles the auto slope preference, which defines the auto slope flag of new slopes when creating keyframes. 
    
Snap Moved Keys to Nearest Frame:
    If enabled, moving keys in the channel graph will ensure that they are always moved to an integer frame value in time.

Snap Scaled Keys to Nearest Frame:
    If enabled, scaling keys in the channel graph (ie. using the scale handle) will ensure that they are always moved to an integer frame value in time.

Bold Non-Integer Keys:
    If enabled, keys at non-integer frame values in time will be drawn in bold and white.

Reset Channels Settings:
    Resets all channel settings to their factory default settings.

== Edit fields ==

Frame:
    The frame number of the selected key or time group. If more than
    one key or time group is selected, the field displays `---`, and
    editing the field sets the value for all selected keys.
    
Value:
    The numeric representation of the selected key's in or out
    value.
    
Slope:
    The slope of the selected key's in or out line. This is only
    valid for  [functions|#function]  such as
    [Exp:cubic] that use slope values.
    
Accel:
    The acceleration of the selected key's in or out line. This is
    only valid for  [functions|#function]  such
    as [Exp:bezier] that use acceleration values.

TIP:
    You can do simple addition, multiplication, and division on the
    current value of the field. Replace the current value with,
    for example:
    
    {{{
    + 1.25
    }}}
    
    ...and press ((Enter)). Use `*` for multiplication and `/`
    for division. To subtract, add a negative number, for example:
    
    {{{
    + -0.5
    }}}

        
== Function field == (function)

    A segment's function controls how Houdini interpolates between
    keyframes.

    Choose a function from the pop-up menu at the right end of the text
    box, or type an expression function directly in the text box.

    table>>
        tr>>
            th>> Function
            th>> Effect
        tr>>
            td>>
                [constant|Exp:constant]
            td>>
                [Icon:CHANNELS/constant]

                Uses the in value for the entire segment, and jumps to
                the out value at the end.

        tr>>
            td>>
                [linear|Exp:linear]
            td>>
                [Icon:CHANNELS/linear]

                Generates a straight line between the in and out values,
                animating the value with uniform speed along the
                segment.

        tr>>
            td>>
                [ease|Exp:ease]
            td>>
                [Icon:CHANNELS/ease]

                Generates motion that gently accelerates the value at
                the beginning of the segment and decelerates it at the
                end. The value starts the animation at rest and ends at
                rest.

        tr>>
            td>>
                [easein|Exp:easein]
            td>>
                [Icon:CHANNELS/easein]

                Generates motion that gently accelerates the value from
                rest at the beginning of the segment and continues
                accelerating until the end.

        tr>>
            td>>
                [easeout|Exp:easeout]
            td>>
                [Icon:CHANNELS/easeout]

                Generates motion that gently decelerates the value to
                rest at the end of the segment.

        tr>>
            td>>
                `easep(2) easeinp(2) easeoutp(2)`
            td>>
                These are fundamentally the same as the ease functions,
                but are raised to the power 2, resulting in steeper
                slopes.

                You can manually change the power in the __Function__
                text box (for example, to 3, 4, 5, etc.) to further
                steepen the curve.

        tr>>
            td>>
                [match|Exp:match]
            td>>
                Makes the slope of the out curve equal to the slope of
                the in curve.

                [Icon:CHANNELS/match]

                In the example above, the segment to the right of the
                key used a Cubic interpolation function. After selecting
                it and altering its interpolation type to Match, its
                slope adjusted to match the slope of the curve segment
                to the left of the key.

        tr>>
            td>>
                [matchin|Exp:matchin], [matchout|Exp:matchout],
                [vmatch|Exp:vmatch]
            td>>
                [Icon:CHANNELS/matchin] [Icon:CHANNELS/matchout]

                See the expression reference pages for these functions.

        tr>>
            td>>
                [cubic|Exp:cubic]
            td>>
                [Icon:CHANNELS/cubic]

                Gives you control over the in and out slopes.

        tr>>
            td>>
                [bezier|Exp:bezier]
            td>>
                [Icon:CHANNELS/bezier]

                Gives you control over the in and out slope and
                acceleration.

        tr>>
            td>>
                [quintic|Exp:quintic]
            td>>
                Like the [bezier|Exp:bezier] function, but uses a
                higher-order curve.

        tr>>
            td>>
                [spline|Exp:spline]
            td>>
                [Icon:CHANNELS/spline]
                <!--TBD-->

        tr>>
            td>>
                [qlinear|Exp:qlinear]
            td>>
                [Icon:CHANNELS/qlinear]

                Generates a spherical linear interpolation in quaternion
                space between the in and out values. This is the default
                for rotation channels.

                This function is intended for rotation channels. Make
                sure all three rotation channels use `qlinear()` and all
                have keys in the same frames.

                Segments with quaternion interpolation will display as
                straight lines in the graph editor, because their
                intermediate values expressed as euler angles are mostly
                meaningless. If you're curious you can use the
                expression `qlinear() + 0` to fool the graph editor into
                showing the actual values.

                To perform a quaternion based interpolation between two
                key frames, the `qlinear()` function needs to know the
                three euler angles. It does this by figuring out what
                the neighboring channels are. This is accomplishes this
                through the heuristic of looking for channels ending
                with `x`, `y`, or `z`, or by looking for channels ending
                with a number. Thus, "`rx ry rz`" will be one group, and
                "`test0 test1 test2`" would be another.

        tr>>
            td>>
                [cycle|Exp:cycle]
            td>>
                <!--TBD-->
        tr>>
            td>>
                [repeat|Exp:repeat]
            td>>
                <!--TBD-->
            




