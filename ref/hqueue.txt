= Hqueue =

== Overview ==

HQueue is Houdini's distributed render and simulation manager.

[Image:/images/hq_clients_table.png]

HQueue allows you to start and manage render and simulation jobs on client machines on the local network that have HQueue installed.

* The [HQueue Render node|Node:out/hq_render] and [HQueue Simulation render node|Node:out/hq_sim] can submit jobs to an HQueue farm.

* The HQueue client works on all platforms Houdini runs on.

* You don't need to install HQueue if you want to simulate or render *on the cloud*. The HQueue render nodes can submit directly to the cloud and you can manage them online without a local installation.

* Technically HQueue can start any script on client machines, not just simulations and renders. Once you have an HQueue farm set up, you can use it to distribute other types of work.

== Documentation ==

* For installation and usage instructions, see the [HQueue documentation|/hqueue/].

== Saving `.hip` files for distribution ==

* The client machines on the HQueue network need to be able to load the Houdini file containing your simulation. Therefore, you need to save the `.hip` file and any external files it depends on to a network-accessible location, such as an NFS or Samba share.

* Because different platforms (Windows, Linux, Mac OS X) handle paths and network shares differently, HQueue provides automatic path translation to allow clients on heterogeneous networks to all load the `.hip` file. This requires that you save the file to a specifically named network share, and have the same network share available at the required locations on all clients, so HQueue can substitute different path prefixes.

    The default network share names are `H:` on Windows, `/mnt/hq` on Linux, `/Volumes/hq` on Mac OS X.

    You can configure different prefixes for different platforms in the HQueue settings file (for example, if you are already using `H:` on your Windows clients). Go to the HQueue server installation directory and edit the settings in `hqserver.ini`.

* In the `.hip` file, make all path references to external files relative to `$HIP`.

* Use forward slashes in paths.

@related

::[/dyno/distribute]
